%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 19.0.0
%%For: (Administrator) ()
%%Title: (ArrowSymbolsicons.ai)
%%CreationDate: 5/7/2016 3:48 PM
%%Canvassize: 16383
%%BoundingBox: 9 11 572 344
%%HiResBoundingBox: 9.80612 11.5186 571.6447 343.6162
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBCustomColor: 0.137255 0.121569 0.12549 (Custom Color 0)
%%+ 0.137255 0.121569 0.12549 (Custom Color 1)
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 287.5 176.5 287.5 176.5
%AI3_TileBox: -129.02 -111.9 667.78 466.02
%AI3_DocumentPreview: None
%AI5_ArtSize: 575 354
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -272 491 1 1645 772 18 1 0 154 187 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 76 8
%%BeginData: 9711 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1EFFA8FD0CFF7DFD0DFFA8FD31FF5227F8F852FD09FF7D7D7DFD
%08FFA8A8FD0AFFA85252FD0BFFF87DFD0BFFF8F8FD0CFF2727FD0BFF5252
%A8FD0BFFA8FD15FF27FD06F8FD06FFA8FD04F827FD07FF52F8A8FD0AFF52
%F827FD0AFF7DF87DFD0AFFA8F8F8FD0BFF7DF827FD0AFF7DF827A8FD09FF
%A827A8FD09FF525227522727A8FFFFFF52F8F82727F8F8F852FD05FFF8F8
%F87DF8F827FD04FFA8A87DF8F852FD06FFA8A8A8FF52F8F8FD06FFA8527D
%52F8F87DFD06FFA8FFA8FF7DF827FD05FFA8FFA8FFA8FF7DF827FFFFFFA8
%A87DA87DA8A852F8F8A8FD07FFA8FF7DF87DFD04FFA8527DFD05F85227A8
%FFFFA8F8F8F827FF27F8F827A8FFFFFF52F8F8F852A8F8F87DFFFF27FD06
%F852FD05FF52FD06F827FD05FF7DFD06F8A8FD04FF7DFD07F852FD04FF27
%FD05F827F8F852FFFFA8FD09F827FD04FF7D27275227527D277DFFFFFF7D
%52FD05F87DFD06FFF8F8F852FFFFF8F8F8FD04FF7DF8A8A8A8FF7DF8A8FF
%FF7D527D52F8F8277DFD05FF7D52527D27F8F87DFD05FFA8F827F8F8F827
%A8FD04FFA82752275252F8F8A8FD04FF7D52527D527D52F8F8A8FFFFA852
%27FD045227F8F852FD04FFA8FD057D2752FD04FF7D27FD05F87DFD06FF27
%F8F827FF27F8F827FD04FF7DF8F8F87DA8F8F8A8FD05FF7DF852A8FD0AFF
%27F87DFD09FFA8F827FD0BFF52F87DFD0BFF27F8A8FD0AFFF8F852FD09FF
%A85252FD05FFFD05A8FFA8FD07FF52F8F85227F8F8F852FD05FFF8F8F87D
%F8F827FD06FF5252FD0AFFA827F87DFD0AFFF8F8A8FD0AFF52F87DFD0BFF
%27F8A8FD0AFF27F852FD0BFF52FD15FF27FD05F827FD06FFA8FD04F827FD
%14FFA8FD0CFF7DA8FD0BFF5252FD0CFF52A8FD30FF5227F82752FD09FFA8
%7DA8FDFCFFFD97FFA8A8A8FD69FF7DFD0AFFA8FD08FF7DF8F8F8FD3FFFA8
%FD16FFA852FD067DA8FD09FF27F8FD08FF5227FD09FF7DF8F827FD0BFF52
%27FD09FF7D277DFD0CFF527DFD08FFA8A8FD0DFF2727FD0BFF7D52A8FD07
%FF52FD07F852FD05FF2752275227F8F8FFFFFD05A852F827FD09FF52F8F8
%F8FD0AFFA8F827FD08FF52F8F852FD05FFA87DA87DA87D27F827A8FD06FF
%52F827A8FD0BFF27F8F8A8FD07FF7D2752277DFFFFA8FD04FF7DF8F8F852
%F8F8F87DFD04FFA85227522727F827A8FFFFF8F8F827F8F8F852FD04FF7D
%FD0427F8F8F827FD05FFA8FFFD04A8F827A8FD04FF7D527DF8F8F852FD04
%FFFD09F8277DFD05FF27F8F8F852FD07FF7D527D52F8F8F852A8FFFFFFA8
%5252A87D52527D7D52A8FFFFFF52F8F8F87DA8F8F852FD09FF2727FFFFFF
%A8FD08F87DFFFFFF52FD08F827FFFFFF7DFD08F87DFD04FFFD07F87DFFFF
%A8FD0BF87DFD05FF27F8F8F827FD06FF27FD07F87DFFFFFFA852FFFFFFA8
%7D527D27A8FFFFFF7DF87D7D7DFF7DF87DFD08FFA87DA8FFFFFFA8F827F8
%27F8F8F852FD04FF7D27275227F8F8F827FD05FFFD05A87DF852FD05FF7D
%527D27F8F87DFD04FFFD09F8277DFD05FF27F8F8F852FD07FF7D527D52F8
%F8F87DFD04FFA87DFD04FF52277DFD05FF52F8272752FF27F852FD06FF27
%27FD08FFA8FFFF52F852FD09FF52F8F8F8FD0AFFA8F827FD08FF52F8F852
%FD04FFA8A87DA87DA87D27F852A8FD06FF52F852A8FD0BFF27F8F8A8FD05
%FFA827FFFFFF7D2752FD06FF7DF8F8F87D27F8F87DFD04FFA827F87D7DA8
%7DA8FD07FF5252FD09FF52F8F827FD0BFF5252FD09FF7D277DFD0CFF527D
%FD09FFA8FD0DFF2752FD08FF7D527D7D5227FD07FF52FD07F852FD04FF7D
%F8F8F827F8F827FD11FF7DF8F827FD3FFFA8FD0BFFA8A8A8FD08FF7D2752
%27272752277DFD05FF52F87DFFFFA8FD12FFA8FD68FF7D27FDFCFFFD69FF
%A87DA8FD0AFFA8FD18FF7DFD0BFFA8A8FD0EFF7DFD0AFFA87DFD15FFA87D
%FD19FF27F8F8F827A8FD07FF5227F82752FD09FF7DA8A8FD09FF27F8FD0B
%FF527DFD0DFF2752FD09FF7DF8A8FD05FFF82752A8A8A827FD08FFA8F852
%FD17FF52F8F827F8F852FD06FFFD06F827FD06FFA8F8F8F87DFD0AFF52F8
%FD07FFA8FFA87DF87DFD04FF7DA8A8A87DA8A8A8F8F87DFD09FF5252FD05
%FF27F8F8F82727F827FD07FFA8F8F852FD08FF7D7D7DA87D7D7DFD07FF52
%F827FFF82752FD05FF27FD04F85227F852FD05FFF8277DA8A8FD04FFA87D
%527D527D52F8F8A8FD04FF27FD06F87DFFFFFF7DFD0AF852FFFFFFFD067D
%F8A8FD04FF27FD08F8A8FD05FFA8F8F8F852FD07FF27FD07F8A8FD04FFF8
%F852A8FFFF27F852FD04FFFD057DA8FF27F8A8FFFFFF52F8A8FD07FFA8FD
%052752F8F87DFD04FF27FD06F827FFFFFFA8FD0AF827FFFFFFFD0652F852
%FD04FF27FD08F87DFD05FFA8FD04F8FD07FFFD08F87DFFFFFF7DF8F852FF
%FFFF27F8F8A8FD0BFF27FD04FF7DF8FFFFA8527D527DFD07FF7DF87DFD05
%FF5252275227F827FD04FF7D27522752525227F8F827A8FD08FFA827FD05
%FFFD08F87DFD06FFA8F8F8F8A8FD07FF52F827F827F82752FD04FF7DF8F8
%7DFFFFFF7DF8F8FFFFFFA8FFA8FFA8FFFFFF52F8A8FFFFFF7DF852FF7DF8
%F8F852FD06FF7DF87DFD0AFF7D27FD0DFFF827FD0AFF27A8FD05FF27F827
%27A87D27A8FD07FFA8F8F8A8FD15FF52F827277D2727F87DFD04FF27F8F8
%27F8527DF827FD05FF27F82727F8F8F8FD07FF277DFD0BFF52FD0DFFA852
%A8FD09FF7D52FD06FF52A8A8FFFFFFA8FD08FFA8F8A8FD16FF7DF8F8F827
%F8F827A8FD04FFA8FD07F8A8FD06FF52272752F87DFD13FFA8FD4BFF7D52
%52A8F852A8FD06FFA8FD04F827A8FD0BFFA8FD64FFA8FD0AFF7D7D7DFDFC
%FFFD17FF7D7DFD18FFA8FD1AFFA8A8A8FD33FF7DFD14FF27F87DFD09FFA8
%272752FD0AFF7D52FD17FFA8FD0527A8FD0AFFA8FD25FF27F827FD07FF52
%272752FD0527A8FFFFFFF8F8A8FD09FF52F8F852FD0AFF5252FD0CFF527D
%FD08FFF87DFFFFFF7DF8A8FD09FF7D7DFD23FF27F8F8F827FD06FF27F8A8
%A8A827F8F8F87DFFFFFF52F8F8A8FD09FF52F8F852FD0AFFF827FD0BFF52
%F852A8FD05FF277DFFFF7DA8FF7D27FD0AFF7D7DFD0BFF7DFD08FFA8A8FF
%FFFFA87DFD06FF27F8F827F8F827FD05FF27F827FFFFFF27F8F87DFFFFFF
%A827F8F8A8FD09FF7DF8F852FD09FF7DF852FD05FFA827522752F8F8F827
%7DFFFFFFA852FFFFFF7DF8FFFF527DFD0AFFA87DFD0AFF5252FD06FF7D27
%FD05FF277DFD04FF27FD04F87DF8F827FD04FF27F8F827FFFFFF27F87DFD
%04FF52F8F8F8A8FD09FF52F8F852FD09FF27F852FD04FF52FD09F827FFFF
%7D52A8F82727F8F8FF527DFFFFFFFD067DA87DA852FFFFFFA8FD0652F8F8
%52A8FFFF7DF8FD0752F87DFFFF27F827FD0452A8F8F827FFFFFFFD04F827
%FFFFFF277DFD04FF52F8F852FD0AFF52F8F87DFD09FFF8F87DFD04FFA8F8
%F8F827FD05F87DFFFF7D52FFA87D7DF852FF527DFFFFFF7DA87DA87DA8A8
%7D7DA8FD04FFFD05A87DF87DA8FFFFFF7DF8277D527D527D27F8A8FFFF7D
%F8275252277D7DF8F852FFFFFF27F8F8F852FFFFFF277DFFFFFFA8F8F827
%FD09FFA827F8F87DFD09FF27F8A8FD05FFFD05A852F8F827FD05FF27FFFF
%FF5252FFFFF8A8FD0AFF7DA8FD0AFF52A8FD06FF7D27FD04FFA827A8FD04
%FF7DF8F8F82752F8F852FD04FFF8F8F852FFFFA827F87DFFFFFF27F852FD
%09FFA827F8F87DFD09FF7DF87DFD0BFF52F87DFD06FF7D27FD05FF277DFD
%0AFF7DA8FD14FFA8FD05FFA8FD06FF7DF8F82727F852FD05FF27F852FFFF
%A827F8F87DFFFF7DF827FD09FFA827F8F87DFD09FFA8277DFD0CFFA8A8FD
%08FF52277D7D7D2752FD0AFF52A8FD23FF7DF8F8F852FD06FFF8F87D7D7D
%FD04F87DFFFF5227FD0BFF7DA8A8FD0AFFA87DFD18FFA8527D52A8FD31FF
%7DF852FD07FF7D527D527D527D527DA8FFFFA8FD19FFA8FD50FFA8FDFCFF
%FD43FFA8FD09FF7D7D7DFD68FFA8FD09FFA8F87DFD08FF7D52A852FD09FF
%A8FD0FFFA8FD0CFFA8A8FD13FF7D52A8FD0FFFA8FD0CFF7DFD0BFF5227A8
%FFFFFFFD05A87DF8F8A8FD08FF7D7DA852FD08FF277DFD0FFF52FD0BFFA8
%7DFD14FF7D5252A8A8FD04FF27F827A87DA8A87DF852FFFFFF7D527D527D
%7D7D52F852FFFFA8FD04522727F8F8F827A8FFA8FD09F87DFFFFFF7D7D7D
%A87D7DFFA852FD07FFF8F87DFD07FFA8FFA8FFA8FFFFA827FD05FFA8FFA8
%A8A8FF7D7DFD15FFA8525252A8A8FF7DF8F8275227522727F8FFFFFF27FD
%08F827FFFF52FD0AF87DFF7DFD09F852FFFFFF7D7DFD04A8FFFF527DFD06
%FF27F827FD06FFA8A87DA87DA87DA8A85252FFFFFFA8A87DA87DA87D7D52
%FD0CFFA8527D527D527D527D527D5227F8F85252527DFD04FFA8F8A8FD04
%FFA8FFA8FFA8FF7D27A8FFFFFFFD04A87D7D5227F852FFFFFF52F8272727
%F8F8F827A8FFFFFFFD047D5252FF7D7DFD07FFF827A8FD0EFFA852FD0BFF
%7DA8FD0CFFA8FFA8A8A8FFA8FFA8FF7D5227527DA8FD15FFA8FD0BFFA87D
%FD09FFA8F827FD09FF7DA87D7DFD08FF52A8FD0FFF52FD0BFF7DA8FD15FF
%7D52527DFD30FF7D27A8FD08FF52527D7DFD19FFA8FD0CFFA8A8FD13FF7D
%5252A8FD3DFFA8A8A8FD3CFFA8A8FDFCFFFD44FFA8A8FD49FFA8A87DFD15
%FFA8FF7D7D527DFD0AFFA8FFA8FD0BFFF852FD46FF5227F8F8F827FD07FF
%A8FD0CFF27FD05F8277DFD06FFA8F8F8F827A8FD0AFFF8F852FD17FF7D7D
%A87DFD2AFFF8F8F87D27A8FD06FF7D2727FD0BFFF8F8F87D7D27F8F87DFD
%05FF27F85252F827A8FD05FFFD04A8F8F8F852FD08FFA8277DFD09FF7D52
%527DF852FD29FFA827F87DFFFFFF7D27FFFFFFA8F8F8F827FFFF7D7DFD05
%FFA827F852FFFFFF52F827FD05FF52F8A852F827FD05FF7DFD08F852FD04
%FF52272727F8F827A8FD06FFA827A8FFFFA8A8FD30FF27F827FFFFFF52F8
%F8F827A827F852FFFFFFA8A8A8FD06FF27F8A8FFFF5252A8FD04FFA87DFD
%04FF27FD08F852FD04FF52FD06F87DFD06FF52A8FD2EFF7D7DFD04FFA827
%F852FD04FF27FD07F827FFFFA8F852FD06FF52F87DFFFF27F827FD04FFF8
%F87DFFFFFFF8F852A87DF8F8F852FD05FF27F87DA8F852A8FD07FF52FD2F
%FFF8F8FD05FF52F87DFD05FF52FD07F87DFFA8F8F8FD06FF52F8A8FFA8F8
%277DFD04FF7DF852FFFFFF27F8A8FFFFF8F852FD06FF52F8A8FF7DFD08FF
%A852FD2FFF27F8527DA8FF7DF8F8FD07FFA85227F8F8F87DFFFFFFF8F87D
%FD04FFA8F8F8A8FFFF27F87D52FF522752F87DFFFFFFF8F87DFFA8F852FD
%07FF52F87DFD0BFF27A8FD2FFFF8F8F87DFF7DF87DFD0AFF52F8A8FD04FF
%7DF8F87DFFFFA8F8F852FFFFFFA8F8F8F8A827F8F852FD04FF27F87DFFFF
%A8FD08FF52F8A8FD0BFFA827FD30FFF8F8F8FFFFA8FD0BFF7DA8FD06FF52
%FD06F827FD05FF7D7D52FF522752FD05FFF8F87DFD0BFF7D52A8FD0CFFA8
%2752A8FD2DFF7D7DFD18FFA82727F8277DFD0BFFA8FD06FFF8F87DFD1CFF
%7DFD4AFFA8FD15FF27277DFD48FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (\315\274\317\361\303\350\304\241) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line \315\274\270\345) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch \315\274\270\345) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
<
0101030304040505070608080909090A0A0B0B0D0C0E0E0F0F101112121313141415151717181819
191A1A1B1C1D1D1E1E1F1F20202222232323242425252727282829292A2A2C2C2D2D2E2E2F2F3030
3232333334
>
<
15161617181A191A1B1D1C1E1E20202122232324252626272929292A2C2C2E2D2F2F313032323433
3535373837383A3A3C3B3D3E3F3E40414244434546474848494A4B4B4C4E4E504F51515354545456
575858595A
>
<
2A2A2C2D2E2D2F2F303133333435363738393A3B3C3D3E3F4041424142434445464747494A4A4B4D
4E4E4F505152535455565758595B5B5C5D5D5F60616162636465666768696A6A6C6D6E6F70717273
7475777879
>
0
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEC
ECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9
D8D8D7D7D6
>
<
F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4
D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4
B3B2B2B1B0
>
<
DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A89
>
4 %_Br
<
343535373838393A3A3B3C3E3E3F40404243444446474848494A4A4B4D4E4E4F5052525354565557
5859595A5C5D5D5E5F5F6061626263656666676869696A6B6C6C6D6E6F6F70717172727374747475
7576767777787878797A7A7A7B7C7B7C7C7D7D7D7E
>
<
5A5B5C5D5D5E5F60616263646566676869696A6B6C6D6E6F7071737475767778797A7B7C7D7D7E7F
8081838485868788898B8C8D8E8F9091929495969798999A9B9C9D9E9FA0A0A1A1A2A4A5A5A6A8A9
AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBD
>
<
797A7A7B7D7C7D7E7F8081828384858687898A8B8C8D8E8F90919091939494959798999A9B9D9E9F
A0A1A2A4A5A6A7A9AAABACAEAFB0B2B3B5B6B7B9BABBBDBFC0C1C3C4C6C7C8CACBCDCED0D1D2D4D5
D7D8DADBDDDEE0E1E3E4E6E8E9EBEDEEF0F2F3F5F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001010202020303030405060606070809090A0B0C0D0E
0F101011131415161719191B1C1D1E1F2122232425
>
<
D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBA
B9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C
9B9A9A999897979695949493929191908F8E8E8D8C
>
<
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A6968676665
64636261605F5E5D5C5B5A59585756555453525150
>
<
89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
<
7E7E7F7F8080818181828283838384848585858686868787878888888888888989898A8A8A8B8B8B
8C8C8C8D8D8D8E8E8E8F8F909091919292
>
<
BDBEBFBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECFD0D1D1D2D3D4D5D6D8D9DADBDCDDDEDFE0E1E2
E3E4E4E5E6E7E8E8E9EAEBECEDEEEFF0F1
>
<
F7F6F8F8F8FAFAF9FBFBFAFBFBFAFBFBFAFBFAF9FBFAF9FBFAFAFBFBFBFCFBFDFCFAFBFAF8FAF8F7
F8F7F6F8F7F6F7F6F5F7F6F4F6F5F3F5F3
>
<
2527282A2B2D2E3032333536383A3B3D3E4042434547484A4C4D4F5151545557595A5C5E5F616264
6667696B6C6E707173757678797B7C7E80
>
<
8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A5958575655
>
<
504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817
>
<
27272626262525252424242323232222222121212020201F1F1F1E1E1D1D1D1C1C1C1B1B1B1A1A1A
1919191818181717171616161515151414
>
4 %_Br
[
0.005188 0.081453 0.164553 0 1 0.945098 0.858824 2 51.0204 0.395812 %_BS
%_0.005188 0.081453 0.164553 0 1 0.945098 0.858824 2 51.0204 0.395812 Bs
0.204623 0.352819 0.473365 0 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS
%_0.204623 0.352819 0.473365 0 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs
0.493751 0.740658 0.96701 0.146456 0.54902 0.313725 0.152941 2 50 78.0899 %_BS
%_0.493751 0.740658 0.96701 0.146456 0.54902 0.313725 0.152941 2 50 78.0899 Bs
0.574029 0.943816 0.954437 0.500572 0.333333 0.090196 0.078431 2 50 100 %_BS
%_0.574029 0.943816 0.954437 0.500572 0.333333 0.090196 0.078431 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
464748484A4B4C4D4E4F50515153545555565859595A5B5B5C5D5F5F606161626364656666676969
6A6B6B6D6E6E6F6F70717273737474757777787879797A7A7B7B7C7C7E7E7F7F8080818181828384
8484858586868788888888898989898A8A8A8A
>
<
62626465666768696B6B6C6E6F707172737374757778797A7B7C7D7D7E7F81828384848586878889
898A8B8D8E8E8F909190929395949697969899999A9C9B9D9E9E9FA0A0A1A1A2A3A3A4A4A6A5A7A7
A8A8A9A9AAAAACABABADADADAEAEAEAFAFAFAF
>
<
343534353635363736373837383938393A3A3B3B3B3C3C3C3D3D3D3D3E403F403F40404142424342
44434443444445464547464746494849494849494A494B4A4C4C4B4C4C4D4D4E4E4E4F4F4E504F4F
50504F51515152525251535352525453535353
>
0
<
C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9
A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A9999989897979696959595949493
93939292919191909090908F8F8F8F8E8E8E8E
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483
838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A6969
68686767666665656564646463636362626262
>
<
B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C
9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A
89898988888887878787868686868585858585
>
4 %_Br
<
292A2B2C2D2E30313233343536383A3B3C3E3F404143444546
>
<
4D4E4F5051525152535455565758595A5B5C5C5C5D5E5F6162
>
<
555352504F4E4E4C4B494947454442413F3E3D3C3A39373734
>
0
<
DEDDDCDBDAD9D8D7D6D5D4D3D1D0CFCECDCCCBCAC9C8C7C6C5
>
<
BDBCBBBAB9B8B7B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7
>
<
A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4
>
4 %_Br
<
0D0E0F1011121315161718191A1B1C1D1E1F20212324252626272829
>
<
3A3B3C3B3C3D3E40414041434444444546474647484948494B4C4C4D
>
<
797776767472706F6E6E6C6A69676765636161605E5C5D5B59575755
>
0
<
F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFFF
>
<
D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEFF
>
<
929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6FF
>
4 %_Br
<
0D0D0D0D0D0D0D0C0C0C0D0D0D0D0D0D0D0D0D0D0C0C0C0C0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C
0D0D0D0D0C0C0C0D0D0D0D0D0D0D0D0D0C0C0C0C0D0D
>
<
868584828281807F7E7D7B7A7978767574747271706F6E6C6B6A69676665636261605E5D5C5B5958
5755545352504F4D4C4A49474645434241403E3D3B3A
>
<
9393939292919090908F8F8F8E8E8D8C8D8B8A8B8A898A8988888887868686858584838483828282
82818181807F7F7F7E7E7D7C7C7C7B7B7B7A7A797979
>
0
<
F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6
F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
>
<
9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
>
<
6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282
838484858687878889898A8B8C8C8D8E8E8F90919192
>
4 %_Br
<
3E3C3C3B3A3A383736363533333231302F2E2D2D2C2A2A29282827252424232121201F1F1D1C1B1B
19181817151514131211100F0F0D
>
<
A3A2A2A1A0A09FA09F9E9E9D9C9C9B9A9A999898979796959695949493929291909090908F8E8E8D
8C8C8B8A8A898889888887878786
>
<
DAD8D7D5D4D3D2D0CFCECDCBCAC9C7C6C5C3C2C1BFBEBCBBB9B8B7B4B3B1B0AFADACABA9A8A7A5A4
A3A2A1A09E9D9C9B999897969493
>
0
<
CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9
EAEBEBECEDEDEEEFF0F0F1F2F2F3
>
<
75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E
8F8F909191929393949495969697
>
<
32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A
5B5C5D5E5F606162636465666768
>
4 %_Br
[
0.542748 0.686763 0.32578 0 0.556863 0.384314 0.521569 2 50 100 %_BS
%_0.542748 0.686763 0.32578 0 0.556863 0.384314 0.521569 2 50 100 Bs
0.274723 0.382788 0.204501 0 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS
%_0.274723 0.382788 0.204501 0 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs
0.160952 0.301183 0.333196 0 0.870588 0.741176 0.654902 2 50 53.6679 %_BS
%_0.160952 0.301183 0.333196 0 0.870588 0.741176 0.654902 2 50 53.6679 Bs
0.050446 0.227237 0.473121 0 0.972549 0.823529 0.572549 2 48 38.764 %_BS
%_0.050446 0.227237 0.473121 0 0.972549 0.823529 0.572549 2 48 38.764 Bs
0.052888 0.524865 0.578302 0 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS
%_0.052888 0.524865 0.578302 0 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs
0.24213 0.639887 0.855222 0 0.807843 0.458824 0.196078 2 50 0 %_BS
%_0.24213 0.639887 0.855222 0 0.807843 0.458824 0.196078 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.81445
0.796261
0.765377
0.611902
0.137255
0.121569
0.12549
4 %_Br
[
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 Bs
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
00000203040607090A0B0C0E0F1011121314161718191A1B1D1E1F202121222325262728292B2C2D
2E2F30313334353637383A3B3C3D3E3F4041434445464748494A4C4D4E4F50515354555657595A5B
5C5D5E5F5F60616264656667696A6B6C6D6F707172737475767778797A7C7D7E7F80818283858687
88898A8C8D8E8F90929394959697989A9B9C9D9E9F9FA0A1A2A3A3A4A5A6A7A8A9AAABABACADAEAE
AFB0B1B1B2B3B3B4B5B5B6B6B7B7B8B9B9BABABBBBBCBCBDBDBEBEBFC0C0C1C1C1C2C2C3C2C3C3C4
C4C5C5C6C6C7C7C7C8C8C8C9C9CACBCBCCCCCDCDCECECFCFD0
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171818191B1C1C1D1E1F2021222223
2425262728292A2A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F40414243444546474849
4A4B4C4D4F4F5051525354555658595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707173
74757678797A7B7C7E7F8081828384868788898A8B8D8E8F90919293949495969798999A9B9C9D9E
9F9FA0A1A2A2A3A4A5A5A6A7A8A9A9AAABACACADAEAEAFB0B1B1B2B3B4B4B5B5B6B7B7B8B9BABABB
BBBCBDBDBEBFC0C0C1C2C2C3C4C4C5C6C6C7C7C8C9C9CACACB
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171818191A1A1B1C1C1D1E1F202021
2223242526272828292A2B2C2D2E2E2F30313233343536373738393A3B3C3D3D3E3F404142434445
46474748494A4B4C4D4E4F50515252535455565758595A5B5C5D5E5F60616263636465666768696A
6B6C6D6E6F7071727374757778797A7B7D7E7F808182838485868788898A8B8B8C8D8E8F90919293
94949596979798999A9B9B9C9D9E9E9FA0A1A2A2A3A4A5A5A6A7A7A8A9AAAAABACACADAEAFAFB0B1
B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBDBEBEBFC0C1C2C2C3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000101010102020303040505060708090A0B0C0E0F1012131516
17191B1C1E2021232527282A2C2E30323436383A3C3E40424547494B4E50525457595B5D5F626466
686A6D6F717375787A7C7E80828587898B8D8F919496989A9C
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776757574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
00000203040607090A0B0C0E0F1011121314161718191A1B1D1E1F202121222325262728292B2C2D
2E2F30313334353637383A3B3C3D3E3F4041434445464748494A4C4D4E4F50515354555657595A5B
5C5D5E5F5F60616264656667696A6B6C6D6F707172737475767778797A7C7D7E7F80818283858687
88898A8C8D8E8F90929394959697989A9B9C9D9E9F9FA0A1A2A3A3A4A5A6A7A8A9AAABABACADAEAE
AFB0B1B1B2B3B3B4B5B5B6B6B7B7B8B9B9BABABBBBBCBCBDBDBEBEBFC0C0C1C1C1C2C2C3C2C3C3C4
C4C5C5C6C6C7C7C7C8C8C8C9C9CACBCBCCCCCDCDCECECFCFD0
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171818191B1C1C1D1E1F2021222223
2425262728292A2A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F40414243444546474849
4A4B4C4D4F4F5051525354555658595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707173
74757678797A7B7C7E7F8081828384868788898A8B8D8E8F90919293949495969798999A9B9C9D9E
9F9FA0A1A2A2A3A4A5A5A6A7A8A9A9AAABACACADAEAEAFB0B1B1B2B3B4B4B5B5B6B7B7B8B9BABABB
BBBCBDBDBEBFC0C0C1C2C2C3C4C4C5C6C6C7C7C8C9C9CACACB
>
<
000001020304050708090A0A0B0C0D0E0F1011121213141516171818191A1A1B1C1C1D1E1F202021
2223242526272828292A2B2C2D2E2E2F30313233343536373738393A3B3C3D3D3E3F404142434445
46474748494A4B4C4D4E4F50515252535455565758595A5B5C5D5E5F60616263636465666768696A
6B6C6D6E6F7071727374757778797A7B7D7E7F808182838485868788898A8B8B8C8D8E8F90919293
94949596979798999A9B9B9C9D9E9E9FA0A1A2A2A3A4A5A5A6A7A7A8A9AAAAABACACADAEAFAFB0B1
B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBDBEBEBFC0C1C2C2C3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000101010102020303040505060708090A0B0C0E0F1012131516
17191B1C1E2021232527282A2C2E30323436383A3C3E40424547494B4E50525457595B5D5F626466
686A6D6F717375787A7C7E80828587898B8D8F919496989A9C
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776757574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.856962
0.851621
0.82446
0.732998
0.07451
0.047059
0.054902
4 %_Br
0.856962
0.851621
0.82446
0.732998
0.07451
0.047059
0.054902
4 %_Br
[
0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS
%_0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs
0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS
%_0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs
0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.856962 0.851621 0.82446 0.732998 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 Xa
 0.079713 0.719112 0.882017 0 0.92549 0.411765 0.137255 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 Xa
 0.08191 0.953613 0.875883 0 0.917647 0.113725 0.145098 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 Xa
 0.888487 0.786679 0.878386 0.708675 0.047059 0.086275 0.058824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 Xa
 0.942016 0.826993 0.097932 0 0.12549 0.254902 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4031.5 4495.4351 m
-3817.8999 4495.4351 L
-3817.8999 4487.6343 L
-4031.5 4487.6343 L
-4031.5 4495.4351 L
n
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-4031.5 4491.5352 m
-4021.4856 4494.0269 -4014.6863 4495.375 -4002.7007 4495.4351 c
-3989.7185 4495.5 -3924.6997 4495.4351 y
-3859.6816 4495.5 -3846.6997 4495.4351 v
-3834.7124 4495.375 -3827.9136 4494.0269 -3817.8999 4491.5352 C
-3827.9136 4489.0435 -3834.7124 4487.6953 -3846.6997 4487.6343 c
-3859.6816 4487.5688 -3924.6997 4487.6343 y
-3989.7185 4487.5688 -4002.7007 4487.6343 v
-4014.6863 4487.6953 -4021.4856 4489.0435 -4031.5 4491.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7904 8368 m
-7806.2451 8368 L
-7806.2451 8347.2842 L
-7904 8347.2842 L
-7904 8368 L
n
0 O
0 g
1 XR
-7806.5586 8363.3184 m
-7821.8247 8349.5303 -7839.5537 8370.4492 -7854.9277 8358.166 C
-7853.4199 8352.5137 -7847.7598 8359.4678 -7845.5176 8354.8213 C
-7845.4341 8353.2207 -7848.6313 8354.7207 -7848.5127 8352.6006 C
-7846.6245 8349.1914 -7841.8955 8349.6885 -7840.5664 8353.7373 C
-7834.3115 8351.7676 -7827.7734 8345.8242 -7821.7847 8347.6172 C
-7820.2671 8348.9678 -7821.0708 8350.1514 -7820.6211 8351.4277 C
-7813.2871 8346.9922 -7804.4644 8356.1279 -7806.5586 8363.3184 C
f
-7850.2842 8364.9326 m
-7850.8247 8365.3086 -7849.9277 8366.4199 -7850.2529 8366.9082 C
-7852.3237 8366.1563 -7854.6919 8362.0781 -7856.4731 8359.3105 C
-7856.2632 8360.8398 -7857.6641 8362.1641 -7859.0781 8359.9326 C
-7859.2383 8359.1152 -7858.3667 8358.8281 -7858.6729 8357.9365 C
-7859.8306 8356.3682 -7860.8472 8357.8535 -7861.7798 8357.625 C
-7862.3184 8356.8613 -7862.6143 8356.2188 -7862.6816 8355.6943 C
-7856.5537 8352.874 -7849.9263 8364.6768 -7843.7456 8365.1025 C
-7843.9048 8368.1152 -7847.8555 8369.8008 -7850.2842 8364.9326 C
f
u
u
0 XR
-7847.1602 8359.6602 m
-7862.0142 8353.1201 -7883.4731 8357.3418 -7899.3687 8357.3193 c
-7905.2988 8357.3125 -7894.8965 8357.3213 -7900.8267 8357.3262 c
N
0 O
0 g
-7844.8052 8358.4395 m
-7862.1475 8351.2637 -7881.9341 8356.0557 -7900.0532 8355.9863 C
-7900.8608 8356.873 -7901.6685 8357.7617 -7902.4751 8358.6475 C
-7901.6973 8358.6475 -7900.9194 8358.6465 -7900.1421 8358.6533 C
-7899.3345 8357.7656 -7898.5273 8356.8789 -7897.7202 8355.9922 C
-7898.3516 8356.002 -7898.9844 8355.9951 -7899.6157 8355.9951 c
-7901.3735 8355.998 -7905.9165 8358.6621 -7902.0376 8358.6572 c
-7901.4063 8358.6572 -7900.7734 8358.6641 -7900.1421 8358.6533 c
-7898.4155 8358.626 -7893.8184 8356.0234 -7897.7202 8355.9922 c
-7898.4976 8355.9834 -7899.2759 8355.9863 -7900.0532 8355.9863 c
-7901.8081 8355.9854 -7906.3574 8358.6328 -7902.4751 8358.6475 c
-7885.1177 8358.7148 -7866.1025 8354.0137 -7849.5151 8360.8789 c
-7848.1035 8361.4639 -7842.8081 8359.2666 -7844.8052 8358.4395 c
-7844.8052 8358.4395 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7886 8368 m
-7904 8368 L
-7904 8350 L
-7886 8350 L
-7886 8368 L
n
u
u
0 Ap
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-7885.9658 8360.4375 m
-7904 8360.4375 L
-7904 8357.5625 L
-7885.9658 8357.5625 L
-7885.9658 8360.4375 L
-7885.9658 8360.4375 L
f
U
u
0.324163 0.98938 0.899443 0.007477 0.745098 0.117647 0.176471 Xa
-7885.9658 8359.7002 m
-7902.5 8359.7002 L
-7902.5 8358.3008 L
-7885.9658 8358.3008 L
-7885.9658 8359.7002 L
-7885.9658 8359.7002 L
f
U
u
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
-7885.9658 8359.3125 m
-7901.5 8359.3125 L
-7901.5 8358.6865 L
-7885.9658 8358.6865 L
-7885.9658 8359.3125 L
-7885.9658 8359.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7886 8368 m
-7904 8368 L
-7904 8350 L
-7886 8350 L
-7886 8368 L
n
u
u
0 Ap
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-7886 8360.4375 m
-7904 8360.4375 L
-7904 8357.5625 L
-7886 8357.5625 L
-7886 8360.4375 L
-7886 8360.4375 L
f
U
u
0.324163 0.98938 0.899443 0.007477 0.745098 0.117647 0.176471 Xa
-7886 8359.7002 m
-7904 8359.7002 L
-7904 8358.3008 L
-7886 8358.3008 L
-7886 8359.7002 L
-7886 8359.7002 L
f
U
u
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
-7886 8359.3125 m
-7904 8359.3125 L
-7904 8358.6865 L
-7886 8358.6865 L
-7886 8359.3125 L
-7886 8359.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7903.8833 8367.9551 m
-7812.0479 8367.9551 L
-7812.0479 8363.6758 L
-7903.8833 8363.6758 L
-7903.8833 8367.9551 L
n
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-7903.6631 8365.2754 m
-7904 8365.3418 -7903.4814 8365.5313 -7903.8833 8365.3887 C
-7903.8379 8365.2705 -7903.7725 8365.1816 -7903.6631 8365.2754 C
f
-7813.1675 8365.4414 m
-7814.2524 8366.2041 -7815.6816 8365.4336 -7816.8701 8365.9199 C
-7817.0098 8365.9521 -7816.8345 8365.502 -7817.1484 8365.6025 C
-7818.3008 8366.1953 -7820.1162 8365.8418 -7821.5195 8365.3848 C
-7821.4346 8365.2666 L
-7821.7017 8365.1816 -7822.0283 8365.5723 -7822.3115 8365.5176 C
-7822.3135 8365.4395 -7822.2207 8365.4063 -7822.2861 8365.2988 C
-7822.3574 8365.5352 -7822.7983 8365.4082 -7822.9185 8365.584 C
-7823.0303 8365.4922 -7823.0195 8365.3047 -7823.1641 8365.2012 C
-7823.3262 8365.4697 L
-7823.7769 8366.1094 -7824.4209 8365.4258 -7825.0361 8365.7559 C
-7825.0063 8365.6934 -7824.9453 8365.6445 -7824.9941 8365.584 C
-7825.9814 8365.9727 -7827.2168 8365.9004 -7828.3208 8366.043 C
-7828.2769 8365.9482 -7828.2363 8365.7754 -7828.3008 8365.668 C
-7828.3555 8365.9512 -7828.6963 8366.0225 -7828.9922 8366.0781 C
-7829.1255 8365.7871 -7829.4995 8366.3438 -7829.8467 8366.1836 C
-7829.8169 8366.1191 L
-7830.0732 8366.4238 -7830.1973 8365.9434 -7830.4053 8366.3086 C
-7830.5684 8366.0801 L
-7830.6807 8366.4902 -7830.9395 8365.8672 -7831.1514 8366.0762 C
-7831.1445 8366.1602 L
-7831.3442 8366.2598 -7831.4482 8366.0537 -7831.6338 8366.123 C
-7831.6514 8366.0762 L
-7832.0854 8366.1836 -7832.3379 8365.9551 -7832.3271 8366.2754 C
-7832.4795 8366.0186 -7831.9063 8366.1582 -7832.1455 8365.7852 C
-7833.5732 8366.1152 -7835.0459 8366.0508 -7836.4834 8366.0566 C
-7836.6465 8365.9277 -7836.7505 8365.8887 -7836.7871 8365.7676 C
-7836.9307 8365.832 -7837.3281 8365.8262 -7837.4585 8365.9902 C
-7837.4102 8365.9834 -7837.5513 8365.8262 -7837.6274 8365.8105 C
-7837.8887 8365.6895 -7837.9131 8366.1621 -7838.2002 8366.0186 C
-7838.0859 8365.9336 -7838.0469 8365.8301 -7838.0854 8365.7109 C
-7838.3301 8365.9609 -7838.6577 8365.9209 -7838.9473 8366.002 C
-7838.9023 8365.9482 -7838.8325 8365.916 -7838.8433 8365.8154 C
-7839.1602 8366.0986 -7839.4209 8365.7559 -7839.6982 8365.9346 C
-7839.5947 8365.75 L
-7840.0415 8365.5254 -7839.7266 8366.1367 -7840.1128 8366.0039 C
-7840.02 8365.9453 -7840.0527 8365.873 -7840.0361 8365.7979 C
-7840.3965 8366.1338 -7840.9795 8366.0225 -7841.3389 8366.1367 C
-7841.3174 8366.1113 -7841.3232 8366.0605 Y
-7841.7148 8366.1025 -7842.1245 8365.998 -7842.5552 8366.1445 C
-7842.7119 8366.0625 -7842.5039 8365.6934 -7842.9185 8365.7617 C
-7842.9033 8366.1328 -7843.6221 8365.9141 -7843.3779 8366.334 C
-7843.7319 8366.2734 -7844.2925 8366.1338 -7844.5283 8366.2598 C
-7844.3691 8366.1191 -7844.7007 8365.8066 -7844.4063 8365.7754 C
-7844.6289 8365.5498 L
-7844.5957 8365.3984 -7844.3999 8365.6016 -7844.4707 8365.4102 C
-7844.6182 8365.4258 -7845.0479 8365.5723 -7845.1797 8365.5117 C
-7845.4531 8365.7393 -7845.7041 8366.1641 -7846.1465 8366.2109 C
-7845.9385 8366.0664 -7846.2646 8365.8018 -7846.1235 8365.7383 C
-7846.7407 8366.4492 L
-7846.8877 8366.4668 -7846.7725 8366.1563 -7846.9854 8366.2529 C
-7846.9746 8366.3516 -7847.0674 8366.4121 -7847.1318 8366.4922 C
-7847.1875 8366.4492 -7847.7441 8366.584 -7847.8081 8366.2188 C
-7847.8735 8366.0762 -7847.5684 8366.1426 -7847.7314 8366.0117 C
-7848.0029 8366.0156 -7848.0151 8366.1406 -7848.2871 8366.1465 C
-7848.2925 8366.0977 L
-7848.4717 8366.043 -7848.8213 8366.2529 -7848.6265 8366.4551 C
-7848.5015 8366.4668 -7848.6738 8366.2354 -7848.4888 8366.3418 C
-7848.6152 8366.5537 -7848.9312 8366.6133 -7849.2031 8366.6172 C
-7849.1104 8366.5586 -7849.1216 8366.4609 -7849.0845 8366.3574 C
-7849.4497 8366.6445 -7849.8369 8366.7354 -7850.2451 8366.8555 C
-7850.2515 8367.0293 -7850.0928 8366.5391 -7850.0327 8366.6309 C
-7850.5557 8366.3896 -7851.1128 8366.9727 -7851.5479 8366.6201 C
-7851.4766 8366.5898 -7851.5098 8366.8672 -7851.5146 8366.8184 C
-7851.7666 8366.7969 -7851.7549 8366.5449 -7851.9189 8366.6377 C
-7851.9355 8366.4902 -7852.1255 8366.6855 -7852.2944 8366.7305 C
-7852.3818 8366.8369 -7852.3384 8366.6582 -7852.1914 8366.6426 C
-7852.4268 8366.7676 -7853.3691 8366.9941 -7853.9131 8366.7793 C
-7853.9023 8366.877 -7854.2471 8367.1377 -7854.3721 8367.127 C
-7854.3232 8366.8984 L
-7854.4375 8366.7617 -7854.7422 8366.918 -7854.7632 8366.7227 C
-7855.0303 8367 -7853.7344 8366.4863 -7854.0957 8366.7002 C
-7854.1895 8366.5098 -7854.5991 8367.0645 -7854.5215 8366.7529 C
-7854.7725 8366.7617 -7855.0161 8367.0186 -7855.2559 8366.8047 C
-7855.1865 8366.8418 -7855.0522 8366.4873 -7855.2549 8366.5039 C
-7855.6123 8366.5449 -7855.3564 8366.6133 -7855.6465 8366.6895 C
-7855.8281 8366.7832 L
-7855.8398 8367.0059 -7856.1475 8366.7529 -7856.0146 8367.002 C
-7856.0586 8366.8184 -7856.5337 8367.1152 -7856.4971 8366.7461 C
-7856.4473 8366.4551 L
-7856.6016 8366.4766 -7856.7002 8366.7617 -7856.8213 8366.8896 C
-7856.8418 8366.8633 -7856.8823 8366.8047 -7856.8745 8366.7578 C
-7856.8994 8367.2031 -7857.2432 8366.7207 -7857.4268 8367.0645 C
-7857.7505 8366.9102 -7858.2495 8367.0508 -7858.4023 8366.7734 C
-7858.6514 8366.9082 -7858.8784 8367.0684 -7859.1621 8366.9727 C
-7859.1055 8366.9307 -7859.0283 8366.918 -7859.0122 8366.8223 C
-7859.1904 8366.6914 -7859.2344 8366.8086 -7859.3975 8366.8809 C
-7859.3608 8366.8145 -7859.7539 8366.6201 -7859.9521 8366.4629 C
-7860.1992 8366.5957 -7860.1143 8366.8359 -7860.1392 8366.9824 C
-7860.3652 8366.543 -7860.8379 8367.2656 -7861.1211 8366.8672 C
-7861.0352 8366.8066 -7860.7598 8366.6514 -7860.9658 8366.541 C
-7861.1919 8366.1025 -7861.4219 8366.8652 -7861.7861 8366.6543 C
-7861.6968 8367.0186 L
-7861.8594 8366.793 -7862.2334 8367.2305 -7862.1963 8366.8594 C
-7862.3184 8366.9902 -7862.6265 8366.7383 -7862.5859 8367.0938 C
-7863.1846 8366.793 -7864.0425 8367.2754 -7864.4102 8366.6377 C
-7864.4961 8366.6973 -7864.7104 8366.6367 -7864.6665 8366.8193 C
-7864.5239 8367.0176 -7864.4673 8366.6777 -7864.4141 8366.8125 C
-7864.4912 8366.8232 -7864.5078 8366.9209 -7864.5161 8366.9697 C
-7864.7021 8366.8887 -7864.8486 8366.8633 -7864.6729 8366.5674 C
-7865.0869 8366.3477 -7865.1001 8367.1719 -7865.6274 8367.0332 C
-7865.6035 8366.8857 -7865.6436 8366.8301 -7865.7979 8366.8535 C
-7866.0903 8367.1055 L
-7866.4312 8367.0469 -7866.2842 8366.7705 -7866.2925 8366.5215 C
-7866.4746 8366.5645 -7866.6973 8366.5527 -7866.7803 8366.7383 C
-7867.0015 8366.4258 L
-7866.8398 8366.6514 -7867.1514 8366.5762 -7867.2368 8366.6367 C
-7867.1514 8366.5762 L
-7867.1846 8366.4697 -7867.3955 8366.5352 -7867.5024 8366.5664 C
-7867.4766 8366.7207 -7867.2617 8366.7832 -7867.1445 8366.8281 C
-7867.2373 8366.9375 -7867.3823 8366.9121 -7867.5059 8367.041 C
-7867.4648 8366.7969 -7867.8027 8366.8672 -7867.9473 8366.8418 C
-7868.1133 8366.7891 -7868.1348 8367.0605 -7868.1831 8367.0527 C
-7868.1875 8366.9258 -7868.4541 8367.0313 -7868.3247 8366.8535 C
-7868.2681 8366.8125 -7868.1953 8366.9766 -7868.1016 8366.8652 C
-7868.2109 8366.7705 -7868.1982 8366.5498 -7868.4258 8366.7109 C
-7868.5967 8366.832 -7868.3818 8367.1934 -7868.7061 8367.0391 C
-7868.6211 8366.9785 -7868.6055 8366.8809 -7868.5391 8366.793 C
-7868.8433 8366.666 L
-7868.8564 8366.8887 L
-7868.8975 8366.832 -7868.8691 8366.8125 -7868.8877 8366.7832 C
-7868.9785 8367.0176 -7869.3521 8366.8555 -7869.4209 8367.1191 C
-7869.5742 8367.1426 -7869.7441 8366.9648 -7869.8906 8366.9395 C
-7869.8623 8366.9199 L
-7870.0415 8366.7891 -7870.2793 8366.875 -7870.4297 8367.0254 C
-7870.4219 8366.9766 L
-7870.5195 8366.959 -7870.7505 8366.9941 -7870.8735 8367.125 C
-7871.1201 8366.957 -7870.9561 8366.2842 -7871.2295 8366.5645 C
-7871.48 8366.5723 -7871.6221 8366.9727 -7871.5215 8367.1152 C
-7871.9717 8366.9648 -7872.4834 8367.3281 -7872.9009 8366.9824 C
-7872.9658 8367.0723 -7872.9248 8367.1289 -7873.0586 8367.1816 C
-7873.7197 8367.0938 -7874.4551 8367.4453 -7874.9814 8367.0078 C
-7874.79 8366.9141 -7874.9688 8366.7852 -7874.9727 8366.6582 C
-7875.1309 8366.8574 -7875.1631 8366.4512 -7875.2197 8366.793 C
-7875.2041 8366.9941 -7875.2197 8367.0918 -7875.0337 8367.1729 C
-7875.4282 8367.2813 -7876.0283 8367.2813 -7876.2471 8367.0938 C
-7876.1377 8367.1865 -7876.2227 8367.248 -7876.3086 8367.3086 C
-7876.2803 8366.9873 -7876.5713 8366.9395 -7876.7915 8367.0527 C
-7876.8223 8367.248 L
-7876.9658 8367.0469 L
-7877.0503 8367.1094 -7877.0591 8367.457 -7877.2773 8367.2695 C
-7877.2891 8367.1934 -7877.3018 8367.1162 -7877.3418 8367.0605 C
-7877.5693 8367.2207 -7877.8906 8367.4922 -7878.1377 8367.3262 C
-7878.3398 8367.041 L
-7878.4453 8367.0723 -7878.6235 8367.2441 -7878.4375 8367.3262 C
-7878.8594 8367.1543 -7879.1309 8367.1328 -7879.2646 8366.8857 C
-7879.9912 8367.4873 -7881.0459 8367.5117 -7881.8906 8367.4688 C
-7881.8652 8367.3223 L
-7882.0923 8367.1855 -7881.9834 8367.5781 -7882.1416 8367.4766 C
-7882.0684 8367.3369 -7882.3145 8367.1729 -7882.1362 8367.002 C
-7882.4609 8366.8477 -7882.5547 8367.2559 -7882.7656 8367.3223 C
-7882.7979 8367.5146 -7882.5957 8367.1992 -7882.6367 8367.4434 C
-7882.6729 8367.5117 -7883.0859 8367.293 -7883.1362 8367.584 C
-7883.2178 8367.4697 -7883.1543 8367.2559 -7883.1104 8367.1377 C
-7883.3086 8367.2793 L
-7883.5513 8366.9395 -7882.7559 8366.6719 -7883.0107 8366.2529 C
-7883.1934 8366.2988 L
-7883.3682 8365.9941 -7882.71 8365.9551 -7883.1689 8365.8506 C
-7883.3682 8365.9941 -7883.5381 8366.416 -7883.3608 8366.5449 C
-7883.7754 8366.625 -7883.5527 8367.2383 -7883.9985 8367.2139 C
-7884.1201 8367.043 -7883.6416 8367.1729 -7883.7275 8366.9336 C
-7883.9375 8366.6992 -7884.1484 8367.0645 -7884.3354 8366.9824 C
-7884.1279 8367.0918 -7884.3032 8367.3857 -7884.4375 8367.4395 C
-7884.6641 8367.3018 -7884.29 8367.1641 -7884.6113 8367.1338 C
-7884.6641 8367.3018 -7884.9595 8367.4277 -7884.7041 8367.5449 C
-7884.8203 8367.9258 -7885.0381 8367.4395 -7885.2129 8367.7344 C
-7885.3174 8367.4668 -7884.8823 8367.1152 -7885.2354 8366.9814 C
-7885.1792 8367.2393 -7885.6704 8367.332 -7885.4839 8367.7148 C
-7885.6221 8367.6406 -7885.6367 8367.4375 -7885.5361 8367.2793 C
-7885.7334 8367.1201 -7886.0151 8367.75 -7886.0801 8367.2383 C
-7886.1479 8367.502 L
-7886.21 8367.416 -7886.2983 8367.3516 -7886.3994 8367.209 C
-7886.5732 8367.2041 -7886.96 8367.5664 -7886.9443 8367.168 C
-7887 8367.209 -7887.3975 8367.1914 -7887.2441 8367.4668 C
-7886.9971 8367.6348 -7886.96 8367.2656 -7886.8223 8367.6377 C
-7886.9971 8367.334 -7887.1787 8367.6777 -7887.3213 8367.7793 C
-7887.3447 8367.625 L
-7887.4297 8367.6855 -7887.6255 8367.6514 -7887.6787 8367.8184 C
-7887.6133 8367.7305 -7887.6475 8367.625 -7887.7148 8367.5879 C
-7887.8042 8367.8223 L
-7888.1494 8367.9395 -7887.8857 8367.4102 -7888.2217 8367.4785 C
-7887.9663 8367.2969 L
-7888.0225 8367.3359 -7888.1367 8367.1162 -7888.2979 8367.1895 C
-7888.3604 8367.4033 -7888.4775 8367.6602 -7888.5313 8367.8262 C
-7888.7207 8367.9199 -7888.6162 8367.585 -7888.8027 8367.8047 C
-7888.5586 8367.5469 L
-7888.5215 8367.4766 -7888.7231 8367.1934 -7888.9761 8367.1992 C
-7889.1377 8367.2734 -7889.3887 8367.582 -7889.1338 8367.6992 C
-7889.2607 8367.7031 -7889.4385 8367.5723 -7889.3379 8367.416 C
-7889.6255 8367.4902 -7889.2998 8367.6465 -7889.5479 8367.7793 C
-7889.6494 8367.6367 -7889.9658 8367.4336 -7890.1563 8367.2266 C
-7889.8975 8366.8682 L
-7890.0693 8366.8652 L
-7889.8467 8366.5781 -7890.1826 8366.6465 -7890.0566 8366.3438 C
-7890.1743 8366.2969 -7890.3169 8366.3994 -7890.4307 8366.4785 C
-7890.0864 8366.9629 -7890.8159 8367.1406 -7890.7158 8367.582 C
-7891.1875 8367.7031 -7891.0107 8366.5078 -7891.5024 8367.1992 C
-7891.4219 8367.3145 -7891.6533 8367.6504 -7891.3564 8367.5225 C
-7891.6494 8367.4746 -7891.5557 8367.9658 -7891.9014 8367.7832 C
-7891.6455 8367.6016 -7892.1763 8367.3359 -7891.8066 8367.0723 C
-7891.8311 8367.2188 -7891.6001 8367.1836 -7891.5435 8367.1426 C
-7891.6641 8366.9727 -7891.5186 8366.6973 -7891.8184 8366.6973 C
-7892.0015 8366.7393 -7892.2524 8366.748 -7892.2158 8366.9785 C
-7892.2085 8367.2314 -7891.9365 8366.9512 -7892.0537 8367.207 C
-7892.4185 8367.2949 -7892.4795 8366.9102 -7892.6304 8367.3594 C
-7892.3999 8367.3232 -7892.3423 8367.584 -7892.3467 8367.7578 C
-7892.6143 8367.8633 L
-7892.5625 8367.6953 L
-7892.9922 8367.5742 -7892.6895 8368 -7893.1055 8367.9551 C
-7893.3008 8367.623 L
-7893.2017 8367.3369 -7892.6953 8367.75 -7892.7695 8367.2842 C
-7893.04 8367.2656 -7893.1299 8367.502 -7893.3848 8367.3818 C
-7893.3281 8367.3418 -7893.2505 8367.3301 -7893.1943 8367.2891 C
-7893.2915 8367.2734 -7893.3877 8366.6563 -7893.7734 8367.0176 C
-7893.9727 8367.1582 -7893.8262 8367.1836 -7893.8311 8367.3574 C
-7894.2656 8367.4102 -7894.3955 8367.5879 -7894.6753 8367.6152 C
-7894.6177 8367.2754 -7895.1699 8367.582 -7894.8608 8367.2344 C
-7894.7188 8367.4336 -7894.0903 8367.4141 -7893.9365 8367.0898 C
-7894.0947 8366.6865 -7893.5952 8367.1465 -7893.5024 8366.7383 C
-7893.8506 8366.7285 -7893.8335 8366.332 -7893.8896 8366.0723 C
-7893.9863 8366.0537 -7894.0801 8366.1641 -7894.1377 8366.2041 C
-7894.1787 8366.4492 -7894.0522 8366.4453 -7894.0449 8366.6973 C
-7894.4336 8366.6309 -7894.8081 8366.7676 -7895.0225 8367.0059 C
-7895.1523 8366.8848 -7895.1113 8366.6406 -7894.9575 8366.6172 C
-7895.4199 8366.6895 -7895.9141 8366.6563 -7896.3535 8366.582 C
-7896.0693 8366.9814 -7896.8433 8366.6758 -7896.6494 8367.0078 C
-7896.4141 8367.0977 -7896.2119 8367.3818 -7896.3418 8367.5605 C
-7896.4888 8367.5352 -7896.3369 8367.3857 -7896.3984 8367.3008 C
-7896.5859 8367.5186 -7896.6895 8366.9512 -7896.8735 8367.2949 C
-7896.4512 8367.166 -7896.7915 8366.8086 -7896.7139 8366.4961 C
-7897.0186 8366.6719 -7896.7007 8366.2734 -7897.0024 8366.2734 C
-7897.3057 8366.4473 -7897.6787 8366.584 -7898.0161 8366.6514 C
-7898.4399 8366.3555 -7899.0898 8366.6465 -7899.4683 8366.6582 C
-7899.6665 8366.5 -7899.5322 8366.1465 -7899.7471 8366.085 C
-7899.9995 8366.0918 -7899.5601 8366.4668 -7899.9336 8366.3047 C
-7899.8975 8366.2344 L
-7900.0107 8366.3164 -7900.5825 8365.9941 -7900.6929 8366.502 C
-7900.5776 8366.1191 L
-7900.6475 8366.084 -7900.7119 8366.1719 -7900.7695 8366.2129 C
-7900.7725 8366.0879 -7900.8535 8365.9746 -7900.7402 8365.8926 C
-7900.9707 8365.6289 -7901.2241 8365.9346 -7901.4746 8365.9453 C
-7901.3135 8366.1719 L
-7901.7422 8366.3496 -7902.0293 8366.125 -7902.4443 8366.2041 C
-7902.4316 8365.9824 L
-7902.6787 8366.1152 L
-7902.6182 8365.9004 -7902.8447 8365.7617 -7902.9751 8365.9414 C
-7902.3335 8365.3984 L
-7902.1553 8365.5293 -7902.5283 8365.666 -7902.4165 8365.8848 C
-7902.3213 8366.0762 -7901.9375 8366.0156 -7901.8755 8365.8018 C
-7902.0225 8365.7773 -7902.0293 8365.8262 -7902.1436 8365.9063 C
-7902.1919 8365.5977 -7901.9688 8365.6094 -7901.8584 8365.4033 C
-7901.9355 8365.416 -7902.0449 8365.3223 -7902.0615 8365.4199 C
-7901.9102 8365.2695 -7901.7578 8365.2461 -7901.5059 8365.2383 C
-7901.6763 8365.3594 -7901.4131 8365.4297 -7901.4775 8365.5176 C
-7901.4575 8365.2461 -7901.2168 8365.1621 -7900.9053 8365.2383 C
-7900.6831 8365.5527 -7900.3208 8365.0361 -7899.96 8365.123 C
-7900.1064 8365.3984 -7900.2935 8365.6191 -7900.5127 8365.7305 C
-7900.2861 8365.8682 -7900.2607 8365.7227 -7900.0337 8365.8613 C
-7899.9238 8365.6563 -7899.8457 8365.3418 -7899.5503 8365.2168 C
-7899.5342 8365.4199 L
-7899.2666 8365.3164 -7899.2666 8365.0156 -7898.9258 8365.0723 C
-7898.3418 8365.1719 -7897.7407 8365.1719 -7897.2949 8365.1973 C
-7897.2783 8365.3994 L
-7897.0303 8364.9658 -7896.4521 8365.2393 -7896.1182 8365.0469 C
-7895.5503 8365.2422 -7894.8848 8364.8535 -7894.5938 8365.2031 C
-7893.5913 8365.0469 -7892.7148 8364.8945 -7891.6768 8364.9688 C
-7891.8516 8365.2637 L
-7891.6655 8365.0469 -7891.7305 8365.4336 -7891.5479 8365.3896 C
-7891.7578 8365.1543 -7891.2949 8365.084 -7891.1665 8364.9033 C
-7890.7041 8365.1328 -7890.1104 8364.8828 -7889.7007 8364.6758 C
-7889.6846 8364.8789 L
-7889.2705 8364.498 -7888.7759 8364.832 -7888.2598 8364.8945 C
-7888.2007 8364.9785 -7888.1074 8365.1689 -7887.9536 8365.1465 C
-7887.6738 8364.8184 -7887.5273 8364.8418 -7887.1167 8364.6367 C
-7886.8169 8364.6367 -7886.3301 8364.7178 -7886.0254 8364.8457 C
-7884.8975 8364.3848 -7883.7456 8364.6797 -7882.5732 8364.4023 C
-7882.4888 8364.6406 L
-7881.3521 8364.1309 -7879.9541 8364.5938 -7878.9839 8364.332 C
-7879.0776 8364.7393 L
-7878.7734 8364.8652 -7878.3843 8364.6328 -7878.4619 8364.3438 C
-7878.1567 8364.4688 -7877.7007 8364.1465 -7877.5068 8364.4814 C
-7877.1953 8364.5566 -7877.1255 8364.293 -7876.8662 8364.2383 C
-7876.2422 8364.3926 -7876.0107 8364.3574 -7875.4224 8364.2813 C
-7875.5684 8364.2559 L
-7875.6328 8364.3457 -7875.6387 8364.5186 -7875.4922 8364.5449 C
-7875.2725 8364.4316 -7874.6846 8364.6543 -7874.9033 8364.168 C
-7874.2754 8364.4492 -7873.4385 8363.9395 -7872.8271 8364.3184 C
-7872.8789 8364.1855 -7872.7246 8364.1602 -7872.6602 8364.0703 C
-7872.1089 8364.0645 -7871.5293 8364.3359 -7871.0898 8364.1094 C
-7871.0024 8364.1758 -7871.2295 8364.3359 -7871.0049 8364.3496 C
-7870.8721 8364.2988 -7871.0024 8364.1758 -7870.8384 8364.1016 C
-7869.9453 8363.8535 -7869.0303 8364.3574 -7868.2188 8364.293 C
-7866.7754 8364.0361 -7865.2695 8364.166 -7863.8867 8364.123 C
-7863.9023 8364.2207 L
-7863.4395 8363.8477 -7862.8159 8364.6025 -7862.4463 8364.041 C
-7862.3369 8364.1338 -7862.0283 8364.085 -7862.1094 8364.2734 C
-7861.7407 8364.0098 -7861.0771 8364.5215 -7860.5439 8364.1865 C
-7860.5928 8364.1777 -7860.6211 8364.1973 -7860.6777 8364.2393 C
-7860.1392 8364.4551 -7859.6641 8364.1602 -7859.0957 8364.3555 C
-7859.1533 8364.3975 -7859.2583 8364.4277 -7859.2754 8364.5254 C
-7859.0557 8364.7129 -7858.7549 8364.1133 -7858.6348 8364.584 C
-7858.5088 8364.5801 -7858.5449 8364.3477 -7858.6221 8364.3613 C
-7857.3779 8364.5449 -7856.0498 8364.2441 -7854.7549 8364.1367 C
-7853.8271 8364.418 -7854.6982 8364.9297 -7853.9663 8364.5781 C
-7853.9063 8364.6689 -7853.9229 8364.3984 -7853.9131 8364.4961 C
-7853.6299 8364.3643 -7853.4717 8365.0215 -7853.2754 8364.7754 C
-7853.3564 8364.4863 -7853.1445 8364.6133 -7853.1387 8364.4375 C
-7852.5713 8364.625 -7852.4575 8364.8857 -7852.0098 8364.666 C
-7852.0435 8364.8184 L
-7851.5186 8364.3887 -7850.9102 8364.6191 -7850.4673 8364.123 C
-7847.5728 8364.0332 -7844.7983 8363.7578 -7841.9761 8363.7002 C
-7839.1865 8363.7949 -7836.4551 8363.5723 -7833.6221 8363.8359 C
-7832.9585 8364.2354 -7832.9087 8364.2246 -7832.1797 8364.0625 C
-7832.2095 8364.127 -7832.2549 8364.1426 -7832.2061 8364.2031 C
-7832.1699 8363.875 -7831.6929 8364.1719 -7831.6235 8363.8594 C
-7830.5762 8363.9199 -7829.6113 8363.8301 -7828.5337 8363.8281 C
-7828.7041 8363.8633 -7828.7896 8364.1309 -7828.5869 8364.1094 C
-7828.3755 8363.9004 L
-7828.3408 8363.9922 L
-7828.2021 8363.9434 -7828.0513 8363.7813 -7828.1943 8363.6758 C
-7825.4873 8363.3926 -7822.8242 8364.0508 -7820.1729 8363.9697 C
-7819.5435 8364.1064 -7818.6475 8363.9814 -7817.9629 8363.9141 C
-7815.9355 8364.3516 -7814.1079 8364.7041 -7812.0479 8364.3984 C
-7812.3169 8365.2461 -7813.1675 8365.4414 V
f
-7903.2578 8365.2422 m
-7903.1855 8365.4063 -7902.9497 8365.4961 -7903.1377 8365.7148 C
-7903.1611 8365.5605 -7903.2822 8365.3887 -7903.2578 8365.2422 C
f
-7896.9619 8366.9297 m
-7896.9536 8366.8809 -7896.8721 8366.9961 -7896.8521 8367.0225 C
-7896.9297 8367.0352 -7897.0024 8367.1729 -7897.0645 8367.0879 C
-7896.9854 8367.0762 -7896.9976 8366.998 -7896.9619 8366.9297 C
f
-7895.3521 8367.0273 m
-7895.3765 8367.1729 -7895.7207 8367.2891 -7895.9238 8367.3066 C
-7895.3521 8367.0273 L
f
-7893.8521 8367.6289 m
-7893.7227 8367.752 -7893.7583 8367.8193 -7893.9326 8367.8154 C
-7893.9453 8367.7383 -7893.8877 8367.6992 -7893.8521 8367.6289 C
f
-7893.7456 8367.2969 m
-7893.6211 8367.293 -7893.5591 8367.3789 -7893.4985 8367.4629 C
-7893.5029 8367.3369 -7893.7871 8367.541 -7893.7456 8367.2969 C
f
-7890.4893 8367.7207 m
-7890.4111 8367.709 -7890.2417 8367.5879 -7890.1689 8367.75 C
-7890.2505 8367.6367 -7890.5498 8367.9346 -7890.4893 8367.7207 C
f
-7888.9761 8367.5 m
-7888.9272 8367.5098 -7888.9072 8367.5361 -7888.8506 8367.4961 C
-7888.7607 8367.5625 -7888.8555 8367.6689 -7888.9312 8367.6826 C
-7888.9761 8367.5 L
f
-7861.4287 8366.9141 m
-7861.5923 8366.9863 L
-7861.5684 8366.8418 L
-7861.4287 8366.9141 L
f
-7849.3574 8366.9063 m
-7849.1943 8366.8145 -7849.2441 8367.043 -7849.2168 8367.0645 C
-7849.3643 8367.0801 -7849.1621 8366.8848 -7849.3574 8366.9063 C
f
-7842.8486 8366.1777 m
-7842.8984 8366.1816 L
-7842.8818 8365.8828 L
-7842.8486 8366.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7886 8368 m
-7904 8368 L
-7904 8350 L
-7886 8350 L
-7886 8368 L
n
u
u
0 Ap
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-7893.5625 8368 m
-7896.4375 8368 L
-7896.4375 8359.5 L
-7896.4375 8358.4316 -7895.5684 8357.5625 -7894.5 8357.5625 C
-7885.9165 8357.5625 L
-7885.9165 8360.4375 L
-7893.5625 8360.4375 L
-7893.5625 8368 L
-7893.5625 8368 L
f
U
u
0.324163 0.98938 0.899443 0.007477 0.745098 0.117647 0.176471 Xa
-7894.2998 8368 m
-7895.7002 8368 L
-7895.7002 8359.5 L
-7895.7002 8358.8389 -7895.1621 8358.3008 -7894.5 8358.3008 C
-7885.9165 8358.3008 L
-7885.9165 8359.7002 L
-7894.2998 8359.7002 L
-7894.2998 8368 L
-7894.2998 8368 L
f
U
u
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
-7894.6875 8368 m
-7895.3125 8368 L
-7895.3125 8359.5 L
-7895.3125 8359.0527 -7894.9482 8358.6865 -7894.5 8358.6865 C
-7885.9165 8358.6865 L
-7885.9165 8359.3125 L
-7894.5 8359.3125 L
-7894.6035 8359.3125 -7894.6875 8359.3975 -7894.6875 8359.5 C
-7894.6875 8368 L
-7894.6875 8368 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7877.9727 8368 m
-7877.9727 8341.9717 L
-7904 8341.9717 L
-7904 8368 L
-7877.9727 8368 L
n
0 Ap
0 R
0.780026 0.711666 0.603235 0.238987 0.266667 0.27451 0.309804 XA
1.125 w-7904 8350.6465 m
-7877.9727 8350.6465 l
S
0.727169 0.717525 0.752987 0.418799 0.258824 0.223529 0.196078 XA
-7904 8359.3242 m
-7877.9727 8359.3242 l
S
0.700038 0.635004 0.690211 0.209201 0.341176 0.329412 0.290196 XA
0.375 w-7904 8354.9854 m
-7877.9727 8354.9854 l
S
0 O
0.700038 0.635004 0.690211 0.209201 0.341176 0.329412 0.290196 Xa
1 w-7882.5742 8355.0117 m
-7882.3442 8354.7402 -7882.6914 8354.4541 -7883 8354.2432 c
-7883.1118 8354.166 -7883.5215 8354.3789 -7883.7466 8354.2129 c
-7884.0439 8353.9951 -7884.1826 8353.9082 -7884.4824 8353.9141 c
-7884.6455 8353.918 -7885.0435 8354.0479 -7885.1895 8354.0781 c
-7885.5679 8354.1543 -7885.8022 8354.3516 -7886.3672 8354.2549 c
-7886.7344 8354.1914 -7886.8286 8354.1006 -7886.9233 8354.1484 c
-7887.1118 8354.29 -7887.2202 8354.5137 -7887.4258 8354.5625 c
-7887.9575 8354.6895 -7888.3535 8354.7334 -7888.8818 8354.7227 c
-7889.3047 8354.7129 -7890.4185 8354.7813 -7891.2866 8354.6816 c
-7891.6226 8354.6416 -7891.6025 8354.2168 -7891.7695 8354.2129 c
-7891.8618 8354.2109 -7891.7646 8354.5264 -7891.8306 8354.5469 c
-7892.1694 8354.6533 -7892.4702 8353.5029 -7892.6943 8353.5723 c
-7892.8047 8353.6074 -7892.5562 8354.1533 -7892.6729 8354.1816 c
-7892.8975 8354.2373 -7893.2178 8353.2188 -7893.4321 8353.2813 c
-7893.5635 8353.3184 -7893.2886 8353.7383 -7893.4375 8353.8066 c
-7893.6655 8353.9111 -7893.9087 8353.0352 -7894.1064 8353.1338 C
-7894.1543 8353.1816 -7893.7295 8353.9375 -7894.1685 8353.8789 c
-7894.2871 8353.8613 -7894.5054 8353.3135 -7894.5801 8353.3398 c
-7894.6919 8353.3799 -7894.3535 8353.8018 -7894.4897 8353.9277 C
-7894.7681 8354.1543 -7895.3711 8353.1631 -7895.4575 8353.2344 c
-7895.5791 8353.3359 -7895.1279 8354.0977 -7895.2695 8354.166 C
-7895.4497 8354.4297 -7896.0142 8353.5527 -7896.0889 8353.6016 c
-7896.1777 8353.6602 -7895.9058 8354.0381 -7895.8799 8354.2334 c
-7895.8545 8354.4277 -7895.9966 8354.5615 -7896.2144 8354.5098 c
-7896.4736 8354.4473 -7896.8696 8353.6416 -7896.9727 8353.7354 C
-7897.0791 8353.791 -7896.8682 8354.0781 -7896.7954 8354.3125 c
-7896.7583 8354.4277 -7896.8882 8354.6016 -7897.0298 8354.6016 c
-7897.3135 8354.6494 -7897.6255 8353.998 -7897.7065 8354.1025 c
-7897.7524 8354.1621 -7897.5898 8354.4902 -7897.7295 8354.5879 c
-7897.8994 8354.7061 -7898.3115 8354.2383 -7898.4521 8354.293 C
-7898.5361 8354.3418 -7898.4126 8354.5967 -7898.4927 8354.6533 c
-7898.7295 8354.8193 -7899.0039 8354.4209 -7899.0513 8354.4688 C
-7899.1167 8354.4912 -7899.1201 8354.5361 -7899.2793 8354.6406 c
-7899.4736 8354.7676 -7899.5254 8354.8486 -7899.5425 8354.9648 c
-7899.5654 8355.083 -7899.3135 8355.375 -7899.1655 8355.3496 c
-7898.8223 8355.29 -7898.8662 8355.8496 -7898.6328 8355.7158 c
-7898.5679 8355.6797 -7898.6592 8355.2588 -7898.4199 8355.2656 c
-7898.0488 8355.2783 -7897.9858 8355.8213 -7897.7817 8355.8105 c
-7897.6406 8355.8037 -7897.8521 8355.1836 -7897.6328 8355.2607 c
-7897.4751 8355.3164 -7897.0063 8356.3018 -7896.9795 8356.21 c
-7896.8975 8355.9424 -7897.0703 8355.3984 -7896.9409 8355.4082 c
-7896.7568 8355.4229 -7896.5078 8356.3174 -7896.2544 8356.4375 c
-7896.1826 8356.4727 -7896.3774 8355.6006 -7896.1958 8355.5967 C
-7896.0898 8355.6465 -7895.7578 8356.4492 -7895.6274 8356.498 C
-7895.5591 8356.4824 -7895.5879 8356.125 -7895.5176 8356.1045 c
-7895.4688 8356.0898 -7895.2817 8356.5654 -7895.21 8356.5234 c
-7895.1055 8356.4629 -7895.2471 8355.9922 -7895.0889 8355.9229 c
-7894.9175 8355.8486 -7894.4878 8356.8926 -7894.3486 8356.7979 c
-7894.2769 8356.75 -7894.3574 8356.21 -7894.21 8356.2461 c
-7894.0718 8356.2783 -7893.9414 8356.6143 -7893.8081 8356.6426 c
-7893.7295 8356.6582 -7893.7935 8356.1914 -7893.7495 8356.1738 c
-7893.5889 8356.1152 -7893.2329 8356.6719 -7893.0688 8356.5234 c
-7892.8584 8356.335 -7892.9395 8355.9697 -7892.8345 8355.9824 c
-7892.6274 8356.0059 -7892.4912 8356.2432 -7892.4146 8356.1836 c
-7892.2642 8356.0684 -7892.3281 8355.7793 -7892.0527 8355.6924 c
-7891.8975 8355.6426 -7891.7935 8355.9346 -7891.7495 8355.9307 c
-7891.6738 8355.9277 -7891.6782 8355.8301 -7891.6665 8355.7246 c
-7891.6328 8355.4609 -7891.6064 8355.3994 -7891.4878 8355.377 c
-7891.0854 8355.3535 -7890.5625 8355.2842 -7890.1807 8355.2754 c
-7889.6274 8355.2607 -7888.2607 8355.2373 -7888.1182 8355.2373 c
-7888 8355.2129 -7887.7432 8355.3945 -7887.6689 8355.4609 c
-7887.4678 8355.6455 -7887.2998 8355.8594 -7886.9858 8356.1201 c
-7886.8906 8356.2012 -7886.8081 8356.1807 -7886.7378 8356.1563 c
-7886.5249 8356.085 -7886.4585 8356.0332 -7886.2202 8356.002 c
-7885.9175 8355.959 -7885.4272 8356.0488 -7885.1245 8356.1426 c
-7884.6035 8356.3018 -7884.5264 8356.3242 -7884.0977 8356.2754 c
-7883.6992 8356.2295 -7883.0586 8356.1582 -7883.0479 8355.8105 c
-7883.0415 8355.5957 -7882.9414 8355.4434 -7882.5742 8355.0117 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7877.9722 8368 m
-7877.9722 8341.9727 L
-7904 8341.9727 L
-7904 8368 L
-7877.9722 8368 L
n
0 Ap
0 R
0.700038 0.635004 0.690211 0.209201 0.341176 0.329412 0.290196 XA
0.375 w-7886.6455 8354.9893 m
-7877.9736 8354.9893 l
S
-7890.9839 8368 m
-7890.9839 8359.3242 l
S
0.780026 0.711666 0.603235 0.238987 0.266667 0.27451 0.309804 XA
1.125 w-7886.7202 8350.6504 m
-7877.9727 8350.6504 l
S
-7895.3232 8367.999 m
-7895.3232 8358.6455 l
S
0.727169 0.717525 0.752987 0.418799 0.258824 0.223529 0.196078 XA
-7886.6504 8367.999 m
-7886.6504 8365.5869 l
-7883.9937 8365.3633 -7882.3096 8363.6602 v
-7880.6064 8361.9336 -7880.3774 8359.3281 y
-7877.9727 8359.3281 l
S
*u
1 D
0 O
0.780026 0.711666 0.603235 0.238987 0.266667 0.27451 0.309804 Xa
1 w-7894.8418 8352.1855 m
-7894.8418 8352.25 -7894.8218 8352.291 -7894.7783 8352.291 c
-7894.6943 8352.291 -7894.4634 8351.9541 -7894.3994 8351.9541 c
-7894.3154 8351.9541 -7894.2729 8351.9961 -7894.2729 8352.1016 c
-7894.2729 8352.1855 -7894.5264 8353.0928 y
-7894.5264 8353.1338 -7894.5264 8353.1338 -7894.5049 8353.1338 c
-7894.4414 8353.1338 -7894.0615 8352.5869 -7893.9351 8352.5869 c
-7893.9146 8352.5869 -7893.8936 8352.6074 -7893.8936 8352.6289 c
-7894.1675 8353.5352 -7894.1675 8353.7256 v
-7894.1675 8353.7891 -7894.1675 8353.8105 -7894.1465 8353.8105 c
-7894.1055 8353.8105 -7893.6826 8353.2402 -7893.5562 8353.2402 c
-7893.5352 8353.2402 -7893.5137 8353.2607 -7893.5137 8353.2822 c
-7893.5137 8353.3457 -7893.7666 8354.084 -7893.7666 8354.252 c
-7893.7666 8354.2949 -7893.7666 8354.2949 -7893.7446 8354.2949 c
-7893.6826 8354.2949 -7893.4722 8354.084 -7893.4297 8354.084 c
-7893.4082 8354.084 -7893.3882 8354.1055 -7893.3882 8354.126 c
-7893.3882 8354.1465 -7893.4927 8354.5059 -7893.4927 8354.5898 c
-7893.4927 8354.6113 -7893.4927 8354.6113 -7893.4722 8354.6113 c
-7893.4297 8354.6113 -7893.0918 8354.252 -7893.0078 8354.252 c
-7892.9658 8354.252 -7892.9233 8354.2949 -7892.9233 8354.3789 c
-7892.9233 8354.5273 -7893.1138 8355.2441 -7893.1138 8355.2861 c
-7893.1138 8355.3701 -7893.0918 8355.4121 -7893.0498 8355.4121 c
-7892.9658 8355.4121 -7892.7119 8355.0957 -7892.6494 8355.0957 c
-7892.5854 8355.0957 -7892.5439 8355.1162 -7892.5439 8355.1807 c
-7892.5854 8355.6016 L
-7892.5854 8355.666 -7892.5854 8355.6855 -7892.5654 8355.6855 c
-7892.5225 8355.6855 -7892.2915 8355.3916 -7892.2065 8355.3916 c
-7892.1006 8355.3916 -7892.1006 8355.877 -7892.1006 8355.9395 c
-7892.1006 8356.0449 -7892.0166 8356.1289 -7891.8896 8356.1289 c
-7891.8057 8356.1289 -7891.4678 8355.8975 -7891.4473 8355.8975 c
-7891.3623 8355.8975 -7891.3198 8356.3398 -7891.2568 8356.3398 c
-7891.1943 8356.3398 -7890.9199 8356.2129 -7890.8564 8356.2129 c
-7890.6455 8356.2129 -7890.6035 8356.2988 -7890.6035 8356.4668 c
-7890.6255 8356.6143 L
-7890.6255 8356.6563 -7890.6035 8356.6563 -7890.5835 8356.6563 c
-7890.4985 8356.6563 -7890.2241 8356.3818 -7890.1392 8356.3818 c
-7889.9287 8356.3818 -7887.8198 8358.4492 -7887.5454 8358.7227 c
-7887.3984 8358.8906 -7887.3984 8359.1865 -7887.3984 8359.3135 c
-7887.3984 8360.1777 -7887.3984 8360.2617 -7887.2295 8360.3457 c
-7886.5977 8360.5996 -7886.5127 8360.7471 -7885.7334 8362.0332 c
-7885.6479 8362.1807 -7884.7407 8362.793 -7884.5942 8362.793 c
-7884.4878 8362.793 -7884.1094 8362.5391 -7884.0239 8362.5391 c
-7883.9194 8362.5391 -7883.8135 8362.6025 -7883.8135 8362.7705 c
-7883.8135 8363.2139 -7884.3408 8363.7207 -7884.9312 8363.7207 c
-7885.7534 8363.7207 -7886.0913 8363.0234 -7886.1338 8362.625 c
-7886.1543 8362.4766 -7886.2393 8362.3916 -7886.3447 8362.3916 c
-7886.3862 8362.3916 -7886.4287 8362.4121 -7886.4702 8362.4766 c
-7886.9561 8363.2773 -7887.9473 8363.7207 -7888.7065 8363.7207 c
-7889.7393 8363.7207 -7890.8774 8363.0879 -7891.3418 8362.8145 c
-7891.7842 8362.5615 -7892.4814 8362.3916 -7892.8809 8362.3916 c
-7893.3242 8362.3916 -7893.3662 8362.5391 -7893.3662 8362.793 c
-7893.3662 8362.9404 -7892.9023 8363.3818 -7892.9023 8363.5098 c
-7892.9023 8363.6357 -7893.0498 8363.7207 -7893.4082 8363.7207 c
-7893.8936 8363.7207 -7894.5679 8363.0029 -7894.5679 8362.2236 c
-7894.5679 8361.6113 -7893.7666 8361.085 -7893.3022 8361.085 c
-7892.3755 8361.085 -7892.0942 8361.4434 -7891.5264 8361.9072 c
-7891.4414 8361.9697 -7891.3774 8361.9922 -7891.3359 8361.9922 c
-7891.1895 8361.9922 -7891.1895 8360.8945 -7891.1895 8360.7695 c
-7891.1895 8360.6201 -7891.2729 8360.5576 -7891.3774 8360.5576 c
-7893.7822 8360.5576 -7898.6592 8359.334 -7900.3672 8353.1777 c
-7900.4297 8352.9658 -7900.5361 8352.8613 -7900.6406 8352.8613 c
-7900.7881 8352.8613 -7901.7793 8353.7041 -7901.7793 8355.2861 c
-7901.7793 8357.1201 -7900.5767 8358.0898 -7899.9873 8358.0898 c
-7899.8398 8358.0898 -7899.6494 8358.0693 -7899.6494 8357.9209 c
-7899.6494 8357.8584 -7899.6929 8357.7949 -7899.7759 8357.6895 c
-7900.1143 8357.3535 -7900.3672 8356.7197 -7900.3672 8356.4033 c
-7900.3672 8356.1914 -7900.2607 8356.0234 -7900.1143 8356.0234 c
-7899.9033 8356.0234 -7899.5654 8356.9727 -7899.46 8357.1201 c
-7899.3335 8357.3311 -7898.9546 8357.7109 -7898.2378 8358.2383 c
-7897.4995 8358.7637 -7896.0654 8360.0723 -7896.0654 8361.3369 c
-7896.0654 8362.709 -7897.1191 8363.6152 -7897.9209 8363.6152 c
-7898.7007 8363.6152 -7899.6714 8363.0879 -7900.0713 8362.6025 c
-7900.7041 8361.8652 -7901.3154 8361.2949 -7901.8218 8361.2949 c
-7902.1592 8361.2949 -7902.3066 8361.5059 -7902.3066 8361.7168 c
-7902.3066 8362.0537 -7902.0537 8362.2861 -7901.5479 8362.3281 c
-7900.9575 8362.3711 -7900.8936 8362.793 -7900.8936 8363.1289 c
-7900.8936 8363.4033 -7901.4209 8363.7207 -7901.8433 8363.7207 c
-7902.4751 8363.7207 -7903.2974 8363.0234 -7903.2974 8361.1904 c
-7903.2974 8359.6924 -7902.0537 8359.2295 -7901.5679 8359.2295 c
-7901.1265 8359.2295 -7900.4722 8359.3135 -7900.0928 8359.6504 c
-7898.8066 8360.8535 -7898.1318 8361.0625 -7897.5835 8361.0625 c
-7897.3721 8361.0625 -7897.2881 8361.0625 -7897.2881 8361.2109 c
-7897.2881 8361.5273 -7898.0474 8361.7168 -7898.1318 8361.7383 c
-7898.3423 8361.8008 -7898.5103 8362.0332 -7898.5103 8362.2441 c
-7898.5103 8362.7295 -7898.2378 8362.75 -7897.8774 8362.75 c
-7897.5215 8362.75 -7896.8042 8362.3916 -7896.8042 8361.1904 c
-7896.8042 8360.1992 -7897.9424 8359.0391 -7898.4058 8358.8076 c
-7898.7007 8358.6377 -7899.5874 8358.6602 -7899.9458 8358.6172 c
-7900.6406 8358.5322 -7902.4121 8357.585 -7902.4121 8355.0957 c
-7902.4336 8353.6826 -7901.1265 8352.3555 -7900.8511 8352.166 c
-7900.6826 8352.0586 -7900.5986 8351.9326 -7900.5986 8351.7637 c
-7900.5986 8351.5527 -7900.6626 8348.6221 -7900.9995 8348.6221 c
-7901.4424 8348.6221 -7901.5054 8348.6221 -7901.5054 8348.8135 c
-7901.21 8349.9082 -7901.21 8350.1406 v
-7901.21 8350.457 -7901.4424 8351.9326 -7902.3066 8351.9326 c
-7902.5806 8351.9326 -7903.0449 8351.7002 -7903.0449 8351.3848 c
-7903.0449 8351.0898 -7902.3486 8349.8877 -7902.3486 8349.6133 c
-7902.3486 8349.1279 -7902.3921 8349.1074 -7903.0654 8348.4961 c
-7903.2559 8348.3486 -7903.3193 8348.2227 -7903.3193 8348.0313 c
-7903.3193 8347.8633 -7903.2134 8347.7354 -7903.0449 8347.7354 c
-7902.8975 8347.7354 -7902.3281 8348.0117 -7902.2017 8348.0313 c
-7902.0752 8348.0313 -7901.8433 8348.0527 -7901.6538 8348.0527 c
-7901.2734 8348.0527 -7901.0845 8347.9258 -7901.0845 8347.7998 c
-7901.0845 8347.5674 -7901.0845 8346.8936 -7901.9263 8345.4375 c
-7902.1167 8345.1006 -7903.2974 8343.7725 -7903.2974 8343.4346 c
-7903.2974 8343.2656 -7903.2134 8343.2461 -7903.1089 8343.2461 c
-7902.9185 8343.2461 -7902.4966 8343.667 -7902.3706 8343.8145 c
-7901.1265 8345.1426 -7900.3042 8346.5762 -7899.9238 8347.8418 c
-7899.8398 8348.1582 -7899.7344 8348.0742 -7899.5654 8348.0957 c
-7897.4155 8348.6016 -7895.3271 8351.1104 -7895.3271 8351.1318 c
-7895.4326 8351.4053 -7895.4326 8351.4688 v
-7895.4326 8351.5957 -7895.3271 8351.6172 -7895.3057 8351.6172 c
-7895.2432 8351.6172 -7895.0527 8351.4053 -7895.0103 8351.4053 c
-7894.9058 8351.4053 -7894.7783 8351.4902 -7894.7783 8351.6377 C
-7894.8418 8352.1855 l
f
0 D
-7898.1104 8350.6895 m
-7897.5215 8350.6895 -7897.0986 8350.7949 -7896.6982 8351.0684 c
-7896.6553 8351.0898 -7896.6138 8351.1104 -7896.5928 8351.1104 c
-7896.5498 8351.1104 -7896.5498 8351.0898 -7896.5498 8351.0469 c
-7896.5498 8350.626 -7898.4272 8348.666 -7899.5654 8348.666 c
-7899.6289 8348.666 -7899.6714 8348.707 -7899.6714 8348.7695 c
-7899.6714 8348.96 -7899.5874 8350.9629 -7899.2495 8350.9629 c
-7899.1865 8350.9629 -7899.1016 8350.9414 -7899.0386 8350.9004 c
-7898.7007 8350.752 -7898.4902 8350.6895 -7898.1104 8350.6895 c
f
-7897.5835 8353.4512 m
-7897.5835 8353.0293 -7897.5625 8352.5654 -7896.8662 8352.5654 c
-7896.2334 8352.5654 -7895.6431 8353.2197 -7895.4961 8353.3672 c
-7895.4326 8353.4092 -7895.3906 8353.4297 -7895.3486 8353.4297 c
-7895.3271 8353.4297 -7895.2847 8353.3877 -7895.2847 8353.3457 c
-7895.2847 8352.9023 -7896.6553 8351.2373 -7898.0049 8351.2373 c
-7898.2578 8351.2373 -7899.2705 8351.4053 -7899.2705 8351.9541 c
-7899.2705 8352.207 -7898.8906 8353.5781 -7898.2793 8354.6533 c
-7896.9087 8357.1416 -7892.7119 8358.7002 -7890.8145 8358.7002 c
-7889.9072 8358.7227 -7889.6118 8358.4063 -7889.4863 8358.3848 c
-7889.4648 8358.3848 -7889.4438 8358.3643 -7889.4233 8358.3643 c
-7889.3174 8358.3643 -7889.1904 8358.4277 -7889.1904 8358.5752 c
-7889.1904 8358.5967 -7889.2119 8358.5967 v
-7889.3594 8359.7344 -7889.4014 8360.1357 -7889.4014 8361.3994 c
-7889.4014 8362.793 -7889.4014 8362.9189 -7888.4321 8362.9189 c
-7887.1455 8362.9189 -7886.8506 8361.8438 -7886.8506 8361.6113 c
-7886.8506 8361.1904 -7887.4399 8360.8945 -7887.5889 8360.8945 c
-7887.7358 8360.8945 -7887.9058 8361.002 -7887.9058 8361.1904 c
-7887.9058 8361.4854 -7887.9473 8361.6328 -7888.2207 8361.6328 c
-7888.4951 8361.6328 -7888.4951 8361.2744 -7888.4951 8361.168 c
-7888.4951 8360.916 -7888.3896 8360.6631 -7888.1782 8360.5361 c
-7887.7998 8360.2832 -7887.7998 8359.8828 -7887.7998 8359.6719 c
-7887.7998 8359.5664 -7887.7998 8359.4395 -7887.8198 8359.334 c
-7887.8418 8359.166 -7889.7817 8357.1201 -7890.0977 8357.1201 c
-7890.2446 8357.1201 -7890.5615 8357.2666 -7891.4258 8357.2666 c
-7893.5767 8357.2666 -7894.5474 8355.5391 -7894.7378 8355.0117 c
-7894.9897 8354.2949 -7895.7915 8353.999 -7896.0225 8353.999 c
-7896.2129 8353.999 -7896.2129 8354.042 -7896.2129 8354.4424 c
-7896.2129 8354.5273 -7896.4238 8354.8633 y
-7896.4238 8355.0537 -7895.3906 8355.3066 -7895.3906 8355.4961 c
-7895.3906 8355.666 -7895.5801 8355.6855 -7895.7271 8355.6855 c
-7895.8115 8355.6855 -7896.8882 8355.6855 -7897.3306 8354.8633 c
-7897.5415 8354.4629 -7897.5835 8353.8945 -7897.5835 8353.4512 c
f
1 D
-7893.4927 8351.1953 m
-7893.4927 8351.1514 -7893.5137 8351.1318 -7893.5352 8351.1318 c
-7893.5986 8351.1318 -7893.7666 8351.4688 -7893.8506 8351.4688 c
-7893.9146 8351.4688 -7893.9995 8351.3848 -7894.0415 8351.2783 c
-7894.0615 8351.1953 -7894.1255 8350.7305 -7894.21 8350.7305 c
-7894.2524 8350.7305 -7894.4209 8350.9629 -7894.4634 8350.9629 c
-7894.6104 8350.9629 -7894.7158 8350.7305 -7894.7158 8350.5215 c
-7894.7158 8350.415 -7894.7783 8350.415 -7894.9263 8350.415 c
-7895.5166 8350.415 -7897.1406 8348.2432 -7897.5625 8346.4922 c
-7897.6055 8346.3242 -7897.5835 8346.1768 -7897.8994 8346.0703 c
-7900.0713 8345.334 -7902.5176 8343.1816 -7902.5176 8343.0557 c
-7902.5176 8342.9082 -7902.4336 8342.8242 -7902.3066 8342.8242 c
-7902.2432 8342.8242 -7902.1592 8342.8242 -7901.6538 8343.1602 c
-7900.7681 8343.751 -7898.7217 8345.0381 -7897.8994 8345.0381 c
-7897.6265 8345.0381 -7897.6055 8344.6797 -7897.6055 8344.4258 c
-7897.6055 8344.2354 -7897.6265 8344.0039 -7897.6265 8343.8574 c
-7897.6465 8343.583 -7897.9634 8343.2656 -7897.9634 8343.0977 c
-7897.9634 8342.9502 -7897.8154 8342.8447 -7897.6465 8342.8447 c
-7897.4575 8342.8447 -7897.3306 8342.8662 -7897.1606 8343.0557 c
-7896.8662 8343.3926 -7896.7402 8343.541 -7896.4238 8343.541 c
-7896.1914 8343.541 -7895.1377 8342.8242 -7894.8838 8342.8242 c
-7894.5679 8342.8242 -7894.1895 8343.3086 -7894.1895 8343.6045 c
-7894.1895 8344.3418 -7895.0942 8344.9326 -7895.6431 8344.9326 c
-7896.0225 8344.9326 -7896.4438 8344.8066 -7896.6353 8344.5742 c
-7896.6982 8344.5098 -7896.7607 8344.4688 -7896.8242 8344.4688 c
-7896.9937 8344.4688 -7897.1191 8344.9326 -7897.1191 8344.9746 c
-7897.1191 8345.3975 -7894.2729 8345.459 -7893.9146 8345.459 c
-7893.7666 8345.459 -7893.6401 8345.375 -7893.5352 8345.2061 c
-7893.3447 8344.9121 -7892.1855 8343.6895 -7890.6255 8343.6895 c
-7888.79 8343.6895 -7887.0825 8344.9521 -7887.0825 8346.8506 c
-7887.0825 8346.957 -7887.1245 8347.5039 -7887.1245 8347.5264 c
-7887.1245 8347.5898 -7886.0063 8349.3389 -7884.6782 8349.3389 c
-7883.6245 8349.3389 -7883.2656 8348.75 -7883.2656 8348.2637 c
-7883.2656 8348.0313 -7883.3711 8347.3789 -7883.8984 8347.3789 c
-7884.1094 8347.3789 -7884.2144 8347.5898 -7884.2144 8347.9688 c
-7884.2144 8348.0527 -7884.0039 8348.4326 -7884.0039 8348.5381 c
-7884.0039 8348.5801 -7884.0239 8348.6016 -7884.0879 8348.6016 c
-7884.4258 8348.6016 -7884.9521 8348.2432 -7885.1846 8347.5898 c
-7885.4595 8346.873 -7885.8594 8346.1768 -7886.1958 8345.7754 c
-7886.5127 8345.418 -7886.6182 8344.8262 -7886.6182 8344.4893 c
-7886.6182 8344.0039 -7886.1338 8342.8447 -7884.4878 8342.8447 c
-7883.2871 8342.8447 -7882.4434 8343.583 -7882.4434 8344.1943 c
-7882.4434 8344.8066 -7882.7598 8345.1855 -7883.2026 8345.1855 c
-7883.6455 8345.1855 -7883.9824 8344.8477 -7883.9824 8344.5098 c
-7883.9824 8343.8359 -7884.1514 8343.6895 -7884.4878 8343.6895 c
-7884.6992 8343.6895 -7884.8896 8343.8145 -7884.8896 8344.1309 c
-7884.8896 8344.3633 -7884.8896 8344.7422 -7883.3711 8346.0078 c
-7882.8857 8346.4082 -7882.4214 8347.1055 -7882.4214 8347.8848 c
-7882.4214 8348.6445 -7883.4561 8349.8447 -7884.6362 8349.8447 c
-7885.8594 8349.8447 -7886.6401 8349.0654 -7887.2515 8348.3486 c
-7887.5454 8348.0117 -7888.9814 8346.3242 -7889.0439 8346.3018 c
-7889.2334 8346.1543 -7889.3174 8346.0293 -7889.3174 8345.9023 c
-7889.3174 8345.7969 -7889.2119 8345.6914 -7889.0854 8345.6914 c
-7888.8535 8345.6914 -7887.9058 8346.6406 -7887.8198 8346.6406 c
-7887.7568 8346.6406 -7887.7153 8346.5762 -7887.7153 8346.4922 c
-7887.7153 8345.7334 -7888.8535 8344.2578 -7890.6255 8344.2578 c
-7892.1006 8344.2578 -7892.9863 8345.375 -7892.9863 8345.418 c
-7892.9863 8345.5439 -7892.8394 8345.6689 -7892.5225 8345.7334 c
-7888.6426 8346.4717 -7885.3955 8350.0215 -7885.3955 8354.6377 c
-7885.3955 8354.7441 -7885.2256 8354.7705 -7885.0786 8354.7705 c
-7884.7202 8354.7705 -7884.0879 8354.8496 -7884.0879 8354.5762 c
-7884.0879 8354.4697 -7884.1294 8354.3438 -7884.1934 8354.2168 c
-7884.5518 8353.6465 -7884.8682 8353.4727 -7884.8682 8352.5215 c
-7884.8682 8352.0586 -7884.4878 8351.5322 -7883.8984 8351.5322 c
-7882.8657 8351.5322 -7882.4214 8352.5654 -7882.4214 8352.7969 c
-7882.4214 8352.9658 -7882.5073 8353.0293 -7882.5903 8353.0293 c
-7882.7178 8353.0293 -7883.2241 8352.502 -7883.3711 8352.502 c
-7883.5615 8352.502 -7883.7085 8352.5439 -7883.7085 8353.0293 c
-7883.7085 8353.3672 -7882.4214 8357.0781 -7882.4214 8357.8789 c
-7882.4214 8358.4492 -7882.7598 8359.1455 -7883.6455 8359.6504 c
-7883.6875 8359.6719 -7883.7085 8359.6924 -7883.7085 8359.7344 c
-7883.7085 8359.8184 -7883.5615 8359.9248 -7883.4126 8359.9658 c
-7882.8018 8360.1357 -7882.4214 8360.2412 -7882.4214 8361.1904 c
-7882.4214 8361.5488 -7882.7598 8362.2236 -7883.0127 8362.2236 c
-7883.2026 8362.2236 -7883.2026 8362.1807 -7883.2026 8361.8223 c
-7883.2026 8361.6748 -7883.2446 8361.5693 -7883.3926 8361.4639 c
-7883.7085 8361.2529 -7883.7295 8361.2109 -7883.8135 8360.7266 c
-7883.8774 8360.4102 -7884.0039 8360.3242 -7885.1426 8359.6924 c
-7885.5854 8359.4189 -7885.6904 8359.1865 -7885.7744 8358.9551 c
-7885.8594 8358.7637 -7885.9233 8358.7637 -7886.4287 8358.7637 c
-7886.9561 8358.7637 -7889.5073 8356.0449 -7889.5073 8355.918 c
-7889.5073 8355.8555 -7889.3809 8355.5596 -7889.3809 8355.4961 c
-7889.3809 8355.4336 -7889.4014 8355.3916 -7889.4438 8355.3916 c
-7889.4863 8355.3916 -7889.6338 8355.6016 -7889.6758 8355.6016 c
-7889.7817 8355.6016 -7889.7817 8355.4121 -7889.7817 8355.2637 c
-7889.7817 8355.1602 -7889.5703 8354.5898 -7889.5703 8354.4424 c
-7889.5703 8354.3584 -7889.5918 8354.2949 -7889.6338 8354.2949 c
-7889.7178 8354.2949 -7889.9072 8354.7578 -7889.9922 8354.7578 c
-7890.0342 8354.7578 -7890.0762 8354.7168 -7890.0762 8354.5898 c
-7890.0762 8354.4424 -7889.8862 8353.7256 y
-7889.8862 8353.6621 -7889.9072 8353.5566 -7889.9502 8353.5566 c
-7890.0342 8353.5566 -7890.1826 8353.957 -7890.2666 8353.957 c
-7890.3286 8353.957 -7890.3926 8353.873 -7890.3926 8353.7256 c
-7890.3926 8353.6406 -7890.2446 8353.2197 -7890.2446 8353.1143 c
-7890.2446 8353.0508 -7890.2666 8352.9863 -7890.3086 8352.9863 c
-7890.3506 8352.9863 -7890.5835 8353.5996 -7890.7095 8353.5996 c
-7890.7935 8353.5996 -7890.8994 8353.4922 -7890.8994 8353.3877 c
-7890.8994 8353.3037 -7890.7729 8352.9453 -7890.7729 8352.8613 c
-7890.7729 8352.8184 -7890.7729 8352.7969 -7890.7935 8352.7969 c
-7890.8774 8352.7969 -7891.0254 8353.2822 -7891.1104 8353.2822 c
-7891.3418 8353.2822 -7891.3623 8352.8613 -7891.3623 8352.6709 c
-7891.3623 8352.5869 -7891.2998 8352.25 -7891.2998 8352.1855 c
-7891.2998 8352.123 -7891.3198 8352.1016 -7891.3418 8352.1016 c
-7891.4897 8352.1016 -7891.6782 8352.9023 -7891.8271 8352.9023 c
-7892.0386 8352.9023 -7892.0386 8352.7129 -7892.0386 8352.4814 c
-7892.0166 8351.9541 L
-7892.0166 8351.9326 -7892.0386 8351.9121 y
-7892.0586 8351.9121 -7892.1006 8351.9326 -7892.1226 8351.9961 c
-7892.1855 8352.207 -7892.3115 8352.6289 -7892.5225 8352.6289 c
-7892.6694 8352.6289 -7892.8174 8352.46 -7892.8174 8352.3135 c
-7892.8174 8352.0801 -7892.7119 8351.7002 -7892.7119 8351.4688 c
-7892.7119 8351.4053 -7892.7334 8351.3848 -7892.7754 8351.3848 c
-7892.8608 8351.3848 -7892.9863 8351.8262 -7893.0278 8351.9121 c
-7893.0918 8351.9961 -7893.1553 8352.0176 -7893.2192 8352.0176 c
-7893.5352 8352.0176 -7893.5352 8351.7002 -7893.5352 8351.5527 C
-7893.4927 8351.1953 l
f
0 D
-7894.8633 8346.8301 m
-7894.8633 8346.5977 -7896.8042 8346.4082 -7896.8662 8346.4082 c
-7896.9722 8346.4082 -7897.0352 8346.4717 -7897.0352 8346.5762 c
-7897.0352 8347.4414 -7895.2847 8349.6768 -7894.8633 8349.6768 c
-7894.7998 8349.6768 -7894.7783 8349.6563 -7894.7783 8349.5928 c
-7895.2002 8348.3486 -7895.2002 8348.0957 v
-7895.2002 8347.7158 -7895.0942 8347.4629 -7894.9058 8347.041 c
-7894.8838 8346.957 -7894.8633 8346.8936 -7894.8633 8346.8301 c
f
-7886.1338 8358.2793 m
-7885.9858 8358.2793 -7885.4795 8357.7744 -7885.3325 8357.7744 c
-7885.2065 8357.7744 -7885.0791 8357.8584 -7885.0791 8358.0059 c
-7885.0791 8358.0898 -7885.2695 8358.5322 -7885.2695 8358.6377 c
-7885.2695 8358.9961 -7884.8896 8359.293 -7884.5098 8359.293 c
-7884.1094 8359.293 -7882.9702 8358.9756 -7882.9702 8357.752 c
-7882.9702 8356.6563 -7883.3926 8356.6563 -7885.0366 8356.6563 c
-7885.3955 8356.6563 -7887.0615 8356.8457 -7887.3145 8356.8457 c
-7887.4399 8356.8457 -7887.4834 8356.6768 -7887.4834 8356.5498 c
-7887.4834 8356.5088 -7887.4834 8356.4668 -7887.4614 8356.4453 c
-7887.3984 8356.0664 -7887.1675 8355.5176 -7887.1675 8355.1377 c
-7887.1675 8350.6895 -7891.2998 8346.8301 -7893.7666 8346.8301 c
-7894.4209 8346.8301 -7894.6519 8347.6318 -7894.6519 8348.0527 c
-7894.6519 8349.7822 -7892.6694 8350.8145 -7892.4175 8350.8145 c
-7892.3545 8350.8145 -7892.3335 8350.7949 -7892.3335 8350.752 c
-7892.3335 8350.71 -7892.3545 8350.668 -7892.3975 8350.626 c
-7892.5225 8350.457 -7893.0498 8349.8447 -7893.0498 8349.2129 c
-7893.0498 8348.875 -7892.7554 8348.4326 -7891.9951 8348.4326 c
-7890.7305 8348.4326 -7890.1826 8349.7822 -7890.1826 8350.1406 c
-7890.1826 8350.2891 -7890.2446 8350.499 -7890.4561 8350.499 c
-7890.6035 8350.499 -7891.0049 8349.8447 -7891.1519 8349.8447 c
-7891.2158 8349.8447 -7891.4473 8349.9717 -7891.5103 8349.9717 c
-7891.5942 8349.9717 -7891.6582 8349.9512 -7891.7422 8349.9512 c
-7891.8057 8349.9512 -7891.8481 8350.0137 -7891.8481 8350.1191 c
-7891.8481 8350.4785 -7891.3623 8351.0469 -7890.8774 8351.3008 c
-7889.9722 8351.7637 -7888.6226 8353.0928 -7888.6226 8354.5479 c
-7888.6226 8354.9688 -7888.6846 8355.3701 -7888.6846 8355.707 c
-7888.6846 8356.2559 -7887.7568 8357.1201 -7886.8081 8358.0059 c
-7886.6401 8358.1533 -7886.3862 8358.2793 -7886.1338 8358.2793 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7877.9722 8368 m
-7877.9722 8341.9727 L
-7904 8341.9727 L
-7904 8368 L
-7877.9722 8368 L
n
0 Ap
0 R
0.700038 0.635004 0.690211 0.209201 0.341176 0.329412 0.290196 XA
0.375 w-7886.6455 8354.9893 m
-7877.9736 8354.9893 l
S
-7890.9839 8368 m
-7890.9839 8359.3242 l
S
0.727169 0.717525 0.752987 0.418799 0.258824 0.223529 0.196078 XA
1.125 w-7886.7202 8350.6504 m
-7877.9727 8350.6504 l
S
-7895.3232 8368 m
-7895.3232 8358.6455 l
S
0.780026 0.711666 0.603235 0.238987 0.266667 0.27451 0.309804 XA
-7886.6504 8368 m
-7886.6504 8365.5869 l
-7883.9937 8365.3633 -7882.3096 8363.6602 v
-7880.6064 8361.9336 -7880.3774 8359.3281 y
-7877.9727 8359.3281 l
S
*u
0 O
0.780026 0.711666 0.603235 0.238987 0.266667 0.27451 0.309804 Xa
1 w-7894.7783 8351.6377 m
-7894.7783 8351.4902 -7894.9058 8351.4053 -7895.0103 8351.4053 c
-7895.0527 8351.4053 -7895.2432 8351.6172 -7895.3057 8351.6172 c
-7895.3271 8351.6172 -7895.4326 8351.5957 -7895.4326 8351.4688 c
-7895.4326 8351.4053 -7895.3271 8351.1318 y
-7895.3271 8351.1104 -7897.4155 8348.6016 -7899.5654 8348.0957 c
-7899.7344 8348.0742 -7899.8398 8348.1582 -7899.9238 8347.8418 c
-7900.3042 8346.5762 -7901.1265 8345.1426 -7902.3706 8343.8145 c
-7902.4966 8343.668 -7902.9185 8343.2461 -7903.1089 8343.2461 c
-7903.2134 8343.2461 -7903.2974 8343.2656 -7903.2974 8343.4346 c
-7903.2974 8343.7725 -7902.1167 8345.1006 -7901.9263 8345.4375 c
-7901.0845 8346.8936 -7901.0845 8347.5674 -7901.0845 8347.7998 c
-7901.0845 8347.9258 -7901.2734 8348.0527 -7901.6538 8348.0527 c
-7901.8433 8348.0527 -7902.0752 8348.0313 -7902.2017 8348.0313 c
-7902.3281 8348.0117 -7902.8975 8347.7354 -7903.0449 8347.7354 c
-7903.2134 8347.7354 -7903.3193 8347.8633 -7903.3193 8348.0313 c
-7903.3193 8348.2227 -7903.2559 8348.3486 -7903.0654 8348.4961 c
-7902.3921 8349.1074 -7902.3486 8349.1279 -7902.3486 8349.6133 c
-7902.3486 8349.8877 -7903.0449 8351.0898 -7903.0449 8351.3848 c
-7903.0449 8351.7002 -7902.5806 8351.9326 -7902.3066 8351.9326 c
-7901.4424 8351.9326 -7901.21 8350.457 -7901.21 8350.1406 c
-7901.21 8349.9082 -7901.5054 8348.8135 y
-7901.5054 8348.6221 -7901.4424 8348.6221 -7900.9995 8348.6221 c
-7900.6626 8348.6221 -7900.5986 8351.5527 -7900.5986 8351.7637 c
-7900.5986 8351.9326 -7900.6826 8352.0586 -7900.8511 8352.166 c
-7901.1265 8352.3555 -7902.4336 8353.6826 -7902.4121 8355.0957 c
-7902.4121 8357.585 -7900.6406 8358.5322 -7899.9458 8358.6172 c
-7899.5874 8358.6602 -7898.7007 8358.6377 -7898.4058 8358.8076 c
-7897.9424 8359.0391 -7896.8042 8360.1992 -7896.8042 8361.1904 c
-7896.8042 8362.3916 -7897.5215 8362.75 -7897.8774 8362.75 c
-7898.2378 8362.75 -7898.5103 8362.7295 -7898.5103 8362.2441 c
-7898.5103 8362.0332 -7898.3423 8361.8008 -7898.1318 8361.7383 c
-7898.0474 8361.7168 -7897.2881 8361.5273 -7897.2881 8361.2109 c
-7897.2881 8361.0625 -7897.3721 8361.0625 -7897.5835 8361.0625 c
-7898.1318 8361.0625 -7898.8066 8360.8535 -7900.0928 8359.6504 c
-7900.4722 8359.3135 -7901.1265 8359.2295 -7901.5679 8359.2295 c
-7902.0537 8359.2295 -7903.2974 8359.6924 -7903.2974 8361.1904 c
-7903.2974 8363.0234 -7902.4751 8363.7207 -7901.8433 8363.7207 c
-7901.4209 8363.7207 -7900.8936 8363.4033 -7900.8936 8363.1289 c
-7900.8936 8362.793 -7900.9575 8362.3711 -7901.5479 8362.3281 c
-7902.0537 8362.2861 -7902.3066 8362.0537 -7902.3066 8361.7168 c
-7902.3066 8361.5059 -7902.1592 8361.2949 -7901.8218 8361.2949 c
-7901.3154 8361.2949 -7900.7041 8361.8652 -7900.0713 8362.6025 c
-7899.6714 8363.0879 -7898.7007 8363.6152 -7897.9209 8363.6152 c
-7897.1191 8363.6152 -7896.0654 8362.709 -7896.0654 8361.3369 c
-7896.0654 8360.0723 -7897.4995 8358.7637 -7898.2378 8358.2383 c
-7898.9546 8357.7109 -7899.3335 8357.3311 -7899.46 8357.1201 c
-7899.5654 8356.9727 -7899.9033 8356.0234 -7900.1143 8356.0234 c
-7900.2607 8356.0234 -7900.3672 8356.1914 -7900.3672 8356.4033 c
-7900.3672 8356.7197 -7900.1143 8357.3535 -7899.7759 8357.6895 c
-7899.6929 8357.7949 -7899.6494 8357.8584 -7899.6494 8357.9209 c
-7899.6494 8358.0693 -7899.8398 8358.0898 -7899.9873 8358.0898 c
-7900.5767 8358.0898 -7901.7793 8357.1201 -7901.7793 8355.2861 c
-7901.7793 8353.7041 -7900.7881 8352.8613 -7900.6406 8352.8613 c
-7900.5361 8352.8613 -7900.4297 8352.9658 -7900.3672 8353.1777 c
-7898.6592 8359.334 -7893.7822 8360.5576 -7891.3774 8360.5576 c
-7891.2729 8360.5576 -7891.1895 8360.6201 -7891.1895 8360.7695 c
-7891.1895 8360.8945 -7891.1895 8361.9922 -7891.3359 8361.9922 c
-7891.3774 8361.9922 -7891.4414 8361.9697 -7891.5264 8361.9072 c
-7892.0942 8361.4434 -7892.3755 8361.085 -7893.3022 8361.085 c
-7893.7666 8361.085 -7894.5679 8361.6113 -7894.5679 8362.2236 c
-7894.5679 8363.0029 -7893.8936 8363.7207 -7893.4082 8363.7207 c
-7893.0498 8363.7207 -7892.9023 8363.6357 -7892.9023 8363.5098 c
-7892.9023 8363.3818 -7893.3662 8362.9404 -7893.3662 8362.793 c
-7893.3662 8362.5391 -7893.3242 8362.3916 -7892.8809 8362.3916 c
-7892.4814 8362.3916 -7891.7842 8362.5615 -7891.3418 8362.8145 c
-7890.8774 8363.0879 -7889.7393 8363.7207 -7888.7065 8363.7207 c
-7887.9473 8363.7207 -7886.9561 8363.2773 -7886.4702 8362.4766 c
-7886.4287 8362.4121 -7886.3862 8362.3916 -7886.3447 8362.3916 c
-7886.2393 8362.3916 -7886.1543 8362.4766 -7886.1338 8362.625 c
-7886.0913 8363.0234 -7885.7534 8363.7207 -7884.9312 8363.7207 c
-7884.3408 8363.7207 -7883.8135 8363.2139 -7883.8135 8362.7705 c
-7883.8135 8362.6025 -7883.9194 8362.5391 -7884.0239 8362.5391 c
-7884.1094 8362.5391 -7884.4878 8362.793 -7884.5942 8362.793 c
-7884.7407 8362.793 -7885.6479 8362.1807 -7885.7334 8362.0332 c
-7886.5127 8360.7471 -7886.5977 8360.5996 -7887.2295 8360.3457 c
-7887.3984 8360.2617 -7887.3984 8360.1777 -7887.3984 8359.3135 c
-7887.3984 8359.1865 -7887.3984 8358.8906 -7887.5454 8358.7227 c
-7887.8198 8358.4492 -7889.9287 8356.3818 -7890.1392 8356.3818 c
-7890.2241 8356.3818 -7890.4985 8356.6563 -7890.5835 8356.6563 c
-7890.6035 8356.6563 -7890.6255 8356.6563 -7890.6255 8356.6143 C
-7890.6035 8356.4668 l
-7890.6035 8356.2988 -7890.6455 8356.2129 -7890.8564 8356.2129 c
-7890.9199 8356.2129 -7891.1943 8356.3398 -7891.2568 8356.3398 c
-7891.3198 8356.3398 -7891.3623 8355.8975 -7891.4473 8355.8975 c
-7891.4678 8355.8975 -7891.8057 8356.1289 -7891.8896 8356.1289 c
-7892.0166 8356.1289 -7892.1006 8356.0449 -7892.1006 8355.9395 c
-7892.1006 8355.877 -7892.1006 8355.3916 -7892.2065 8355.3916 c
-7892.2915 8355.3916 -7892.5225 8355.6855 -7892.5654 8355.6855 c
-7892.5854 8355.6855 -7892.5854 8355.666 -7892.5854 8355.6016 C
-7892.5439 8355.1807 l
-7892.5439 8355.1162 -7892.5854 8355.0957 -7892.6494 8355.0957 c
-7892.7119 8355.0957 -7892.9658 8355.4121 -7893.0498 8355.4121 c
-7893.0918 8355.4121 -7893.1138 8355.3701 -7893.1138 8355.2861 c
-7893.1138 8355.2441 -7892.9233 8354.5273 -7892.9233 8354.3789 c
-7892.9233 8354.2949 -7892.9658 8354.252 -7893.0078 8354.252 c
-7893.0918 8354.252 -7893.4297 8354.6113 -7893.4722 8354.6113 c
-7893.4927 8354.6113 -7893.4927 8354.6113 -7893.4927 8354.5898 c
-7893.4927 8354.5059 -7893.3882 8354.1465 -7893.3882 8354.127 c
-7893.3882 8354.1055 -7893.4082 8354.084 -7893.4297 8354.084 c
-7893.4722 8354.084 -7893.6826 8354.2949 -7893.7446 8354.2949 c
-7893.7666 8354.2949 -7893.7666 8354.2949 -7893.7666 8354.252 c
-7893.7666 8354.084 -7893.5137 8353.3457 -7893.5137 8353.2822 c
-7893.5137 8353.2607 -7893.5352 8353.2402 -7893.5562 8353.2402 c
-7893.6826 8353.2402 -7894.1055 8353.8105 -7894.1465 8353.8105 c
-7894.1675 8353.8105 -7894.1675 8353.7891 -7894.1675 8353.7256 c
-7894.1675 8353.5352 -7893.8936 8352.6289 y
-7893.8936 8352.6074 -7893.9146 8352.5869 -7893.9351 8352.5869 c
-7894.0615 8352.5869 -7894.4414 8353.1338 -7894.5049 8353.1338 c
-7894.5264 8353.1338 -7894.5264 8353.1338 -7894.5264 8353.0928 c
-7894.2729 8352.1855 -7894.2729 8352.1016 v
-7894.2729 8351.9961 -7894.3154 8351.9541 -7894.3994 8351.9541 c
-7894.4634 8351.9541 -7894.6943 8352.291 -7894.7783 8352.291 c
-7894.8218 8352.291 -7894.8418 8352.25 -7894.8418 8352.1855 c
-7894.7783 8351.6377 L
f
1 D
-7899.0386 8350.9004 m
-7899.1016 8350.9414 -7899.1865 8350.9629 -7899.2495 8350.9629 c
-7899.5874 8350.9629 -7899.6714 8348.96 -7899.6714 8348.7695 c
-7899.6714 8348.707 -7899.6289 8348.666 -7899.5654 8348.666 c
-7898.4272 8348.666 -7896.5498 8350.627 -7896.5498 8351.0469 c
-7896.5498 8351.0898 -7896.5498 8351.1104 -7896.5928 8351.1104 c
-7896.6138 8351.1104 -7896.6553 8351.0898 -7896.6982 8351.0684 c
-7897.0986 8350.7949 -7897.5215 8350.6895 -7898.1104 8350.6895 c
-7898.4902 8350.6895 -7898.7007 8350.752 -7899.0386 8350.9004 c
f
-7897.3306 8354.8633 m
-7896.8882 8355.6855 -7895.8115 8355.6855 -7895.7271 8355.6855 c
-7895.5801 8355.6855 -7895.3906 8355.666 -7895.3906 8355.4961 c
-7895.3906 8355.3066 -7896.4238 8355.0537 -7896.4238 8354.8633 c
-7896.2129 8354.5273 -7896.2129 8354.4424 v
-7896.2129 8354.043 -7896.2129 8354 -7896.0225 8354 c
-7895.7915 8354 -7894.9897 8354.2949 -7894.7378 8355.0117 c
-7894.5474 8355.5391 -7893.5767 8357.2666 -7891.4258 8357.2666 c
-7890.5615 8357.2666 -7890.2446 8357.1201 -7890.0977 8357.1201 c
-7889.7817 8357.1201 -7887.8418 8359.166 -7887.8198 8359.334 c
-7887.7998 8359.4395 -7887.7998 8359.5664 -7887.7998 8359.6719 c
-7887.7998 8359.8828 -7887.7998 8360.2832 -7888.1782 8360.5361 c
-7888.3896 8360.6631 -7888.4951 8360.916 -7888.4951 8361.168 c
-7888.4951 8361.2744 -7888.4951 8361.6328 -7888.2207 8361.6328 c
-7887.9473 8361.6328 -7887.9058 8361.4854 -7887.9058 8361.1904 c
-7887.9058 8361.002 -7887.7358 8360.8945 -7887.5889 8360.8945 c
-7887.4399 8360.8945 -7886.8506 8361.1904 -7886.8506 8361.6113 c
-7886.8506 8361.8438 -7887.1455 8362.9189 -7888.4321 8362.9189 c
-7889.4014 8362.9189 -7889.4014 8362.793 -7889.4014 8361.3994 c
-7889.4014 8360.1357 -7889.3594 8359.7344 -7889.2119 8358.5967 c
-7889.1904 8358.5967 -7889.1904 8358.5752 y
-7889.1904 8358.4277 -7889.3174 8358.3643 -7889.4233 8358.3643 c
-7889.4438 8358.3643 -7889.4648 8358.3848 -7889.4863 8358.3848 c
-7889.6118 8358.4063 -7889.9072 8358.7227 -7890.8145 8358.7002 c
-7892.7119 8358.7002 -7896.9087 8357.1416 -7898.2793 8354.6533 c
-7898.8906 8353.5781 -7899.2705 8352.207 -7899.2705 8351.9541 c
-7899.2705 8351.4053 -7898.2578 8351.2373 -7898.0049 8351.2373 c
-7896.6553 8351.2373 -7895.2847 8352.9023 -7895.2847 8353.3457 c
-7895.2847 8353.3877 -7895.3271 8353.4297 -7895.3486 8353.4297 c
-7895.3906 8353.4297 -7895.4326 8353.4092 -7895.4961 8353.3672 c
-7895.6431 8353.2197 -7896.2334 8352.5654 -7896.8662 8352.5654 c
-7897.5625 8352.5654 -7897.5835 8353.0293 -7897.5835 8353.4512 c
-7897.5835 8353.8945 -7897.5415 8354.4629 -7897.3306 8354.8633 c
f
0 D
-7893.5352 8351.5527 m
-7893.5352 8351.7002 -7893.5352 8352.0176 -7893.2192 8352.0176 c
-7893.1553 8352.0176 -7893.0918 8351.9961 -7893.0278 8351.9121 c
-7892.9863 8351.8262 -7892.8608 8351.3848 -7892.7754 8351.3848 c
-7892.7334 8351.3848 -7892.7119 8351.4053 -7892.7119 8351.4688 c
-7892.7119 8351.7002 -7892.8174 8352.0801 -7892.8174 8352.3135 c
-7892.8174 8352.46 -7892.6694 8352.6289 -7892.5225 8352.6289 c
-7892.3115 8352.6289 -7892.1855 8352.207 -7892.1226 8351.9961 c
-7892.1006 8351.9326 -7892.0586 8351.9121 -7892.0386 8351.9121 c
-7892.0166 8351.9326 -7892.0166 8351.9541 V
-7892.0386 8352.4814 l
-7892.0386 8352.7129 -7892.0386 8352.9023 -7891.8271 8352.9023 c
-7891.6782 8352.9023 -7891.4897 8352.1016 -7891.3418 8352.1016 c
-7891.3198 8352.1016 -7891.2998 8352.123 -7891.2998 8352.1855 c
-7891.2998 8352.25 -7891.3623 8352.5869 -7891.3623 8352.6709 c
-7891.3623 8352.8613 -7891.3418 8353.2822 -7891.1104 8353.2822 c
-7891.0254 8353.2822 -7890.8774 8352.7969 -7890.7935 8352.7969 c
-7890.7729 8352.7969 -7890.7729 8352.8184 -7890.7729 8352.8613 c
-7890.7729 8352.9453 -7890.8994 8353.3037 -7890.8994 8353.3877 c
-7890.8994 8353.4922 -7890.7935 8353.5996 -7890.7095 8353.5996 c
-7890.5835 8353.5996 -7890.3506 8352.9863 -7890.3086 8352.9863 c
-7890.2666 8352.9863 -7890.2446 8353.0508 -7890.2446 8353.1143 c
-7890.2446 8353.2197 -7890.3926 8353.6406 -7890.3926 8353.7256 c
-7890.3926 8353.873 -7890.3286 8353.957 -7890.2666 8353.957 c
-7890.1826 8353.957 -7890.0342 8353.5566 -7889.9502 8353.5566 c
-7889.9072 8353.5566 -7889.8862 8353.6621 -7889.8862 8353.7256 c
-7890.0762 8354.4424 -7890.0762 8354.5898 v
-7890.0762 8354.7168 -7890.0342 8354.7578 -7889.9922 8354.7578 c
-7889.9072 8354.7578 -7889.7178 8354.2949 -7889.6338 8354.2949 c
-7889.5918 8354.2949 -7889.5703 8354.3584 -7889.5703 8354.4424 c
-7889.5703 8354.5898 -7889.7817 8355.1602 -7889.7817 8355.2637 c
-7889.7817 8355.4121 -7889.7817 8355.6016 -7889.6758 8355.6016 c
-7889.6338 8355.6016 -7889.4863 8355.3916 -7889.4438 8355.3916 c
-7889.4014 8355.3916 -7889.3809 8355.4336 -7889.3809 8355.4961 c
-7889.3809 8355.5596 -7889.5073 8355.8555 -7889.5073 8355.918 c
-7889.5073 8356.0449 -7886.9561 8358.7637 -7886.4287 8358.7637 c
-7885.9233 8358.7637 -7885.8594 8358.7637 -7885.7744 8358.9551 c
-7885.6904 8359.1865 -7885.5854 8359.4189 -7885.1426 8359.6924 c
-7884.0039 8360.3242 -7883.8774 8360.4102 -7883.8135 8360.7266 c
-7883.7295 8361.2109 -7883.7085 8361.2529 -7883.3926 8361.4639 c
-7883.2446 8361.5693 -7883.2026 8361.6748 -7883.2026 8361.8223 c
-7883.2026 8362.1807 -7883.2026 8362.2236 -7883.0127 8362.2236 c
-7882.7598 8362.2236 -7882.4214 8361.5488 -7882.4214 8361.1904 c
-7882.4214 8360.2412 -7882.8018 8360.1357 -7883.4126 8359.9658 c
-7883.5615 8359.9248 -7883.7085 8359.8184 -7883.7085 8359.7344 c
-7883.7085 8359.6924 -7883.6875 8359.6719 -7883.6455 8359.6504 c
-7882.7598 8359.1455 -7882.4214 8358.4492 -7882.4214 8357.8789 c
-7882.4214 8357.0781 -7883.7085 8353.3672 -7883.7085 8353.0293 c
-7883.7085 8352.5439 -7883.5615 8352.502 -7883.3711 8352.502 c
-7883.2241 8352.502 -7882.7178 8353.0293 -7882.5903 8353.0293 c
-7882.5073 8353.0293 -7882.4214 8352.9658 -7882.4214 8352.7969 c
-7882.4214 8352.5654 -7882.8657 8351.5322 -7883.8984 8351.5322 c
-7884.4878 8351.5322 -7884.8682 8352.0586 -7884.8682 8352.5215 c
-7884.8682 8353.4727 -7884.5518 8353.6465 -7884.1934 8354.2168 c
-7884.1294 8354.3438 -7884.0879 8354.4697 -7884.0879 8354.5762 c
-7884.0879 8354.8496 -7884.7202 8354.7705 -7885.0786 8354.7705 c
-7885.2256 8354.7705 -7885.3955 8354.7441 -7885.3955 8354.6377 c
-7885.3955 8350.0215 -7888.6426 8346.4717 -7892.5225 8345.7334 c
-7892.8394 8345.6689 -7892.9863 8345.5439 -7892.9863 8345.418 c
-7892.9863 8345.375 -7892.1006 8344.2578 -7890.6255 8344.2578 c
-7888.8535 8344.2578 -7887.7153 8345.7334 -7887.7153 8346.4922 c
-7887.7153 8346.5762 -7887.7568 8346.6406 -7887.8198 8346.6406 c
-7887.9058 8346.6406 -7888.8535 8345.6914 -7889.0854 8345.6914 c
-7889.2119 8345.6914 -7889.3174 8345.7969 -7889.3174 8345.9023 c
-7889.3174 8346.0293 -7889.2334 8346.1543 -7889.0439 8346.3018 c
-7888.9814 8346.3242 -7887.5454 8348.0117 -7887.2515 8348.3486 c
-7886.6401 8349.0654 -7885.8594 8349.8447 -7884.6362 8349.8447 c
-7883.4561 8349.8447 -7882.4214 8348.6445 -7882.4214 8347.8848 c
-7882.4214 8347.1055 -7882.8857 8346.4082 -7883.3711 8346.0078 c
-7884.8896 8344.7422 -7884.8896 8344.3633 -7884.8896 8344.1309 c
-7884.8896 8343.8145 -7884.6992 8343.6895 -7884.4878 8343.6895 c
-7884.1514 8343.6895 -7883.9824 8343.8359 -7883.9824 8344.5098 c
-7883.9824 8344.8477 -7883.6455 8345.1855 -7883.2026 8345.1855 c
-7882.7598 8345.1855 -7882.4434 8344.8066 -7882.4434 8344.1943 c
-7882.4434 8343.584 -7883.2871 8342.8447 -7884.4878 8342.8447 c
-7886.1338 8342.8447 -7886.6182 8344.0039 -7886.6182 8344.4893 c
-7886.6182 8344.8262 -7886.5127 8345.418 -7886.1958 8345.7754 c
-7885.8594 8346.1768 -7885.4595 8346.873 -7885.1846 8347.5898 c
-7884.9521 8348.2432 -7884.4258 8348.6016 -7884.0879 8348.6016 c
-7884.0239 8348.6016 -7884.0039 8348.5801 -7884.0039 8348.5381 c
-7884.0039 8348.4326 -7884.2144 8348.0527 -7884.2144 8347.9688 c
-7884.2144 8347.5898 -7884.1094 8347.3789 -7883.8984 8347.3789 c
-7883.3711 8347.3789 -7883.2656 8348.0313 -7883.2656 8348.2637 c
-7883.2656 8348.75 -7883.6245 8349.3389 -7884.6782 8349.3389 c
-7886.0063 8349.3389 -7887.1245 8347.5898 -7887.1245 8347.5264 c
-7887.1245 8347.5039 -7887.0825 8346.957 -7887.0825 8346.8506 c
-7887.0825 8344.9521 -7888.79 8343.6895 -7890.6255 8343.6895 c
-7892.1855 8343.6895 -7893.3447 8344.9121 -7893.5352 8345.2061 c
-7893.6401 8345.375 -7893.7666 8345.459 -7893.9146 8345.459 c
-7894.2729 8345.459 -7897.1191 8345.3975 -7897.1191 8344.9746 c
-7897.1191 8344.9326 -7896.9937 8344.4688 -7896.8242 8344.4688 c
-7896.7607 8344.4688 -7896.6982 8344.5098 -7896.6353 8344.5742 c
-7896.4438 8344.8066 -7896.0225 8344.9326 -7895.6431 8344.9326 c
-7895.0942 8344.9326 -7894.1895 8344.3418 -7894.1895 8343.6045 c
-7894.1895 8343.3086 -7894.5679 8342.8242 -7894.8838 8342.8242 c
-7895.1377 8342.8242 -7896.1914 8343.541 -7896.4238 8343.541 c
-7896.7402 8343.541 -7896.8662 8343.3926 -7897.1606 8343.0557 c
-7897.3306 8342.8662 -7897.4575 8342.8447 -7897.6465 8342.8447 c
-7897.8154 8342.8447 -7897.9634 8342.9502 -7897.9634 8343.0977 c
-7897.9634 8343.2656 -7897.6465 8343.584 -7897.6265 8343.8574 c
-7897.6265 8344.0039 -7897.6055 8344.2354 -7897.6055 8344.4258 c
-7897.6055 8344.6797 -7897.6265 8345.0381 -7897.8994 8345.0381 c
-7898.7217 8345.0381 -7900.7681 8343.752 -7901.6538 8343.1602 c
-7902.1592 8342.8242 -7902.2432 8342.8242 -7902.3066 8342.8242 c
-7902.4336 8342.8242 -7902.5176 8342.9082 -7902.5176 8343.0557 c
-7902.5176 8343.1816 -7900.0713 8345.334 -7897.8994 8346.0703 c
-7897.5835 8346.1768 -7897.6055 8346.3242 -7897.5625 8346.4922 c
-7897.1406 8348.2432 -7895.5166 8350.416 -7894.9263 8350.416 c
-7894.7783 8350.416 -7894.7158 8350.416 -7894.7158 8350.5215 c
-7894.7158 8350.7305 -7894.6104 8350.9629 -7894.4634 8350.9629 c
-7894.4209 8350.9629 -7894.2524 8350.7305 -7894.21 8350.7305 c
-7894.1255 8350.7305 -7894.0615 8351.1953 -7894.0415 8351.2783 c
-7893.9995 8351.3848 -7893.9146 8351.4688 -7893.8506 8351.4688 c
-7893.7666 8351.4688 -7893.5986 8351.1318 -7893.5352 8351.1318 c
-7893.5137 8351.1318 -7893.4927 8351.1514 -7893.4927 8351.1953 c
-7893.5352 8351.5527 L
f
1 D
-7894.9058 8347.041 m
-7895.0942 8347.4629 -7895.2002 8347.7158 -7895.2002 8348.0957 c
-7895.2002 8348.3486 -7894.7783 8349.5928 y
-7894.7783 8349.6563 -7894.7998 8349.6768 -7894.8633 8349.6768 c
-7895.2847 8349.6768 -7897.0352 8347.4414 -7897.0352 8346.5762 c
-7897.0352 8346.4717 -7896.9722 8346.4082 -7896.8662 8346.4082 c
-7896.8042 8346.4082 -7894.8633 8346.5977 -7894.8633 8346.8301 c
-7894.8633 8346.8936 -7894.8838 8346.957 -7894.9058 8347.041 c
f
-7886.8081 8358.0059 m
-7887.7568 8357.1201 -7888.6846 8356.2559 -7888.6846 8355.707 c
-7888.6846 8355.3701 -7888.6226 8354.9688 -7888.6226 8354.5479 c
-7888.6226 8353.0928 -7889.9722 8351.7637 -7890.8774 8351.3008 c
-7891.3623 8351.0469 -7891.8481 8350.4785 -7891.8481 8350.1191 c
-7891.8481 8350.0137 -7891.8057 8349.9512 -7891.7422 8349.9512 c
-7891.6582 8349.9512 -7891.5942 8349.9717 -7891.5103 8349.9717 c
-7891.4473 8349.9717 -7891.2158 8349.8447 -7891.1519 8349.8447 c
-7891.0049 8349.8447 -7890.6035 8350.5 -7890.4561 8350.5 c
-7890.2446 8350.5 -7890.1826 8350.2891 -7890.1826 8350.1406 c
-7890.1826 8349.7822 -7890.7305 8348.4326 -7891.9951 8348.4326 c
-7892.7554 8348.4326 -7893.0498 8348.875 -7893.0498 8349.2129 c
-7893.0498 8349.8447 -7892.5225 8350.457 -7892.3975 8350.627 c
-7892.3545 8350.668 -7892.3335 8350.71 -7892.3335 8350.752 c
-7892.3335 8350.7949 -7892.3545 8350.8145 -7892.4175 8350.8145 c
-7892.6694 8350.8145 -7894.6519 8349.7822 -7894.6519 8348.0527 c
-7894.6519 8347.6318 -7894.4209 8346.8301 -7893.7666 8346.8301 c
-7891.2998 8346.8301 -7887.1675 8350.6895 -7887.1675 8355.1377 c
-7887.1675 8355.5176 -7887.3984 8356.0664 -7887.4614 8356.4453 c
-7887.4834 8356.4668 -7887.4834 8356.5088 -7887.4834 8356.5498 c
-7887.4834 8356.6768 -7887.4399 8356.8457 -7887.3145 8356.8457 c
-7887.0615 8356.8457 -7885.3955 8356.6563 -7885.0366 8356.6563 c
-7883.3926 8356.6563 -7882.9702 8356.6563 -7882.9702 8357.752 c
-7882.9702 8358.9756 -7884.1094 8359.293 -7884.5098 8359.293 c
-7884.8896 8359.293 -7885.2695 8358.9961 -7885.2695 8358.6377 c
-7885.2695 8358.5322 -7885.0791 8358.0898 -7885.0791 8358.0059 c
-7885.0791 8357.8584 -7885.2065 8357.7744 -7885.3325 8357.7744 c
-7885.4795 8357.7744 -7885.9858 8358.2793 -7886.1338 8358.2793 c
-7886.3862 8358.2793 -7886.6401 8358.1533 -7886.8081 8358.0059 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7886 8368 m
-7904 8368 L
-7904 8350 L
-7886 8350 L
-7886 8368 L
n
u
0 Ap
0 O
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
-7886 8359 m
-7893.8379 8354.4746 L
-7893.8379 8357.5625 L
-7904 8357.5625 L
-7904 8360.4375 L
-7893.8379 8360.4375 L
-7893.8379 8363.5264 L
-7886 8359 L
f
0.324163 0.98938 0.899443 0.007477 0.745098 0.117647 0.176471 Xa
-7890.2939 8357.3857 m
-7893.0879 8355.7744 L
-7893.0879 8358.3008 L
-7904 8358.3008 L
-7904 8359.7002 L
-7893.0879 8359.7002 L
-7893.0879 8362.2266 L
-7890.2939 8360.6133 L
-7887.5 8359 L
-7890.2939 8357.3857 L
f
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
-7892.1675 8358.0918 m
-7892.5586 8358.0918 -7892.8896 8358.3408 -7893.0176 8358.6865 C
-7904 8358.6865 L
-7904 8359.3125 L
-7893.0176 8359.3125 L
-7892.8896 8359.6602 -7892.5586 8359.9082 -7892.1675 8359.9082 c
-7891.6655 8359.9082 -7891.2588 8359.502 -7891.2588 8359 c
-7891.2588 8358.499 -7891.6655 8358.0918 -7892.1675 8358.0918 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe Calligraphic Brush Tool/ Touch Calligraph) -
(ic Brush/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush/ Ado) -
(be PatternOnPath Brush Tool/ Gothic/ Adobe ArtOnPath Brush Too) -
(l/ Charcoal/ Adobe ArtOnPath Brush Tool/ Tapered Stroke/ Adobe) -
( ArtOnPath Brush Tool/ Floral Spoke/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.074189 0.02945 0.860838 0 1 0.945098 0 Xa
(CMYK Yellow)
Pc
0.780636 0.129946 0.872526 0 0 0.647059 0.317647 Xa
(CMYK Green)
Pc
0.723445 0.175753 0.012421 0 0 0.678431 0.933333 Xa
(CMYK Cyan)
Pc
0.943389 0.921569 0.075929 0 0.180392 0.192157 0.568627 Xa
(CMYK Blue)
Pc
0.087282 0.946593 0.04419 0 0.921569 0 0.545098 Xa
(CMYK Magenta)
Pc
0.324163 0.98938 0.899443 0.007477 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.056855 0.87158 0.768124 0 0.933333 0.25098 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.050019 0.782467 0.854002 0 0.941176 0.352941 0.156863 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.036927 0.542046 0.881956 0 0.964706 0.572549 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.035126 0.406867 0.777707 0 0.980392 0.686275 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.098665 0.051606 0.820554 0 0.976471 0.92549 0.192157 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.257359 0.054353 0.884428 0 0.839216 0.870588 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.528984 0.049348 0.887205 0 0.545098 0.772549 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.721889 0.053285 0.898802 0 0.215686 0.701961 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.819516 0.252598 0.94403 0 0 0.576471 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.891051 0.486641 0.986908 0.128389 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.730068 0.049042 0.700404 0 0.160784 0.705882 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.767025 0.15787 0.462257 0 0 0.65098 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.722103 0.202274 0.07422 0 0.14902 0.662745 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.832914 0.507042 0.081056 0 0.105882 0.458824 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.935607 0.889219 0.130678 0 0.168627 0.219608 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
0.976898 1 0.470741 0.088716 0.14902 0.133333 0.380392 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.74789 0.930632 0.057862 0 0.396078 0.176471 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.559472 0.942809 0.062623 0 0.564706 0.152941 0.556863 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.485939 0.988495 0.427375 0.005554 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.183597 0.95462 0.470039 0 0.85098 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.082704 0.911711 0.236027 0 0.92549 0.160784 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.299901 0.290654 0.400397 0 0.756863 0.705882 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.471565 0.498787 0.498817 0 0.603922 0.517647 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.62591 0.59762 0.644923 0.089998 0.443137 0.396078 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.670649 0.685756 0.706386 0.265568 0.352941 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.29752 0.440101 0.604547 0 0.764706 0.6 0.419608 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.423407 0.560265 0.740505 0.00296 0.658824 0.486275 0.309804 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.513634 0.67187 0.830503 0.1131 0.541176 0.364706 0.231373 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.557214 0.711452 0.941131 0.238468 0.458824 0.298039 0.156863 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.587304 0.765652 1 0.384985 0.376471 0.219608 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.683925 0.799832 0.930694 0.580529 0.231373 0.137255 0.078431 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.767391 0.708217 0.670619 0.333288 0.25098 0.25098 0.254902 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.718074 0.636561 0.59057 0.130465 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.653254 0.563867 0.520714 0.022431 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.572534 0.479377 0.433509 0 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.493019 0.395361 0.358282 0 0.572549 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.403601 0.312901 0.283726 0 0.65098 0.658824 0.670588 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.310338 0.232822 0.215946 0 0.733333 0.741176 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.216983 0.154757 0.148836 0 0.815686 0.823529 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.117067 0.084047 0.08011 0 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.067536 0.052461 0.045045 0 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.070375 0.954162 0.881346 0 0.92549 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.0495 0.737606 0.877165 0 0.945098 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.057038 0.157412 0.862882 0 1 0.866667 0.082353 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.788205 0.157778 0.90573 0 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.940642 0.831754 0.083162 0 0.133333 0.25098 0.6 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.630457 0.851041 0.055817 0 0.498039 0.247059 0.592157 Xa
(C=60 M=90 Y=0 K=0)
Pc
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 (Custom Color 0) 0 1 Xx
(Custom Color 0)
Pc
0.81445 0.796261 0.765377 0.611902 0.137255 0.121569 0.12549 (Custom Color 1) 0 1 Xx
(Custom Color 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
u
1 O
0 g
0 J 0 j 1 w 4 M []0 d0 XR
92.3638 337.2666 m
106.6421 322.9888 L
92.3638 308.71 L
82.9473 308.71 L
93.8052 319.5693 L
72.4653 319.5693 L
72.4653 326.4814 L
93.73 326.4814 L
82.9292 337.2832 l
92.3638 337.2666 L
f
U
u
554.1201 267.6484 m
564.2588 277.7856 L
554.1201 287.9229 L
547.4346 287.9229 L
555.1436 280.2129 L
532.3535 280.2129 L
532.3535 275.3062 L
555.0918 275.3062 L
547.4219 267.6357 l
554.1201 267.6484 L
f
539.9775 264.3325 m
529.8389 254.1953 L
539.9746 244.0566 L
546.6631 244.0566 L
538.9521 251.7676 L
561.7422 251.7676 L
561.7422 256.6748 L
539.0049 256.6748 L
546.6758 264.3452 l
539.9775 264.3325 L
f
/BBAccumRotation (3.141593) XT
U
u
*u
1 D
472.9785 283.333 m
472.9785 248.6475 L
507.6641 248.6475 L
507.6641 283.333 L
472.9785 283.333 L
f
0 D
492.1709 256.5869 m
485.9736 256.5869 L
493.1191 263.7349 L
479.0742 263.7349 L
479.0742 268.2832 L
493.0703 268.2832 L
485.9619 275.3936 L
492.1709 275.3818 L
501.5684 265.9854 L
492.1709 256.5869 L
f
*U
U
u
*u
0 O
252.2207 79.9395 m
251.9111 79.9395 251.6338 80.124 251.5151 80.4102 C
251.5151 80.4102 L
251.397 80.6953 251.4624 81.0234 251.6807 81.2412 C
251.6807 81.2412 L
262.3433 91.9063 L
240.6714 91.9063 L
240.4688 91.9063 240.2764 91.9854 240.1323 92.1279 C
240.1323 92.1279 L
239.9893 92.2705 239.9082 92.4648 239.9082 92.668 C
239.9082 92.668 L
239.9082 100.2842 L
239.9082 100.4844 239.9893 100.6797 240.1323 100.8223 C
240.1323 100.8223 L
240.2739 100.9639 240.4707 101.0459 240.6714 101.0459 C
240.6714 101.0459 L
262.2583 101.0459 L
251.6631 111.6465 L
251.4443 111.8623 251.3789 112.1904 251.499 112.4766 C
251.499 112.4766 L
251.6157 112.7617 251.895 112.9463 252.2041 112.9463 C
252.2041 112.9463 L
262.5967 112.9268 L
262.5947 112.1641 L
262.5967 112.9268 L
262.7974 112.9268 262.9922 112.8486 263.1338 112.7061 C
263.1338 112.7061 L
278.8672 96.9746 L
279.0112 96.8291 279.0898 96.6387 279.0898 96.4355 C
279.0898 96.4355 L
279.0898 96.2314 279.0112 96.041 278.8672 95.8955 C
278.8672 95.8955 L
263.1338 80.1621 L
262.9888 80.0186 262.7974 79.9395 262.5947 79.9395 C
262.5947 79.9395 L
252.2207 79.9395 L
252.2207 79.9395 L
f
1 D
241.4331 93.4307 m
264.1841 93.4307 L
264.4932 93.4307 264.7705 93.2432 264.8882 92.959 C
264.8882 92.959 L
265.0063 92.6758 264.9395 92.3467 264.7231 92.1279 C
264.7231 92.1279 L
254.061 81.4639 L
262.2764 81.4639 L
277.2471 96.4355 L
262.2788 111.4023 L
254.0449 111.418 L
264.6406 100.8223 L
264.8569 100.6064 264.9219 100.2773 264.8057 99.9922 C
264.8057 99.9922 L
264.6875 99.709 264.4082 99.5205 264.1011 99.5205 C
264.1011 99.5205 L
241.4331 99.5205 L
241.4331 93.4307 L
241.4331 93.4307 L
f
*U
U
u
0 D
217.1592 268.0781 m
205.2334 280.0015 L
204.938 280.2964 204.5322 280.4658 204.1152 280.4658 C
196.2368 280.4805 L
195.5947 280.4814 195.0161 280.0952 194.7705 279.5029 c
194.5239 278.9106 194.6587 278.2271 195.1123 277.7729 C
201.4268 271.46 L
187.4946 271.458 L
187.0776 271.458 186.6685 271.2891 186.3735 270.9941 c
186.0786 270.6997 185.9092 270.29 185.9092 269.8726 C
185.9092 264.1006 L
185.9092 263.6836 186.0786 263.2739 186.3735 262.9795 c
186.6699 262.6851 187.0776 262.5156 187.4946 262.5156 C
201.4893 262.5156 L
195.127 256.1533 L
194.6733 255.6987 194.5381 255.0171 194.7837 254.4243 c
195.0293 253.8311 195.6064 253.4468 196.2485 253.4468 C
204.1128 253.4468 L
204.5356 253.4468 204.9351 253.6104 205.2344 253.9102 C
217.1592 265.8354 L
217.458 266.1348 217.623 266.5327 217.623 266.9565 c
217.623 267.3804 217.458 267.7783 217.1592 268.0781 C
f
U
/BBAccumRotation (0.000000) XT
u
*u
415.0957 98.0225 m
415.9238 98.0225 416.5938 97.3232 416.5938 96.4619 c
416.5938 95.6328 415.9238 94.9336 415.0635 94.9336 c
414.2354 94.9336 413.5674 95.6328 413.5674 96.4951 c
413.5674 97.3232 414.2354 98.0225 415.0957 98.0225 c
f
/BBAccumRotation (0.000000) XT
419.7158 98.0225 m
420.5439 98.0225 421.2139 97.3232 421.2139 96.4619 c
421.2139 95.6328 420.5107 94.9336 419.6826 94.9336 c
418.8555 94.9336 418.1543 95.6328 418.1543 96.4951 c
418.1543 97.3232 418.8555 98.0225 419.7158 98.0225 c
f
/BBAccumRotation (0.000000) XT
424.3027 98.0225 m
425.1309 98.0225 425.8008 97.3232 425.8008 96.4619 c
425.8008 95.6328 425.1309 94.9336 424.2695 94.9336 c
423.4424 94.9336 422.7715 95.6328 422.7715 96.4951 c
422.7715 97.3232 423.4746 98.0225 424.3027 98.0225 c
f
/BBAccumRotation (0.000000) XT
428.9229 98.0225 m
429.75 98.0225 430.418 97.3232 430.418 96.4619 c
430.418 95.6328 429.75 94.9336 428.8896 94.9336 c
428.0615 94.9336 427.3916 95.6328 427.3916 96.4951 c
427.3916 97.3232 428.0615 98.0225 428.9229 98.0225 c
f
/BBAccumRotation (0.000000) XT
433.542 98.0225 m
434.3711 98.0225 435.0381 97.3232 435.0381 96.4619 c
435.0381 95.6328 434.3389 94.9336 433.5098 94.9336 c
432.6816 94.9336 431.9785 95.6328 431.9785 96.4951 c
431.9785 97.3232 432.6816 98.0225 433.542 98.0225 c
f
/BBAccumRotation (0.000000) XT
438.127 98.0225 m
438.958 98.0225 439.625 97.3232 439.625 96.4619 c
439.625 95.6328 438.958 94.9336 438.0977 94.9336 c
437.2686 94.9336 436.5996 95.6328 436.5996 96.4951 c
436.5996 97.3232 437.3018 98.0225 438.127 98.0225 c
f
/BBAccumRotation (0.000000) XT
439.3721 109.3965 m
440.2002 109.3965 440.8672 108.6953 440.8672 107.835 c
440.8672 106.9746 440.2002 106.2754 439.3389 106.2754 c
438.5117 106.2754 437.8408 106.9746 437.8408 107.835 c
437.8408 108.6953 438.5439 109.3965 439.3721 109.3965 c
f
/BBAccumRotation (0.000000) XT
439.3721 83.7207 m
438.5439 83.7207 437.8408 84.4209 437.8408 85.2813 c
437.8408 86.1406 438.5117 86.8096 439.3389 86.8096 c
440.2002 86.8096 440.8672 86.1406 440.8672 85.2813 c
440.8672 84.4209 440.2002 83.7207 439.3721 83.7207 c
f
/BBAccumRotation (0.000000) XT
442.0166 105.6367 m
442.8418 105.6367 443.5117 104.9365 443.5117 104.0771 c
443.5117 103.2158 442.8418 102.5137 441.9844 102.5137 c
441.1563 102.5137 440.4854 103.2158 440.4854 104.0771 c
440.4854 104.9365 441.1865 105.6367 442.0166 105.6367 c
f
/BBAccumRotation (0.000000) XT
442.0166 87.4805 m
441.1865 87.4805 440.4854 88.1797 440.4854 89.0391 c
440.4854 89.9004 441.1563 90.5693 441.9844 90.5693 c
442.8418 90.5693 443.5117 89.9004 443.5117 89.0391 c
443.5117 88.1797 442.8418 87.4805 442.0166 87.4805 c
f
/BBAccumRotation (0.000000) XT
442.7461 98.0225 m
443.5781 98.0225 444.2441 97.3232 444.2441 96.4619 c
444.2441 95.6328 443.5781 94.9336 442.7178 94.9336 c
441.8896 94.9336 441.2197 95.6328 441.2197 96.4951 c
441.2197 97.3232 441.8896 98.0225 442.7461 98.0225 c
f
/BBAccumRotation (0.000000) XT
444.6602 101.8779 m
445.4873 101.8779 446.1582 101.1768 446.1582 100.3164 c
446.1582 99.457 445.4873 98.7578 444.6289 98.7578 c
443.7988 98.7578 443.1309 99.457 443.1309 100.3164 c
443.1309 101.1768 443.7988 101.8779 444.6602 101.8779 c
f
/BBAccumRotation (0.000000) XT
444.6602 91.2393 m
443.7988 91.2393 443.1309 91.9385 443.1309 92.7998 c
443.1309 93.6592 443.7988 94.3584 444.6289 94.3584 c
445.4873 94.3584 446.1582 93.6592 446.1582 92.7998 c
446.1582 91.9385 445.4873 91.2393 444.6602 91.2393 c
f
/BBAccumRotation (0.000000) XT
447.3037 98.1191 m
448.1318 98.1191 448.7998 97.4189 448.7998 96.5576 c
448.7998 95.6982 448.1318 94.9961 447.2715 94.9961 c
446.4434 94.9961 445.7734 95.6982 445.7734 96.5576 c
445.7734 97.4189 446.4434 98.1191 447.3037 98.1191 c
f
/BBAccumRotation (0.000000) XT
*U
U
u
183.9614 319.4092 m
183.9619 325.9824 L
208.8203 325.9839 L
198.3428 337.0771 L
202.6558 341.2373 L
219.5713 323.0898 L
203.9565 304.7554 L
198.9585 308.52 L
208.8887 319.4092 L
183.9614 319.4092 L
f
U
/BBAccumRotation (0.785398) XT
u
179.4321 145.875 m
179.4321 157.9463 L
200.6025 157.9463 L
200.5313 167.627 L
225.9243 151.4863 L
200.7876 135.3232 L
200.7036 145.875 L
179.4321 145.875 L
f
U
/BBAccumRotation (0.785398) XT
u
372.5254 262.9966 m
358.0381 262.0654 L
357.8545 271.3965 L
372.3672 271.001 L
369.7998 281.0747 L
369.7881 281.6499 L
369.9551 282.2622 L
370.3779 282.7368 L
370.9844 282.9644 L
371.5928 282.9766 L
372.208 282.7739 L
393.3447 268.7573 L
393.5645 268.5469 L
393.7842 268.3345 L
393.9346 268.0137 L
394.0459 267.7661 L
394.0586 267.1201 L
393.958 266.7949 L
393.8193 266.541 L
393.6084 266.2847 L
393.3994 266.0664 L
372.8301 251.1904 L
372.2246 250.9619 L
371.6152 250.9507 L
371 251.2261 L
370.5605 251.6484 L
370.3691 252.2188 L
370.3564 252.8652 L
372.5254 262.9966 L
f
U
/BBAccumRotation (0.785398) XT
u
47.1738 104.2119 m
44.0576 101.5703 L
47.4111 98.2168 L
23.1948 98.2168 L
20.4346 101.6875 L
10.0229 101.6875 L
14.124 96.4434 L
10.0229 91.1982 L
20.4346 91.1982 L
23.1948 94.6689 L
47.4111 94.6689 L
44.0576 91.3154 L
47.1738 88.6738 L
54.9429 96.4434 L
47.1738 104.2119 L
f
U
u
280 211.0742 m
263.9302 196.541 l
263.9302 203.394 l
238.9985 196.4229 l
238.9985 225.7266 l
263.9302 218.7554 l
263.9302 225.6089 l
280 211.0742 l
F
U
u
109.9199 266.9629 m
90.2153 286.668 l
76.0117 286.668 l
90.3535 272.3247 l
69.187 272.3247 l
69.187 261.6025 l
90.3535 261.6025 l
76.0117 247.2588 l
90.2153 247.2588 l
109.9199 266.9629 l
F
U
/BBAccumRotation (0.000000) XT
u
339.8086 322.9966 m
325.8662 336.9399 l
315.8164 336.9399 l
325.9648 326.7905 l
294.8135 326.7905 l
294.8135 319.2031 l
325.9648 319.2031 l
315.8164 309.0532 l
325.8662 309.0532 l
339.8086 322.9966 l
F
U
/BBAccumRotation (0.000000) XT
u
284.7974 266.9634 m
261.9678 282.3892 l
261.9678 274.3677 l
234.2012 274.3677 l
234.2012 259.5586 l
261.9678 259.5586 l
261.9678 251.5381 l
284.7974 266.9634 l
F
U
/BBAccumRotation (0.000000) XT
u
349.9746 95.126 m
391.7773 95.126 L
382.2041 85.5527 L
381.9336 85.2822 381.9336 84.8389 382.2041 84.5693 c
382.4775 84.2988 382.918 84.2988 383.1885 84.5693 C
393.9492 95.3281 L
393.9531 95.334 393.957 95.3408 393.9658 95.3496 c
393.9785 95.3633 393.9922 95.377 394.0029 95.3965 c
394.0127 95.4063 394.0244 95.4189 394.0293 95.4297 c
394.041 95.4482 394.0508 95.4619 394.0615 95.4785 c
394.0684 95.4941 394.0781 95.5078 394.0811 95.5215 c
394.0879 95.5332 394.0938 95.5439 394.0977 95.5537 c
394.1006 95.5605 394.1035 95.5664 394.1035 95.5723 c
394.1104 95.5869 394.1143 95.6035 394.1191 95.6172 c
394.123 95.6367 394.1299 95.6523 394.1357 95.6689 c
394.1377 95.6855 394.1396 95.7012 394.1406 95.7178 c
394.1436 95.7354 394.1475 95.752 394.1475 95.7686 c
394.1504 95.7852 394.1504 95.8037 394.1504 95.8203 c
394.1504 95.8369 394.1504 95.8535 394.1475 95.8701 c
394.1475 95.8867 394.1436 95.9053 394.1406 95.9248 c
394.1396 95.9355 394.1377 95.9551 394.1357 95.9688 c
394.1299 95.9883 394.123 96.0039 394.1191 96.0234 c
394.1143 96.0371 394.1104 96.0537 394.1064 96.0664 c
394.1035 96.0732 394.1006 96.0801 394.0977 96.0859 c
394.0938 96.0967 394.0879 96.1084 394.0811 96.1191 c
394.0742 96.1328 394.0684 96.1455 394.0615 96.1592 c
394.0508 96.1758 394.042 96.1924 394.0293 96.207 c
394.0244 96.2217 394.0127 96.2314 394.0029 96.2441 c
393.9922 96.2607 393.9795 96.2764 393.9658 96.29 c
393.96 96.2969 393.9531 96.3027 393.9492 96.3125 C
383.1885 107.0713 L
383.0527 107.2051 382.874 107.2744 382.6963 107.2744 c
382.5186 107.2744 382.3408 107.2051 382.2041 107.0713 c
381.9336 106.8008 381.9336 106.3604 382.2041 106.0879 C
382.2041 106.0869 L
391.7773 96.5156 L
349.9746 96.5156 L
349.5898 96.5156 349.2793 96.2041 349.2793 95.8203 c
349.2793 95.4385 349.5898 95.126 349.9746 95.126 C
f
U
u
356.583 150.3594 m
386.6357 150.3594 L
384.2676 149.1436 381.5947 147.3105 378.8398 144.5518 c
378.3779 144.0898 378.3779 143.3408 378.8398 142.8789 c
379.3018 142.416 380.0498 142.416 380.5117 142.8789 c
387.2959 149.6504 393.2871 150.2949 394.8613 150.3574 C
394.9541 150.3555 395.0391 150.3535 395.1094 150.3535 c
395.2813 150.3535 395.3848 150.3594 395.4072 150.3623 c
395.416 150.3623 395.4238 150.3633 395.4326 150.3633 c
395.4492 150.3662 395.4648 150.3691 395.4814 150.3701 c
395.5039 150.3721 395.5264 150.375 395.5479 150.3789 c
395.5645 150.3828 395.5801 150.3877 395.5938 150.3887 c
395.6182 150.3955 395.6406 150.4004 395.6611 150.4053 c
395.6768 150.4102 395.6895 150.4141 395.7031 150.4209 c
395.7246 150.4268 395.748 150.4355 395.7705 150.4434 c
395.7832 150.4482 395.7949 150.4551 395.8076 150.459 c
395.8301 150.4688 395.8525 150.4795 395.876 150.4922 c
395.8848 150.4971 395.8945 150.5029 395.9053 150.5098 c
395.9268 150.5225 395.9521 150.5332 395.9727 150.5488 c
395.9814 150.5527 395.9902 150.5615 396 150.5654 c
396.0205 150.5811 396.042 150.5977 396.0635 150.6123 c
396.0713 150.6201 396.0801 150.626 396.0879 150.6348 c
396.1094 150.6494 396.1289 150.667 396.1475 150.6855 c
396.1553 150.6934 396.1641 150.7021 396.1729 150.71 c
396.1895 150.7275 396.2061 150.7471 396.2227 150.7656 c
396.2314 150.7764 396.2402 150.7842 396.248 150.7949 c
396.2627 150.8145 396.2773 150.832 396.292 150.8516 c
396.3008 150.8623 396.3086 150.875 396.3154 150.8877 c
396.3281 150.9053 396.3408 150.9248 396.3506 150.9434 c
396.3594 150.9561 396.3682 150.9717 396.373 150.9854 c
396.3848 151.0039 396.3955 151.0234 396.4043 151.043 c
396.4102 151.0576 396.417 151.0723 396.4229 151.0889 c
396.4307 151.1074 396.4395 151.127 396.4463 151.1455 c
396.4521 151.1621 396.4561 151.1797 396.4619 151.1934 c
396.4688 151.2158 396.4746 151.2354 396.4785 151.2549 c
396.4844 151.2715 396.4873 151.2891 396.4902 151.3057 c
396.4941 151.3262 396.498 151.3477 396.502 151.3691 c
396.5039 151.3857 396.5068 151.4043 396.5068 151.4209 c
396.5107 151.4424 396.5107 151.4629 396.5127 151.4863 c
396.5127 151.4922 396.5146 151.498 396.5146 151.5049 c
396.5146 151.5176 396.5127 151.5303 396.5127 151.54 c
396.5127 151.5557 396.5146 151.5684 396.5146 151.5811 c
396.5146 151.5879 396.5127 151.5947 396.5127 151.6016 c
396.5107 151.623 396.5078 151.6436 396.5068 151.6621 c
396.5068 151.6816 396.5039 151.7002 396.5 151.7197 c
396.498 151.7383 396.4941 151.7578 396.4902 151.7773 c
396.4873 151.7959 396.4844 151.8145 396.4775 151.832 c
396.4727 151.8506 396.4688 151.8691 396.4619 151.8857 c
396.4561 151.9063 396.4521 151.9248 396.4434 151.9443 c
396.4395 151.959 396.4336 151.9736 396.4268 151.9912 c
396.418 152.0088 396.4102 152.0303 396.4014 152.0498 c
396.3955 152.0625 396.3857 152.0762 396.3799 152.0889 c
396.3701 152.1104 396.3594 152.1299 396.3467 152.1484 c
396.3408 152.1611 396.332 152.1738 396.3252 152.1836 c
396.3115 152.2041 396.2988 152.2236 396.2832 152.2422 c
396.2773 152.2529 396.2695 152.2637 396.2607 152.2744 c
396.2461 152.293 396.2314 152.3125 396.2148 152.3291 c
396.2061 152.3389 396.1973 152.3477 396.1895 152.3584 c
396.1699 152.375 396.1543 152.3926 396.1357 152.4092 c
396.126 152.418 396.1182 152.4258 396.1064 152.4346 c
396.0879 152.4512 396.0713 152.4658 396.0508 152.4795 c
396.042 152.4883 396.0293 152.4961 396.0205 152.5029 c
396 152.5176 395.9814 152.5332 395.96 152.5459 c
395.9473 152.5527 395.9365 152.5576 395.9268 152.5635 c
395.9053 152.5762 395.8848 152.5889 395.8623 152.6006 c
395.8506 152.6064 395.8379 152.6104 395.8252 152.6172 c
395.8047 152.627 395.7822 152.6357 395.7588 152.6465 c
395.7461 152.6504 395.7334 152.6553 395.7207 152.6592 c
395.6982 152.668 395.6738 152.6758 395.6514 152.6816 c
395.6367 152.6846 395.624 152.6885 395.6113 152.6914 c
395.5859 152.6973 395.5635 152.7031 395.5381 152.707 c
395.5225 152.71 395.5088 152.7109 395.4961 152.7139 c
395.4707 152.7168 395.4463 152.7197 395.4229 152.7227 c
395.416 152.7227 395.4102 152.7236 395.4033 152.7236 c
395.3818 152.7266 395.2813 152.7305 395.1094 152.7305 c
395.0967 152.7305 395.0811 152.7305 395.0674 152.7305 c
395.0039 152.7305 394.9355 152.7305 394.8564 152.7285 C
393.2773 152.79 387.29 153.4414 380.5117 160.207 c
380.2813 160.4385 379.9785 160.5537 379.6768 160.5537 c
379.373 160.5537 379.0713 160.4385 378.8398 160.207 c
378.3779 159.7451 378.3779 158.9951 378.8398 158.5342 c
381.5947 155.7754 384.2676 153.9424 386.6357 152.7266 C
356.583 152.7266 L
355.9297 152.7266 355.4004 152.1973 355.4004 151.543 c
355.4004 150.8887 355.9297 150.3594 356.583 150.3594 C
f
U
/BBAccumRotation (3.141593) XT
u
325.9609 212.3535 m
311.2188 227.0957 L
310.7012 227.6133 309.9238 227.769 309.248 227.4878 c
308.5723 227.2085 308.1309 226.5483 308.1309 225.8159 C
308.1309 196.3315 L
308.1309 195.5996 308.5723 194.9409 309.248 194.6606 c
309.4727 194.5674 309.707 194.5239 309.9395 194.5239 c
310.4102 194.5239 310.873 194.7065 311.2188 195.0518 C
325.9609 209.7949 L
326.2988 210.1318 326.4912 210.5981 326.4912 211.0747 c
326.4912 211.5508 326.2988 212.0171 325.9609 212.3535 C
f
U
u
44.5825 153.332 m
23.9624 173.9541 L
23.2383 174.6768 22.1489 174.8945 21.2031 174.5029 c
20.2583 174.1113 19.6411 173.1885 19.6411 172.1641 C
30.46 151.543 L
19.6411 130.9219 L
19.6411 129.8965 20.2583 128.9756 21.2031 128.584 c
21.5161 128.4531 21.8462 128.3896 22.1719 128.3896 c
22.8306 128.3896 23.4766 128.6484 23.9624 129.1309 C
44.5825 149.7529 L
45.0542 150.2227 45.3252 150.875 45.3252 151.543 c
45.3252 152.21 45.0542 152.8613 44.5825 153.332 C
f
U
u
*u
1 D
490.752 175.1152 m
466.4922 150.8564 L
490.752 126.5967 L
515.0117 150.8564 L
490.752 175.1152 L
f
0 D
491.5898 139.3965 m
489.4277 141.5586 L
497.1963 149.3281 L
476.7021 149.3281 L
476.7021 152.3838 L
497.1963 152.3838 L
489.4277 160.1523 L
491.5898 162.3145 L
503.0488 150.8564 L
500.8857 148.6934 L
491.5898 139.3965 L
f
*U
U
u
34.9458 227.5298 m
31.8403 224.4238 L
42.9951 213.269 L
13.5669 213.269 L
13.5669 208.8809 L
42.9951 208.8809 L
31.8403 197.7241 L
34.9458 194.6201 L
48.2939 207.9702 L
51.3999 211.0752 L
34.9458 227.5298 L
f
U
u
128.772 264.5742 m
157.0283 264.5742 L
148.2607 255.8081 L
147.3276 254.874 147.3276 253.3608 148.2607 252.4272 c
149.1938 251.4937 150.707 251.4937 151.6401 252.4282 C
163.7866 264.5742 L
166.1777 266.9639 L
163.7866 269.355 L
151.6401 281.5015 L
151.1738 281.9673 150.5615 282.2002 149.9507 282.2002 c
149.3394 282.2002 148.7275 281.9673 148.2607 281.5015 c
147.3276 280.5669 147.3276 279.0542 148.2607 278.1211 C
157.0283 269.355 L
128.772 269.355 L
127.4526 269.355 126.3828 268.2837 126.3828 266.9639 c
126.3828 265.644 127.4526 264.5742 128.772 264.5742 C
f
U
/BBAccumRotation (3.141593) XT
u
454.0225 152.4639 m
445.8574 160.6309 L
445.542 160.9434 445.1309 161.1006 444.7197 161.1006 c
444.3086 161.1006 443.8965 160.9434 443.585 160.6309 c
442.957 160.002 442.957 158.9844 443.585 158.3574 C
449.4775 152.4639 L
430.4814 152.4639 L
430.4795 152.4639 430.4756 152.4629 430.4707 152.4629 C
416.5586 152.4629 L
422.4541 158.3555 L
423.0801 158.9844 423.0801 160.002 422.4541 160.6299 c
421.8252 161.2568 420.8096 161.2568 420.1797 160.6299 C
412.0137 152.4629 L
410.4092 150.8564 L
412.0137 149.248 L
420.1797 141.082 L
420.4961 140.7686 420.9053 140.6113 421.3174 140.6113 c
421.7285 140.6113 422.1406 140.7686 422.4541 141.082 c
423.0801 141.7109 423.0801 142.7275 422.4541 143.3545 C
416.5586 149.248 L
435.5557 149.248 L
435.5586 149.248 435.5615 149.249 435.5664 149.249 C
449.4775 149.249 L
443.585 143.3564 L
442.957 142.7275 442.957 141.7109 443.585 141.084 c
444.2119 140.457 445.2295 140.457 445.8574 141.084 C
454.0225 149.249 L
455.6299 150.8564 L
454.0225 152.4639 L
f
U
u
1 Ap
388.0254 325.4365 m
383.1455 325.4365 L
383.1455 330.3154 L
388.0254 330.3154 L
388.0254 325.4365 L
f
388.0254 315.6777 m
383.1455 315.6777 L
383.1455 320.5566 L
388.0254 320.5566 L
388.0254 315.6777 L
f
383.1455 310.7988 m
378.2676 310.7988 L
378.2676 315.6777 L
383.1455 315.6777 L
383.1455 310.7988 L
f
383.1455 330.3154 m
378.2676 330.3154 L
378.2676 335.1943 L
383.1455 335.1943 L
383.1455 330.3154 L
f
392.9053 320.5566 m
388.0254 320.5566 L
388.0254 325.4365 L
392.9053 325.4365 L
392.9053 320.5566 L
f
382.7461 320.5566 m
377.8662 320.5566 L
377.8662 325.4365 L
382.7461 325.4365 L
382.7461 320.5566 L
f
376.4609 320.5566 m
371.5811 320.5566 L
371.5811 325.4365 L
376.4609 325.4365 L
376.4609 320.5566 L
f
370.1729 320.5566 m
365.2939 320.5566 L
365.2939 325.4365 L
370.1729 325.4365 L
370.1729 320.5566 L
f
363.8877 320.5566 m
359.0088 320.5566 L
359.0088 325.4365 L
363.8877 325.4365 L
363.8877 320.5566 L
f
U
u
0 Ap
106.5396 211.0757 m
88.6611 228.9531 L
91.0283 224.7495 92.3428 220.6533 92.96 216.8208 C
72.5679 216.8208 L
72.5679 205.3291 L
92.9136 205.3291 L
91.7012 197.9829 88.6611 193.1953 Y
106.5396 211.0757 L
f
U
u
43.8896 327.1074 m
31.8638 336.6816 L
27.856 331.6509 L
34.688 326.2124 L
15.915 326.2124 L
15.915 319.7808 L
34.686 319.7808 L
27.856 314.3433 L
31.8638 309.3115 L
43.8896 318.8867 L
49.0513 322.9971 L
43.8896 327.1074 L
f
U
u
303.9893 262.1045 m
308.7197 254.0674 L
321.4395 261.5532 L
330.6318 266.9634 L
321.4395 272.3735 L
308.7197 279.8594 L
303.9893 271.8223 L
312.2461 266.9634 L
303.9893 262.1045 L
f
U
/BBAccumRotation (3.141593) XT
u
50.7363 268.1763 m
36.7524 282.1592 L
36.2617 282.6494 35.5239 282.7974 34.8823 282.5317 c
34.2412 282.2661 33.8232 281.6392 33.8232 280.9458 C
33.8232 273.4824 L
13.728 273.4824 L
13.728 260.4443 L
33.8232 260.4443 L
33.8232 252.98 L
33.8232 252.2856 34.2412 251.6592 34.8823 251.3945 c
35.0947 251.3066 35.3179 251.2651 35.5381 251.2651 c
35.9854 251.2651 36.4243 251.438 36.7524 251.7671 C
50.7363 265.7505 L
51.0557 266.0693 51.2383 266.5107 51.2383 266.9634 c
51.2383 267.415 51.0557 267.8584 50.7363 268.1763 C
f
U
u
160.1787 324.3213 m
144.9175 339.5806 L
144.3818 340.1167 143.5757 340.2764 142.876 339.9873 c
142.1772 339.6968 141.7202 339.0137 141.7202 338.2563 C
146.1343 327.7397 L
131.8335 327.7397 L
131.8335 318.2524 L
146.1343 318.2524 L
141.7202 307.7349 L
141.7202 306.9775 142.1772 306.2939 142.876 306.0044 c
143.1084 305.9092 143.3521 305.8638 143.5938 305.8638 c
144.0801 305.8638 144.5596 306.0522 144.9175 306.4106 C
160.1787 321.6724 L
160.5269 322.021 160.7271 322.502 160.7271 322.9961 c
160.7271 323.4893 160.5269 323.9727 160.1787 324.3213 C
f
U
u
1 O
99.3516 157.9229 m
99.2935 157.8662 L
99.1831 157.9756 L
86.1626 170.9971 L
73.3501 170.9971 L
88.1255 156.2197 L
92.7759 151.5684 L
92.8862 151.459 L
88.293 146.8633 L
73.5171 132.0879 L
86.3306 132.0879 L
99.3516 145.1074 L
105.7573 151.5156 L
99.3516 157.9229 L
f
U
u
*u
1 D
528.46 170.96 m
528.46 130.7529 L
568.667 130.7529 L
568.667 170.96 L
528.46 170.96 L
f
0 D
560.6289 145.1953 m
549.1699 133.7363 L
533.1592 133.7363 L
546.165 146.7393 L
550.2051 150.7822 L
550.1084 150.8799 L
546.0156 154.9727 L
533.0117 167.9775 L
549.0225 167.9775 L
560.4814 156.5186 L
560.5791 156.4219 L
560.6289 156.4717 L
566.2676 150.834 L
560.6289 145.1953 L
f
*U
U
u
1 Ap
0 O
134.4985 175.1055 m
158.062 151.543 L
134.4985 127.9795 L
147.6768 151.543 L
134.4985 175.1055 L
f
U
/BBAccumRotation (2.356194) XT
u
0 Ap
111.3853 96.4434 m
101.6172 106.2109 L
101.6172 99.418 L
67.7212 99.418 L
67.7212 93.4678 L
101.6172 93.4678 L
101.6172 86.6748 L
111.3853 96.4434 L
f
U
u
170.7593 96.4434 m
159.8066 107.3955 L
159.8066 101.6777 144.9111 100.1338 133.77 99.7783 C
121.8018 99.7783 L
121.8018 96.6465 L
121.8018 96.3789 L
121.8018 93.2471 L
121.8018 93.1074 L
137.1021 93.1074 L
147.6621 92.5537 159.8066 90.7939 159.8066 85.6299 C
159.8066 85.4902 L
170.7593 96.4434 L
f
U
u
223.3193 97.6563 m
209.3364 111.6387 L
208.8467 112.1299 208.1094 112.2773 207.4668 112.0107 c
206.8252 111.7451 206.4082 111.1182 206.4082 110.4258 C
207.4839 102.9609 L
186.3125 102.9609 L
186.3125 102.957 L
186.2842 102.957 186.2568 102.9609 186.2275 102.9609 c
182.6279 102.9609 179.709 100.043 179.709 96.4434 c
179.709 92.8428 182.6279 89.9248 186.2275 89.9248 c
186.2568 89.9248 186.2842 89.9287 186.3125 89.9287 C
186.3125 89.9248 L
207.4839 89.9248 L
206.4082 82.46 L
206.4082 81.7637 206.8252 81.1377 207.4668 80.873 c
207.6797 80.7861 207.9019 80.7441 208.1226 80.7441 c
208.5693 80.7441 209.0083 80.917 209.3364 81.2461 C
223.3193 95.2295 L
223.6387 95.5498 223.8237 95.9902 223.8237 96.4434 c
223.8237 96.8945 223.6387 97.3389 223.3193 97.6563 C
f
U
u
571.5674 94.3184 m
571.5898 94.3779 571.6133 94.4365 571.626 94.499 c
571.6279 94.5166 571.6406 94.5342 571.6436 94.5518 c
571.6484 94.5986 571.6357 94.6445 571.6357 94.6914 c
571.6357 94.7402 571.6484 94.7832 571.6436 94.8301 c
571.6406 94.8477 571.6279 94.8652 571.626 94.8857 c
571.6133 94.9453 571.5898 95.0068 571.5674 95.0664 c
571.5449 95.127 571.5225 95.1865 571.4873 95.2422 c
571.459 95.2891 571.4229 95.3301 571.3848 95.3721 c
571.3389 95.4277 571.2939 95.4746 571.2412 95.5205 c
571.2012 95.5537 571.1563 95.5742 571.1104 95.5977 c
571.04 95.6387 570.9756 95.6768 570.8994 95.6982 c
570.8848 95.7031 570.874 95.7139 570.8604 95.7158 C
570.8428 95.7266 562.1641 98.0283 552.79 101.0186 c
543.4639 103.9502 533.2646 107.7998 531.0049 110.1582 c
530.5908 110.5762 529.9131 110.5762 529.5 110.1553 c
529.0859 109.7422 529.0859 109.0664 529.5 108.6523 c
532.6973 105.5596 542.6602 102.0527 552.1426 98.9932 c
556.0029 97.7627 559.7471 96.6455 562.8193 95.7568 C
503.5879 95.7568 L
502.999 95.7568 502.5215 95.2822 502.5215 94.6914 c
502.5215 94.1025 502.999 93.625 503.5879 93.625 C
562.8193 93.625 L
559.7471 92.7363 556.0029 91.6191 552.1426 90.3887 c
542.6602 87.3291 532.6973 83.8223 529.5 80.7295 c
529.0859 80.3154 529.0859 79.6396 529.5 79.2266 c
529.9131 78.8057 530.5908 78.8057 531.0049 79.2236 c
533.2646 81.582 543.4639 85.4346 552.79 88.3633 c
562.1641 91.3535 570.8428 93.6553 570.8604 93.666 C
570.874 93.668 570.8848 93.6787 570.8994 93.6836 c
570.9756 93.7051 571.04 93.7432 571.1104 93.7842 c
571.1563 93.8076 571.2012 93.8281 571.2412 93.8613 c
571.2939 93.9072 571.3389 93.9561 571.3848 94.0098 c
571.4229 94.0518 571.459 94.0928 571.4873 94.1396 c
571.5225 94.1973 571.5449 94.2578 571.5674 94.3184 c
f
U
u
172.3687 211.0747 m
155.6128 227.8315 L
155.6128 217.1875 L
120.1919 217.1875 L
126.3047 211.0747 L
120.1919 204.9614 L
155.6128 204.9614 L
155.6128 194.3174 L
172.3687 211.0747 L
f
U
u
279.8379 321.3037 m
279.8799 321.3672 279.9219 321.4297 279.96 321.4961 c
280 321.5679 280.0342 321.6401 280.0693 321.7139 c
280.0879 321.7539 280.1108 321.7905 280.1279 321.8311 c
280.1362 321.8535 280.1406 321.876 280.1504 321.8979 c
280.1807 321.9766 280.2051 322.0566 280.229 322.1357 c
280.2476 322.2012 280.2676 322.2651 280.2822 322.3311 c
280.3003 322.4092 280.311 322.4893 280.3237 322.5679 c
280.332 322.6357 280.3418 322.7026 280.3486 322.7705 c
280.3545 322.8516 280.354 322.9336 280.353 323.0156 c
280.353 323.0801 280.354 323.1455 280.3486 323.2109 c
280.3433 323.2949 280.3306 323.3779 280.3179 323.4619 c
280.3086 323.5254 280.3003 323.5869 280.2856 323.6504 c
280.269 323.7324 280.2437 323.813 280.2183 323.894 c
280.1992 323.957 280.1807 324.019 280.1572 324.0801 c
280.147 324.1079 280.1406 324.1377 280.1299 324.165 c
280.1089 324.2153 280.0801 324.2603 280.0566 324.3086 c
280.0273 324.3706 279.998 324.4307 279.9639 324.4907 c
279.9243 324.563 279.8779 324.6338 279.8315 324.7021 c
279.7935 324.7568 279.7578 324.8115 279.7173 324.8628 c
279.6636 324.9321 279.6045 324.9971 279.5459 325.0615 c
279.5186 325.0918 279.4951 325.124 279.4658 325.1533 C
265.1865 339.4331 L
263.9941 340.626 262.064 340.626 260.873 339.4331 c
259.6831 338.2437 259.6831 336.3101 260.873 335.1211 C
269.9482 326.0479 L
241.6973 326.0479 L
240.6436 326.0479 239.7153 325.5151 239.1675 324.7026 c
238.8384 324.2168 238.6455 323.6294 238.6455 322.9966 c
238.6455 322.1548 238.9878 321.3916 239.5391 320.8403 c
240.0908 320.2881 240.854 319.9463 241.6973 319.9463 C
241.6973 319.9473 L
269.9463 319.9473 L
260.8726 310.8745 L
259.6831 309.6836 259.6812 307.7524 260.8726 306.561 c
261.4678 305.9644 262.25 305.666 263.0308 305.666 c
263.8115 305.666 264.5923 305.9634 265.1865 306.5581 C
279.4673 320.8413 L
279.498 320.8721 279.5205 320.9067 279.5498 320.9375 c
279.6069 320.999 279.6621 321.0625 279.7144 321.1284 c
279.7578 321.1851 279.7979 321.2441 279.8379 321.3037 c
f
U
u
218.3633 210.8672 m
218.3716 210.9365 218.3828 211.0039 218.3828 211.0728 c
218.3828 211.1465 218.3701 211.2183 218.3608 211.2905 c
218.3525 211.3599 218.3462 211.4282 218.3271 211.4961 c
218.3086 211.5649 218.2783 211.6289 218.2505 211.6948 c
218.2285 211.749 218.2173 211.8057 218.1885 211.8579 c
218.1807 211.8726 218.1665 211.8843 218.1567 211.8989 c
218.1499 211.9116 218.1475 211.9272 218.1392 211.9399 C
208.541 227.1489 L
208.063 227.9077 207.0605 228.1333 206.3027 227.6558 c
205.5439 227.1777 205.3184 226.1753 205.7974 225.4185 C
205.7964 225.4185 L
213.8242 212.6987 L
211.0586 212.6973 L
186.7715 212.6973 L
185.8765 212.6973 185.1499 211.9717 185.1499 211.0757 c
185.1499 210.6885 185.2905 210.3398 185.5156 210.0605 c
185.812 209.6919 186.2612 209.4507 186.7729 209.4507 C
212.5293 209.4517 L
213.8247 209.4517 L
205.7964 196.7324 L
205.3169 195.9736 205.5439 194.9717 206.3027 194.4922 c
206.5718 194.3242 206.8716 194.2422 207.1675 194.2422 c
207.7056 194.2422 208.2329 194.5112 208.542 195.0005 C
208.5396 195.0005 L
218.1392 210.2095 L
218.1475 210.2222 218.1499 210.2368 218.1567 210.2505 c
218.1665 210.2646 218.1807 210.2759 218.1885 210.2915 c
218.2173 210.3442 218.2295 210.4019 218.2529 210.457 c
218.2788 210.5215 218.3086 210.585 218.3271 210.6509 c
218.3472 210.7217 218.3525 210.7949 218.3633 210.8672 c
f
U
u
*u
1 D
490.3213 343.6162 m
479.5342 343.6162 470.7871 334.8716 470.7871 324.082 c
470.7871 313.2935 479.5342 304.5479 490.3213 304.5479 c
501.1113 304.5479 509.8555 313.2935 509.8555 324.082 c
509.8555 334.8716 501.1113 343.6162 490.3213 343.6162 c
f
0 D
487.0088 312.6709 m
487.0088 335.4932 L
498.4219 324.082 L
487.0088 312.6709 L
f
*U
U
u
309.1953 108.6338 m
309.1953 84.252 L
321.3857 96.4434 L
309.1953 108.6338 L
f
U
u
39.1953 57.7725 m
36.6895 58.8408 33.9302 59.4336 31.0356 59.4326 c
26.4263 59.4336 22.167 57.9307 18.7188 55.3955 C
16.6484 58.3828 L
16.5269 58.5576 16.3135 58.6416 16.105 58.5947 c
15.8975 58.5488 15.7397 58.3828 15.7036 58.1738 C
14.5073 51.1729 L
13.6641 46.2344 L
13.6367 46.0762 13.6816 45.916 13.7896 45.7969 c
13.8892 45.6846 14.0313 45.623 14.1792 45.623 c
14.1899 45.623 14.2017 45.624 14.2124 45.624 C
19.7495 45.9746 L
25.9849 46.3682 L
26.1934 46.3818 26.373 46.5176 26.4434 46.7158 c
26.5142 46.9141 26.46 47.1338 26.3047 47.2744 C
23.7065 49.6768 L
25.8076 51.0703 28.3232 51.8828 31.0356 51.8828 c
32.9375 51.8828 34.7412 51.4805 36.3784 50.7607 c
36.5073 50.7031 36.6558 50.7012 36.7871 50.7559 c
36.917 50.8086 37.022 50.9131 37.0747 51.0449 C
39.4761 57.0977 L
39.5815 57.3633 39.4575 57.6602 39.1953 57.7725 c
f
9.80811 36.8428 m
10.0522 34.1289 10.8354 31.417 12.2051 28.8672 c
14.3843 24.8076 17.7227 21.7646 21.5884 19.9248 C
19.9365 16.6875 L
19.8389 16.498 19.8662 16.2695 20.0059 16.1084 c
20.144 15.9492 20.3652 15.8877 20.5684 15.9551 C
27.3013 18.2119 L
32.0513 19.8047 L
32.2036 19.8564 32.3232 19.9717 32.377 20.123 c
32.4287 20.2637 32.416 20.4189 32.3457 20.5479 c
32.3398 20.5586 32.335 20.5674 32.3286 20.5771 C
29.4023 25.29 L
26.1055 30.5967 L
25.9937 30.7744 25.79 30.8682 25.582 30.8379 c
25.3755 30.8057 25.207 30.6553 25.1558 30.4502 C
24.2695 27.0254 L
22.0464 28.2158 20.1406 30.0508 18.8574 32.4385 c
17.958 34.1133 17.459 35.8945 17.3188 37.6768 c
17.3086 37.8174 17.2393 37.9502 17.1299 38.04 c
17.022 38.1289 16.8789 38.1719 16.7393 38.1553 C
10.2686 37.4092 L
9.9873 37.375 9.78369 37.125 9.80811 36.8428 c
f
/BBAccumRotation (2.063533) XT
42.2817 21.541 m
44.5088 23.1104 46.4653 25.1455 47.9868 27.6064 c
50.4121 31.5264 51.3765 35.9385 51.0361 40.2041 C
54.6636 40.3945 L
54.8779 40.4053 55.0605 40.543 55.1299 40.7441 c
55.2017 40.9463 55.1426 41.167 54.9824 41.3086 C
49.6602 46.0088 L
45.9048 49.3252 L
45.7832 49.4316 45.623 49.4756 45.4658 49.4463 c
45.3184 49.4209 45.1899 49.334 45.1123 49.207 c
45.1055 49.1982 45.1021 49.1875 45.0957 49.1787 C
42.479 44.2861 L
39.5352 38.7764 L
39.4365 38.5908 39.4575 38.3672 39.5898 38.2021 c
39.7197 38.0391 39.9341 37.9697 40.1362 38.0264 C
43.5469 38.9727 L
43.627 36.4531 42.9937 33.8857 41.5669 31.5791 c
40.5674 29.9619 39.2749 28.6387 37.8008 27.626 c
37.6855 27.5459 37.6055 27.4219 37.5811 27.2822 c
37.5591 27.1436 37.5938 26.9971 37.6772 26.8848 C
41.561 21.6563 L
41.7314 21.4297 42.0508 21.3789 42.2817 21.541 c
f
/BBAccumRotation (4.158351) XT
U
u
66.0435 48.002 m
68.1509 43.7627 71.1323 39.8643 74.9619 36.5977 c
81.0547 31.3936 88.3838 28.5713 95.8047 28.0332 C
95.1748 21.749 L
95.1367 21.3828 95.3257 21.0293 95.6538 20.8564 c
95.9795 20.6826 96.3755 20.7236 96.6611 20.9619 C
106.144 28.8691 L
112.833 34.4463 L
113.0479 34.626 113.167 34.8867 113.1587 35.168 c
113.1538 35.4277 113.0352 35.6719 112.8408 35.8389 c
112.8257 35.8525 112.811 35.8613 112.7949 35.873 C
105.0786 41.6602 L
96.3867 48.1758 L
96.0933 48.3945 95.7041 48.417 95.3867 48.2334 c
95.0703 48.0498 94.8955 47.7012 94.939 47.3408 C
95.6665 41.2314 L
91.3154 41.7568 87.0693 43.5234 83.4824 46.583 c
80.9668 48.7285 79.0332 51.2979 77.6831 54.0986 c
77.5771 54.3193 77.3813 54.4863 77.1484 54.5664 c
76.915 54.6416 76.6577 54.6201 76.4399 54.5078 C
66.4312 49.2129 L
65.9951 48.9795 65.8247 48.4453 66.0435 48.002 c
f
U
/BBAccumRotation (2.435171) XT
u
155.5825 58.6406 m
155.5547 58.6592 155.5317 58.6846 155.499 58.6982 c
152.7578 59.9004 149.7324 60.582 146.5493 60.6133 c
146.54 60.6133 146.5308 60.6123 146.5215 60.6123 c
146.5166 60.6123 146.5127 60.6133 146.5078 60.6133 c
146.0049 60.6182 145.5054 60.5986 145.0107 60.5664 c
144.6641 60.5469 144.3203 60.5137 143.9785 60.4785 c
143.9238 60.4736 143.8706 60.4707 143.8145 60.4648 C
143.8145 60.46 L
139.8003 60.0205 136.0889 58.5566 132.9688 56.3115 C
130.728 59.6162 L
130.5947 59.8096 130.3608 59.9033 130.1323 59.8555 c
129.9038 59.8076 129.7285 59.627 129.6865 59.3955 C
128.2939 51.7158 L
127.3145 46.2988 L
127.2822 46.123 127.3306 45.9473 127.4487 45.8145 c
127.5576 45.6904 127.7119 45.6221 127.8735 45.6191 c
127.8853 45.6191 127.8989 45.6221 127.9106 45.6221 C
133.9985 45.9443 L
140.856 46.3096 L
141.0869 46.3223 141.2856 46.4678 141.3643 46.6875 c
141.4448 46.9043 141.3877 47.1445 141.2183 47.3018 C
138.3896 49.9707 L
140.1616 51.1211 142.1958 51.8936 144.3804 52.1846 C
144.3853 52.1191 L
145.0527 52.2051 145.7314 52.2607 146.4248 52.2549 c
154.5518 52.1738 161.0723 45.5215 160.9912 37.3965 c
160.9102 29.2676 154.2588 22.748 146.1313 22.8281 c
138.0059 22.9102 131.4834 29.5625 131.5645 37.6885 c
131.5718 38.3984 131.6479 39.0898 131.752 39.7715 C
123.9126 42.7295 L
123.564 41.1758 123.3633 39.5674 123.3472 37.9102 c
123.2197 25.2412 133.3867 14.8721 146.0503 14.7471 c
158.7168 14.6221 169.0874 24.7871 169.2139 37.4512 c
169.3062 46.8848 163.6865 55.0381 155.5825 58.6406 C
f
U
u
387.376 217.9526 m
385.499 217.9526 L
357.6631 217.9526 L
357.6631 204.1973 L
385.499 204.1973 L
387.374 204.1973 L
394.252 211.0752 L
387.376 217.9526 L
f
U
u
213.7207 52.4492 m
209.8159 58.5186 L
206.4453 58.5186 L
195.0483 58.5186 L
189.4365 48.7725 L
197.2144 45.1289 L
202.6724 54.6074 L
204.0796 52.4229 L
206.4644 48.7129 L
202.3018 46.5703 L
213.2891 44.8057 L
217.5601 54.4258 L
213.7207 52.4492 L
f
183.5195 40.375 m
180.2344 33.9512 L
181.9302 31.0371 L
187.6563 21.1816 L
198.9038 21.2285 L
198.1445 29.7842 L
187.207 29.7402 L
188.3892 32.0547 L
190.397 35.9795 L
194.3413 33.458 L
190.3467 43.8457 L
179.8823 42.7021 L
183.5195 40.375 L
f
/BBAccumRotation (2.097296) XT
208.5967 21.1455 m
215.812 21.2344 L
217.6016 24.0889 L
223.6504 33.749 L
218.3682 43.6777 L
211.1528 39.0205 L
216.29 29.3633 L
213.6914 29.3311 L
209.2817 29.2773 L
209.6748 33.9443 L
202.3481 25.5684 L
208.2344 16.8418 L
208.5967 21.1455 L
f
/BBAccumRotation (4.152862) XT
U
u
238.2627 40.4131 m
238.2627 40.4951 L
238.269 40.4951 L
238.6201 45.8252 242.915 50.0703 248.2837 50.2734 C
248.2837 50.2754 L
248.3193 50.2754 L
248.4404 50.2793 248.5601 50.2939 248.6836 50.2939 c
248.8076 50.2939 248.9282 50.2793 249.0493 50.2754 C
260.1563 50.2754 L
260.1563 61.8086 L
260.1563 62.6309 260.6528 63.374 261.4106 63.6855 c
261.6641 63.793 261.9282 63.8418 262.1904 63.8418 c
262.7197 63.8418 263.2383 63.6348 263.6294 63.2471 C
280.1987 46.6738 L
280.5762 46.2969 280.7954 45.7715 280.7954 45.2354 c
280.7954 44.7021 280.5762 44.1768 280.1987 43.7998 C
263.6294 27.2305 L
263.0464 26.6475 262.1714 26.4736 261.4106 26.7881 c
260.6528 27.1035 260.1563 27.8457 260.1563 28.668 C
260.1563 40.1973 L
259.144 40.1973 L
248.7397 40.1973 L
248.6245 40.1973 L
248.4922 40.1738 248.3979 40.0918 248.3403 39.9736 C
248.3403 39.6523 L
248.3403 29.3486 L
248.3403 11.5186 L
238.2627 11.5186 L
238.2627 38.709 L
238.2236 39.0723 238.2036 39.4404 238.2036 39.8135 c
238.2036 40.0176 238.2515 40.21 238.2627 40.4131 C
f
U
u
316.9248 54.4072 m
316.9697 48.2344 L
309.2031 48.2344 L
303.4736 48.2344 L
301.5088 48.2344 L
301.5088 20.9521 L
309.2031 20.9521 L
309.2031 40.54 L
317.0352 40.5391 L
317.0869 33.8125 L
333.1133 44.1172 L
316.9248 54.4072 L
f
U
u
389.9688 51.9375 m
388.8975 57.5947 L
386.2666 53.7344 L
384.3369 54.416 382.2627 54.79 380.1006 54.79 c
369.877 54.79 361.5889 46.502 361.5889 36.2773 c
361.5889 26.0518 369.877 17.7646 380.1006 17.7646 C
380.1006 20.2061 L
371.2393 20.2061 364.0313 27.4141 364.0313 36.2773 c
364.0313 45.1396 371.2393 52.3496 380.1006 52.3496 c
381.749 52.3496 383.3398 52.0986 384.8379 51.6357 C
382.7979 48.6396 L
388.8027 49.7793 L
390.3242 50.0664 L
389.9688 51.9375 L
f
U
u
415.6846 322.0532 m
415.6846 324.7661 l
418.0586 328.3281 423.8242 329.1753 v
429.5879 330.022 423.4854 332.3984 432.7266 333.1602 c
441.9678 333.9233 454.1768 334.0908 455.1943 330.3608 c
455.3682 328.2954 454.1768 328.2954 v
452.9854 328.2954 443.498 328.6978 443.1543 328.4961 c
442.8115 328.2954 440.1357 326.9561 441.4727 326.9561 c
442.8115 326.9561 444.0811 325.5254 442.8115 324.2568 c
441.542 322.9873 441.542 322.0532 y
441.542 322.0532 441.542 320.3555 v
441.542 318.6611 439.9336 317.813 y
440.4424 316.8809 438.999 316.8809 v
437.5596 316.8809 419.7549 316.8809 y
415.6846 319.3398 415.6846 322.0532 v
f
412.0537 318.1226 m
411.5029 319.7437 411.4189 321.2822 411.4209 321.2568 C
411.4209 321.2568 L
411.335 321.9009 411.2998 322.4951 411.2998 323.0522 C
411.2998 323.0522 L
411.2764 328.6929 415.2627 330.1792 415.416 330.1816 C
415.416 330.1816 L
415.416 330.1792 L
415.9512 328.5059 L
415.9551 328.4971 415.832 328.4746 415.5654 328.3232 C
415.5654 328.3232 L
415.3018 328.1733 414.9375 327.9219 414.5693 327.5313 C
414.5693 327.5313 L
413.8369 326.7529 413.0625 325.439 413.0566 323.0522 C
413.0566 323.0522 L
413.0566 322.5713 413.0859 322.0557 413.168 321.4248 C
413.168 321.4248 L
413.1797 321.4248 413.249 320.0371 413.7188 318.6938 C
413.7188 318.6938 L
414.209 317.291 414.9434 316.2856 416.0254 316.3174 C
416.0254 316.3174 L
416.0254 314.563 L
413.7129 314.5933 412.582 316.5562 412.0537 318.1226 C
412.0537 318.1226 L
f
U
u
*u
1 D
547.0488 340.9492 m
537.7324 340.9492 530.1807 333.3984 530.1807 324.082 c
530.1807 314.7661 537.7324 307.2148 547.0488 307.2148 c
556.3633 307.2148 563.915 314.7661 563.915 324.082 c
563.915 333.3984 556.3633 340.9492 547.0488 340.9492 c
f
0 D
548.8564 314.8965 m
542.7998 314.8965 L
549.7832 321.8779 L
536.0605 321.8779 L
536.0605 326.3223 L
549.7334 326.3223 L
542.7891 333.2695 L
548.8564 333.2593 L
558.0371 324.0771 L
548.8564 314.8965 L
f
*U
U
u
268.6426 150.6475 m
268.668 150.6836 268.6909 150.7197 268.7134 150.7588 c
268.7363 150.8008 268.7568 150.8428 268.7769 150.8848 c
268.7871 150.9092 268.8022 150.9307 268.8101 150.9531 c
268.8179 150.9658 268.8179 150.9795 268.8228 150.9922 c
268.8403 151.0371 268.853 151.084 268.8687 151.1309 c
268.8784 151.1689 268.8911 151.2061 268.9014 151.2441 c
268.9116 151.29 268.9165 151.335 268.9243 151.3809 c
268.9292 151.4199 268.9346 151.46 268.9395 151.499 c
268.9419 151.5459 268.9419 151.5928 268.9395 151.6396 c
268.9395 151.6777 268.9419 151.7158 268.9395 151.7539 c
268.937 151.8037 268.9268 151.8516 268.9219 151.9004 c
268.9141 151.9375 268.9116 151.9727 268.9014 152.0098 c
268.8911 152.0566 268.8784 152.1035 268.8633 152.1514 c
268.853 152.1885 268.8403 152.2236 268.8276 152.2598 c
268.8203 152.2744 268.8179 152.293 268.8125 152.3086 c
268.7998 152.3369 268.7822 152.3633 268.7695 152.3916 c
268.7515 152.4268 268.7339 152.4629 268.7163 152.498 c
268.6934 152.54 268.6655 152.5811 268.6372 152.6201 c
268.6172 152.6523 268.5967 152.6836 268.5737 152.7129 c
268.541 152.7539 268.5078 152.791 268.4722 152.8281 c
268.457 152.8477 268.4443 152.8652 268.4268 152.8828 C
260.1367 161.1719 L
259.4434 161.8633 258.3237 161.8633 257.6333 161.1719 c
256.9424 160.4814 256.9424 159.3584 257.6333 158.6699 C
262.9019 153.4023 L
246.502 153.4023 L
245.8901 153.4023 245.3491 153.0928 245.0317 152.6211 c
244.8413 152.3379 244.7295 151.998 244.7295 151.6299 c
244.7295 151.1406 244.9277 150.6992 245.2476 150.3779 c
245.5674 150.0566 246.0117 149.8604 246.502 149.8604 C
246.502 149.8604 L
262.9019 149.8604 L
257.6333 144.5928 L
256.9424 143.9023 256.9424 142.7813 257.6333 142.0898 c
257.9785 141.7432 258.4302 141.5684 258.8848 141.5684 c
259.3394 141.5684 259.7915 141.7412 260.1367 142.0869 C
268.4268 150.3779 L
268.4443 150.3955 268.4595 150.416 268.4751 150.4336 c
268.5078 150.4697 268.541 150.5059 268.5713 150.5459 c
268.5967 150.5791 268.6196 150.6133 268.6426 150.6475 c
f
u
*u
1 D
257.9097 172.4971 m
246.3853 172.4971 237.0439 163.1563 237.0439 151.6299 c
237.0439 140.1055 246.3853 130.7627 257.9097 130.7627 c
269.4346 130.7627 278.7783 140.1055 278.7783 151.6299 c
278.7783 163.1563 269.4346 172.4971 257.9097 172.4971 c
f
0 D
257.9126 133.8125 m
248.0889 133.8125 240.0933 141.8066 240.0933 151.6289 c
240.0933 161.4531 248.0889 169.4463 257.9126 169.4463 c
267.7334 169.4463 275.729 161.4531 275.729 151.6289 c
275.729 141.8066 267.7334 133.8125 257.9126 133.8125 c
f
*U
U
U
u
*u
1 D
1 XR
427.6602 229.6074 m
424.085 229.437 422.8174 225.8633 421.3613 223.4082 c
420.4766 221.9165 419.5703 220.4922 418.999 219.2744 C
421.8359 217.6836 424.6641 216.083 427.4619 214.4526 C
429.3594 217.9023 431.3545 221.2549 433.3672 224.5889 C
432.2363 227.1177 430.9668 229.7646 427.6602 229.6074 c
f
432.1846 227.4429 m
433.7793 224.8857 435.3887 221.3809 436.8105 218.7832 C
436.1123 218.1357 435.0156 217.8896 434.3516 217.209 C
437.8311 217.2573 440.8984 217.1089 443.6992 217.1099 C
445.3291 219.9409 446.9463 222.7847 448.6201 225.5728 C
447.4453 225.1387 446.665 224.3145 445.4697 223.9009 C
444.3438 225.3149 443.8691 227.4033 442.8125 228.7222 c
442.0234 229.71 439.4502 229.5742 437.5977 229.6074 c
434.7383 229.6606 431.5449 229.5146 429.8232 229.5093 C
430.9248 229.0767 431.6055 228.3721 432.1846 227.4429 c
f
450.7832 202.0547 m
451.5273 203.3418 453.5479 205.9609 453.6367 207.5645 c
453.709 208.8428 453 209.5244 452.4561 210.5171 c
451.3164 212.603 449.7852 215.8237 448.6201 217.6025 C
445.8213 215.938 443.0186 214.2813 440.1572 212.6816 C
441.3008 210.3232 442.6709 208.1143 443.9932 205.6958 c
445.4521 203.0308 447.4453 200.2749 447.7334 196.7402 C
448.665 198.5493 449.6797 200.144 450.7832 202.0547 c
f
415.3584 213.3711 m
414.5684 211.3613 412.2148 209.5435 412.4072 207.27 c
412.5146 206.0103 413.4004 204.9097 413.9814 203.8257 c
415.3125 201.3438 416.8975 198.3169 418.2119 196.2476 C
417.9658 197.3408 418.415 198.3423 418.6055 199.2998 C
420.5176 202.2095 422.0449 205.5024 424.0176 208.3525 C
424.835 207.9224 425.5615 207.4033 426.3799 206.9751 C
425.0498 209.6958 423.5068 212.4863 422.0508 215.3389 C
418.8691 215.3389 415.6885 215.3389 412.5039 215.3389 C
413.2705 214.4971 414.5908 214.2104 415.3584 213.3711 C
f
433.957 196.7402 m
435.4746 193.8638 436.958 190.9502 438.6807 188.2788 C
438.7021 189.4277 438.5752 190.9043 438.7793 192.1152 C
443.7803 191.4668 447.2217 193.2173 447.3398 197.332 c
447.3955 199.3198 446.3574 200.5386 445.667 202.0547 C
443.4043 202.1191 440.8779 201.9238 438.7793 202.1538 C
438.7119 203.1377 438.9102 204.3828 438.6807 205.2031 C
437.2217 202.2666 435.4355 199.6577 433.957 196.7402 C
f
420.4756 201.7588 m
419.0322 199.8252 417.6416 196.8901 418.999 194.478 c
421.0439 190.8423 427.1045 192.1216 431.6943 192.1152 C
431.7021 196.4346 431.7656 197.6924 431.792 201.8579 C
427.2051 201.8682 423.7852 201.8428 420.4756 201.7588 C
f
*U
0 D
433.3672 224.5889 m
431.3545 221.2549 429.3594 217.9023 427.4619 214.4526 C
424.6641 216.083 421.8359 217.6836 418.999 219.2744 C
419.5703 220.4922 420.4766 221.9165 421.3613 223.4082 c
422.8174 225.8633 424.085 229.437 427.6602 229.6074 c
430.9668 229.7646 432.2363 227.1177 433.3672 224.5889 C
f
429.8232 229.5093 m
431.5449 229.5146 434.7383 229.6606 437.5977 229.6074 c
439.4502 229.5742 442.0234 229.71 442.8125 228.7222 c
443.8691 227.4033 444.3438 225.3149 445.4697 223.9009 C
446.665 224.3145 447.4453 225.1387 448.6201 225.5728 C
446.9463 222.7847 445.3291 219.9409 443.6992 217.1099 C
440.8984 217.1089 437.8311 217.2573 434.3516 217.209 C
435.0156 217.8896 436.1123 218.1357 436.8105 218.7832 C
435.3887 221.3809 433.7793 224.8857 432.1846 227.4429 c
431.6055 228.3721 430.9248 229.0767 429.8232 229.5093 C
f
447.7334 196.7402 m
447.4453 200.2749 445.4521 203.0308 443.9932 205.6958 c
442.6709 208.1143 441.3008 210.3232 440.1572 212.6816 C
443.0186 214.2813 445.8213 215.938 448.6201 217.6025 C
449.7852 215.8237 451.3164 212.603 452.4561 210.5171 c
453 209.5244 453.709 208.8428 453.6367 207.5645 c
453.5479 205.9609 451.5273 203.3418 450.7832 202.0547 c
449.6797 200.144 448.665 198.5493 447.7334 196.7402 C
f
412.5039 215.3389 m
415.6885 215.3389 418.8691 215.3389 422.0508 215.3389 C
423.5068 212.4863 425.0498 209.6958 426.3799 206.9751 C
425.5615 207.4033 424.835 207.9224 424.0176 208.3525 C
422.0449 205.5024 420.5176 202.2095 418.6055 199.2998 C
418.415 198.3423 417.9658 197.3408 418.2119 196.2476 C
416.8975 198.3169 415.3125 201.3438 413.9814 203.8257 c
413.4004 204.9097 412.5146 206.0103 412.4072 207.27 c
412.2148 209.5435 414.5684 211.3613 415.3584 213.3711 C
414.5908 214.2104 413.2705 214.4971 412.5039 215.3389 C
f
438.6807 205.2031 m
438.9102 204.3828 438.7119 203.1377 438.7793 202.1538 C
440.8779 201.9238 443.4043 202.1191 445.667 202.0547 C
446.3574 200.5386 447.3955 199.3198 447.3398 197.332 c
447.2217 193.2173 443.7803 191.4668 438.7793 192.1152 C
438.5752 190.9043 438.7021 189.4277 438.6807 188.2788 C
436.958 190.9502 435.4746 193.8638 433.957 196.7402 C
435.4355 199.6577 437.2217 202.2666 438.6807 205.2031 C
f
431.792 201.8579 m
431.7656 197.6924 431.7021 196.4346 431.6943 192.1152 C
427.1045 192.1216 421.0439 190.8423 418.999 194.478 c
417.6416 196.8901 419.0322 199.8252 420.4756 201.7588 C
423.7852 201.8428 427.2051 201.8682 431.792 201.8579 C
f
U
u
*u
1 D
489.7451 189.0898 m
501.084 188.8413 510.2539 198.1543 509.9346 209.4229 c
509.7715 215.2612 507.2227 219.9624 503.9219 223.1694 c
500.748 226.249 495.8027 229.2808 489.0293 228.7529 c
479.8164 228.0366 474.4004 222.8584 471.5596 215.4365 C
479.4844 215.4365 487.4063 215.4365 495.3301 215.4365 C
495.3535 217.0449 495.3145 219.8037 495.3301 221.8809 C
498.7373 218.9429 501.9346 215.4199 505.2109 212.1436 c
505.6084 211.7446 508.5254 209.3618 508.5039 208.8501 c
508.502 208.7993 507.3047 207.6519 506.9287 207.2749 c
505.1055 205.4531 503.5664 204.0566 501.916 202.4063 c
499.5801 200.0688 497.582 197.6338 495.3301 196.1069 C
495.3125 198.1353 495.3535 200.8447 495.3301 202.4063 C
487.4063 202.4063 479.4844 202.4063 471.5596 202.4063 C
474.373 194.6885 480.7178 189.2866 489.7451 189.0898 c
f
*U
0 D
471.5596 202.4063 m
479.4844 202.4063 487.4063 202.4063 495.3301 202.4063 C
495.3535 200.8447 495.3125 198.1353 495.3301 196.1069 C
497.582 197.6338 499.5801 200.0688 501.916 202.4063 c
503.5664 204.0566 505.1055 205.4531 506.9287 207.2749 c
507.3047 207.6519 508.502 208.7993 508.5039 208.8501 c
508.5254 209.3618 505.6084 211.7446 505.2109 212.1436 c
501.9346 215.4199 498.7373 218.9429 495.3301 221.8809 C
495.3145 219.8037 495.3535 217.0449 495.3301 215.4365 C
487.4063 215.4365 479.4844 215.4365 471.5596 215.4365 C
474.4004 222.8584 479.8164 228.0366 489.0293 228.7529 c
495.8027 229.2808 500.748 226.249 503.9219 223.1694 c
507.2227 219.9624 509.7715 215.2612 509.9346 209.4229 c
510.2539 198.1543 501.084 188.8413 489.7451 189.0898 c
480.7178 189.2866 474.373 194.6885 471.5596 202.4063 C
f
U
u
556.8672 191.7305 m
556.8291 191.7305 556.7939 191.7305 556.7559 191.7305 C
555.7578 193.833 554.4609 195.6357 553.4346 197.71 C
551.1416 196.4912 548.6533 195.5166 545.4648 195.4976 c
537.1055 195.4404 531.2734 201.6138 530.1846 209.4458 C
530.1846 210.3687 530.1846 211.2915 530.1846 212.2144 C
530.7832 222.0254 542.3799 229.6719 552.2188 224.5034 C
551.3174 222.6362 550.6572 220.5288 549.5605 218.8569 C
543.4922 221.6953 537.0957 217.8564 536.4961 211.9937 c
535.6992 204.2114 543.4785 199.4429 550.1133 203.1362 C
549.2119 205.3325 547.5439 207.355 546.793 209.3354 C
553.4727 209.2617 560.4473 209.4824 566.9424 209.2236 C
563.6318 203.3433 560.2471 197.5415 556.8672 191.7305 C
f
U
u
*u
1 D
0 XR
452.9141 270.9297 m
451.793 272.0508 L
451.6006 272.2427 451.335 272.3545 451.0625 272.3545 C
434.9756 272.3545 L
434.9756 273.0513 L
435.7861 273.0488 L
436.0615 273.0488 436.3242 273.1567 436.5186 273.3521 c
436.7129 273.5503 436.8203 273.8091 436.8203 274.0835 C
436.8203 279.4839 L
436.8203 279.7583 436.7129 280.021 436.5186 280.2139 c
436.3242 280.4092 436.0615 280.5186 435.7861 280.5186 C
430.7813 280.5186 L
430.5068 280.5186 430.2432 280.4058 430.0498 280.2139 c
429.8574 280.0249 429.748 279.7568 429.748 279.4839 C
429.748 278.6768 L
429.5986 278.6729 L
429.3242 278.6729 429.0547 278.5649 428.8643 278.3691 c
428.6729 278.1777 428.5625 277.9136 428.5625 277.6392 C
428.5625 276.9629 L
424.8555 276.9629 L
424.584 276.9629 424.3145 276.8496 424.124 276.6592 c
423.9307 276.4678 423.8203 276.1997 423.8203 275.9277 C
423.8203 275.249 L
421.5645 275.249 L
421.2891 275.249 421.0234 275.1406 420.8311 274.9453 c
420.6377 274.7524 420.5283 274.4897 420.5283 274.2139 C
420.5283 273.5376 L
418.2705 273.5376 L
417.9951 273.5376 417.7305 273.4243 417.5361 273.2339 c
417.3447 273.0435 417.2354 272.7759 417.2354 272.5029 C
417.2354 271.958 L
414.3184 271.958 L
414.0439 271.958 413.7803 271.8467 413.5869 271.6548 c
413.3936 271.4629 413.2852 271.1938 413.2852 270.9233 C
413.2852 255.9189 L
413.2852 255.4849 413.5537 255.1016 413.96 254.9492 C
417.3779 253.687 L
417.5068 253.4648 417.7158 253.2949 417.9746 253.2173 C
422.2793 251.9302 L
422.3174 251.8701 422.3623 251.8135 422.4131 251.7627 c
422.6035 251.5708 422.8701 251.4629 423.1436 251.4629 C
434.042 251.4629 L
434.3857 251.5186 L
437.7109 252.6953 L
437.9268 252.7715 438.1064 252.915 438.2324 253.1069 C
439.4639 254.9971 L
439.5869 254.9478 439.7188 254.9209 439.8506 254.9209 c
440.1152 254.9209 440.3789 255.0239 440.5801 255.2256 C
441.8311 256.4751 L
442.0273 256.6743 442.1357 256.9321 442.1357 257.209 C
442.1357 259.5967 L
442.1768 259.5903 442.2178 259.5713 442.2588 259.5713 c
442.5244 259.5713 442.79 259.6719 442.9932 259.875 C
444.3428 261.2266 L
444.5352 261.4209 444.6436 261.6777 444.6436 261.957 C
444.6436 264.5884 L
450.9648 264.5884 L
451.2383 264.5884 451.5 264.6963 451.6953 264.8906 C
452.9141 266.1108 L
453.1104 266.3037 453.2188 266.564 453.2188 266.8394 C
453.2188 270.1987 L
453.2188 270.4727 453.1104 270.7344 452.9141 270.9297 C
f
0 D
451.1475 267.2686 m
450.5381 266.6553 L
435.126 266.6553 L
434.5557 266.6553 434.0928 266.1934 434.0928 265.6221 c
434.0928 265.0508 434.5557 264.5884 435.126 264.5884 C
442.5781 264.5884 L
442.5781 262.3887 L
441.8516 261.6621 L
441.8438 261.6709 441.8418 261.6836 441.8311 261.6929 c
441.6367 261.8882 441.376 261.9961 441.1016 261.9961 C
436.1621 261.9961 L
435.5908 261.9961 435.126 261.5327 435.126 260.9614 c
435.126 260.3916 435.5908 259.9258 436.1621 259.9258 C
440.0654 259.9258 L
440.0654 257.6392 L
439.6152 257.1885 L
439.4551 257.2852 439.2705 257.3394 439.0762 257.3394 C
433.2852 257.3394 L
432.7139 257.3394 432.25 256.876 432.25 256.3047 c
432.25 255.7334 432.7139 255.27 433.2852 255.27 C
437.1719 255.27 L
436.6895 254.5313 L
433.8643 253.5283 L
423.8203 253.5283 L
423.7129 253.6211 423.583 253.6958 423.4414 253.7393 C
419.1318 255.0288 L
419.0127 255.209 418.8398 255.3525 418.627 255.4302 C
415.3516 256.6387 L
415.3516 269.8887 L
418.2705 269.8887 L
418.5459 269.8887 418.8057 269.9966 419 270.1924 c
419.1953 270.3867 419.3027 270.6465 419.3027 270.9233 C
419.3027 271.4707 L
421.5645 271.4707 L
421.8389 271.4707 422.1006 271.5786 422.2949 271.7715 c
422.4902 271.9668 422.5957 272.2275 422.5957 272.5029 C
422.5957 273.1797 L
424.8555 273.1797 L
425.1299 273.1797 425.3906 273.2886 425.585 273.4878 c
425.7803 273.6807 425.8887 273.9414 425.8887 274.2139 C
425.8887 274.8945 L
429.5986 274.8945 L
429.8721 274.8945 430.1299 275.0024 430.3281 275.1968 c
430.5225 275.3921 430.6289 275.6499 430.6289 275.9277 C
430.6289 276.6045 L
430.7813 276.6045 L
431.0566 276.6045 431.3193 276.7124 431.5137 276.9121 c
431.708 277.106 431.8145 277.3652 431.8145 277.6392 C
431.8145 278.4492 L
434.7539 278.4492 L
434.7539 275.1182 L
433.9424 275.1182 L
433.668 275.1182 433.4033 275.0088 433.2109 274.8145 c
433.0156 274.623 432.9092 274.3574 432.9092 274.0835 C
432.9092 272.3545 L
428.8076 272.3545 L
428.5322 272.3545 428.2676 272.2427 428.0762 272.0508 c
427.8809 271.8555 427.7725 271.5898 427.7725 271.3193 c
427.7725 271.0415 427.8779 270.7827 428.0762 270.5884 c
428.2705 270.3926 428.5293 270.2852 428.8076 270.2852 C
433.9424 270.2852 L
450.6318 270.2852 L
451.1475 269.772 L
451.1475 267.2686 L
f
*U
U
u
1 Ap
1 O
338.1934 150.8086 m
338.1934 149.5986 337.2139 148.6191 336.0029 148.6191 c
334.7969 148.6191 333.8135 149.5986 333.8135 150.8086 c
333.8135 152.0176 334.7969 152.9971 336.0029 152.9971 c
337.2139 152.9971 338.1934 152.0176 338.1934 150.8086 c
f
333.2295 155.7715 m
333.2295 154.5615 332.25 153.5811 331.041 153.5811 c
329.833 153.5811 328.8525 154.5615 328.8525 155.7715 c
328.8525 156.9795 329.833 157.96 331.041 157.96 c
332.25 157.96 333.2295 156.9795 333.2295 155.7715 c
f
328.2686 160.7334 m
328.2686 159.5234 327.2881 158.5439 326.0771 158.5439 c
324.8711 158.5439 323.8887 159.5234 323.8887 160.7334 c
323.8887 161.9414 324.8711 162.9229 326.0771 162.9229 c
327.2881 162.9229 328.2686 161.9414 328.2686 160.7334 c
f
323.3047 165.6963 m
323.3047 164.4863 322.3242 163.5068 321.1162 163.5068 c
319.9072 163.5068 318.9277 164.4863 318.9277 165.6963 c
318.9277 166.9033 319.9072 167.8848 321.1162 167.8848 c
322.3242 167.8848 323.3047 166.9033 323.3047 165.6963 c
f
331.041 148.0361 m
332.25 148.0361 333.2295 147.0547 333.2295 145.8457 c
333.2295 144.6377 332.25 143.6572 331.041 143.6572 c
329.833 143.6572 328.8525 144.6377 328.8525 145.8457 c
328.8525 147.0547 329.833 148.0361 331.041 148.0361 c
f
/BBAccumRotation (1.570796) XT
326.0771 143.0732 m
327.2881 143.0732 328.2686 142.0918 328.2686 140.8838 c
328.2686 139.6748 327.2881 138.6943 326.0771 138.6943 c
324.8711 138.6943 323.8887 139.6748 323.8887 140.8838 c
323.8887 142.0918 324.8711 143.0732 326.0771 143.0732 c
f
/BBAccumRotation (1.570796) XT
321.1162 138.1104 m
322.3242 138.1104 323.3047 137.1289 323.3047 135.9209 c
323.3047 134.7119 322.3242 133.7324 321.1162 133.7324 c
319.9072 133.7324 318.9277 134.7119 318.9277 135.9209 c
318.9277 137.1289 319.9072 138.1104 321.1162 138.1104 c
f
/BBAccumRotation (1.570796) XT
328.3828 152.3584 m
329.2383 151.5029 329.2383 150.1152 328.3828 149.2607 c
327.5293 148.4063 326.1406 148.4063 325.2852 149.2607 c
324.4316 150.1152 324.4316 151.5029 325.2852 152.3574 c
326.1406 153.2119 327.5293 153.2119 328.3828 152.3584 c
f
/BBAccumRotation (0.785398) XT
321.3652 152.3584 m
322.2178 151.5029 322.2178 150.1152 321.3652 149.2607 c
320.5088 148.4063 319.123 148.4063 318.2695 149.2607 c
317.4141 150.1152 317.4141 151.5029 318.2695 152.3574 c
319.123 153.2119 320.5088 153.2119 321.3652 152.3584 c
f
/BBAccumRotation (0.785398) XT
314.3467 152.3584 m
315.2021 151.5029 315.2021 150.1152 314.3467 149.2607 c
313.4912 148.4063 312.1045 148.4063 311.252 149.2607 c
310.3965 150.1152 310.3965 151.5029 311.252 152.3574 c
312.1045 153.2119 313.4912 153.2119 314.3467 152.3584 c
f
/BBAccumRotation (0.785398) XT
307.3291 152.3584 m
308.1846 151.5029 308.1846 150.1152 307.3291 149.2607 c
306.4736 148.4063 305.0869 148.4063 304.2334 149.2607 c
303.3779 150.1152 303.3779 151.5029 304.2334 152.3574 c
305.0869 153.2119 306.4736 153.2119 307.3291 152.3584 c
f
/BBAccumRotation (0.785398) XT
300.3105 152.3584 m
301.167 151.5029 301.167 150.1152 300.3105 149.2607 c
299.4551 148.4063 298.0713 148.4063 297.2158 149.2607 c
296.3604 150.1152 296.3604 151.5029 297.2158 152.3574 c
298.0713 153.2119 299.4551 153.2119 300.3105 152.3584 c
f
/BBAccumRotation (0.785398) XT
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
